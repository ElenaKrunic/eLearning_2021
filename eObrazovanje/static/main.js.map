{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/admin-add-exam-period/admin-add-exam-period.component.ts","./src/app/admin-add-exam-period/admin-add-exam-period.component.html","./src/app/admin-add-financial-card/admin-add-financial-card.component.ts","./src/app/admin-add-financial-card/admin-add-financial-card.component.html","./src/app/admin-course/admin-course.component.html","./src/app/admin-course/admin-course.component.ts","./src/app/admin-details-exam-period/admin-details-exam-period.component.html","./src/app/admin-details-exam-period/admin-details-exam-period.component.ts","./src/app/admin-details-financial-card/admin-details-financial-card.component.html","./src/app/admin-details-financial-card/admin-details-financial-card.component.ts","./src/app/admin-documents/admin-documents.component.ts","./src/app/admin-documents/admin-documents.component.html","./src/app/admin-exam/admin-exam.component.html","./src/app/admin-exam/admin-exam.component.ts","./src/app/admin-financial-card/admin-financial-card.component.html","./src/app/admin-financial-card/admin-financial-card.component.ts","./src/app/admin-list-exam-period/admin-list-exam-period.component.html","./src/app/admin-list-exam-period/admin-list-exam-period.component.ts","./src/app/admin-list-financial-card/admin-list-financial-card.component.html","./src/app/admin-list-financial-card/admin-list-financial-card.component.ts","./src/app/admin-payment/admin-payment.component.html","./src/app/admin-payment/admin-payment.component.ts","./src/app/admin-preexam-obligation/admin-preexam-obligation.component.html","./src/app/admin-preexam-obligation/admin-preexam-obligation.component.ts","./src/app/admin-professors/admin-professors.component.html","./src/app/admin-professors/admin-professors.component.ts","./src/app/admin-student/admin-student.component.html","./src/app/admin-student/admin-student.component.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/app/core/navbar-admin/navbar-admin.component.ts","./src/app/core/navbar-admin/navbar-admin.component.html","./src/app/core/navbar-professor/navbar-professor.component.ts","./src/app/core/navbar-professor/navbar-professor.component.html","./src/app/core/navbar-student/navbar-student.component.ts","./src/app/core/navbar-student/navbar-student.component.html","./src/app/courses/courses.service.ts","./src/app/exam-period-details/exam-period-details.component.ts","./src/app/exam-period-details/exam-period-details.component.html","./src/app/exam-period/exam-period.service.ts","./src/app/exam/exam.service.ts","./src/app/financial-card-details/financial-card-details.component.ts","./src/app/financial-card-details/financial-card-details.component.html","./src/app/financial-card/financialcard.service.ts","./src/app/financialcard-student/financialcard-student.component.ts","./src/app/financialcard-student/financialcard-student.component.html","./src/app/jwtservice/jwtserviceutils.service.ts","./src/app/login/authentication.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/main.component.ts","./src/app/model/exam-period.ts","./src/app/model/financial-card.ts","./src/app/model/payment.ts","./src/app/model/preexam-obligation.ts","./src/app/model/professor.ts","./src/app/model/student.ts","./src/app/payment-details/payment-details.component.ts","./src/app/payment-details/payment-details.component.html","./src/app/payment/payment.component.html","./src/app/payment/payment.component.ts","./src/app/payment/payment.service.ts","./src/app/payout/payout.component.html","./src/app/payout/payout.component.ts","./src/app/preexam-obligation-details/preexam-obligation-details.component.ts","./src/app/preexam-obligation-details/preexam-obligation-details.component.html","./src/app/preexam-obligation/preexam-obligation.component.ts","./src/app/preexam-obligation/preexam-obligation.component.html","./src/app/preexam-obligation/preexam-obligation.service.ts","./src/app/professor-courses/professor-courses.component.ts","./src/app/professor-courses/professor-courses.component.html","./src/app/professor-exams/professor-exams.component.ts","./src/app/professor-exams/professor-exams.component.html","./src/app/professor-profile/professor-profile.component.ts","./src/app/professor-profile/professor-profile.component.html","./src/app/professor-students/professor-students.component.ts","./src/app/professor/professor.service.ts","./src/app/routing/app-routing.module.ts","./src/app/student-details/student-details.component.ts","./src/app/student-details/student-details.component.html","./src/app/student-documents/student-documents.component.ts","./src/app/student-documents/student-documents.component.html","./src/app/student-enrollment/student-enrollment.component.ts","./src/app/student-enrollment/student-enrollment.component.html","./src/app/student-exams/student-exams.component.html","./src/app/student-exams/student-exams.component.ts","./src/app/student-profile/student-profile.component.ts","./src/app/student-profile/student-profile.component.html","./src/app/students/student.service.ts","./src/app/students/students.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\r\nimport { ExamPeriodService } from '../exam-period/exam-period.service';\r\nimport { ExamPeriod } from '../model/exam-period';\r\n\r\n@Component({\r\n  selector: 'app-admin-add-exam-period',\r\n  templateUrl: './admin-add-exam-period.component.html',\r\n  styleUrls: ['./admin-add-exam-period.component.css']\r\n})\r\nexport class AdminAddExamPeriodComponent implements OnInit {\r\n\r\n  examPeriod: ExamPeriod = new ExamPeriod({\r\n    name: '',\r\n    startDate : '', \r\n    endDate: '',\r\n    paymentAmount : 0\r\n  });\r\n\r\n  submitted = false; \r\n\r\n  constructor(private examPeriodService: ExamPeriodService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  saveExamPeriod() {\r\n    const data = {\r\n      name : this.examPeriod.name,\r\n      startDate : this.examPeriod.startDate,\r\n      endDate : this.examPeriod.endDate, \r\n      paymentAmount: this.examPeriod.paymentAmount\r\n    }; \r\n\r\n    this.examPeriodService.create(data)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.submitted = true; \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  newExamPeriod(){\r\n    this.submitted = false; \r\n    this.examPeriod = {\r\n      name: '', \r\n      startDate: '',\r\n      endDate: '',\r\n      paymentAmount: 445\r\n    };\r\n  }\r\n}\r\n","<div style=\"width: 400px; margin: auto;\">\r\n    <div class=\"submit-form\">\r\n        <div *ngIf=\"!submitted\">\r\n            <div class=\"form-group\">\r\n                <label for=\"name\"> Ime </label>\r\n                <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"examPeriod.name\" name=\"name\"/>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"description\"> Datum pocetka </label>\r\n                <input type=\"date\" class=\"form-control\" id=\"startDate\" required [(ngModel)]=\"examPeriod.startDate\" name=\"startDate\"/>\r\n            </div>\r\n\r\n            \r\n            <div class=\"form-group\">\r\n                <label for=\"description\"> Datum kraja </label>\r\n                <input type=\"date\" class=\"form-control\" id=\"endDate\" required [(ngModel)]=\"examPeriod.endDate\" name=\"endDate\"/>\r\n            </div>\r\n\r\n            \r\n            <div class=\"form-group\">\r\n                <label for=\"description\"> Iznos za uplatu </label>\r\n                <input type=\"number\" class=\"form-control\" id=\"paymentAmount\" required [(ngModel)]=\"examPeriod.paymentAmount\" name=\"paymentAmount\"/>\r\n            </div>\r\n\r\n            <button (click)=\"saveExamPeriod()\" class=\"btn btn-success\"> Potvrdi </button>\r\n        </div>\r\n\r\n        <div *ngIf=\"submitted\">\r\n            <h4> Uspjesno ste kreirali novi ispitni rok!</h4>\r\n            <button class=\"btn btn-success\" (click)=\"newExamPeriod()\"> Dodaj novi ispitni rok </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FinancialcardService } from '../financial-card/financialcard.service';\nimport { FinancialCard } from '../model/financial-card';\n\n@Component({\n  selector: 'app-admin-add-financial-card',\n  templateUrl: './admin-add-financial-card.component.html',\n  styleUrls: ['./admin-add-financial-card.component.css']\n})\nexport class AdminAddFinancialCardComponent implements OnInit {\n\n  financialCard: FinancialCard = new FinancialCard({\n    initialState: 0, \n    totalPayment : 0, \n    totalPayout : 0, \n    totalCost : 0,\n    student : null\n  });\n\n  submitted = false; \n\n  constructor(private financialCardService : FinancialcardService) { }\n\n  ngOnInit(): void {\n  }\n\n  saveFinancialCard() {\n    const data = {\n      initialState: this.financialCard.initialState, \n      totalPayment : this.financialCard.totalPayment, \n      totalPayout : this.financialCard.totalPayout, \n      totalCost : this.financialCard.totalCost\n    }; \n\n    this.financialCardService.create(data)\n    .subscribe(\n      response => {\n        console.log(response); \n        this.submitted = true; \n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  newFinancialCard(){\n    this.submitted = false; \n    this.financialCard = {\n      initialState: 0, \n      totalPayment : 0, \n      totalPayout : 0, \n      totalCost : 0,\n      student : null\n    };\n  }\n\n}\n","<div style=\"width: 400px; margin: auto;\">\n    <div class=\"submit-form\">\n        <div *ngIf=\"!submitted\">\n            <div class=\"form-group\">\n                <label for=\"initialState\"> Pocetno stanje </label>\n                <input type=\"number\" class=\"form-control\" id=\"initialState\" required [(ngModel)]=\"financialCard.initialState\" name=\"initialState\"/>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"totalPayment\"> Ukupan iznos </label>\n                <input type=\"number\" class=\"form-control\" id=\"totalPayment\" required [(ngModel)]=\"financialCard.totalPayment\" name=\"totalPayment\"/>\n            </div>\n            \n            <div class=\"form-group\">\n                <label for=\"totalPayout\"> Ukupna isplata </label>\n                <input type=\"number\" class=\"form-control\" id=\"totalPayout\" required [(ngModel)]=\"financialCard.totalPayout\" name=\"totalPayout\"/>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"totalCost\"> Ukupni troskovi </label>\n                <input type=\"number\" class=\"form-control\" id=\"totalCost\" required [(ngModel)]=\"financialCard.totalCost\" name=\"totalCost\"/>\n            </div>\n\n            <button (click)=\"saveFinancialCard()\" class=\"btn btn-success\"> Potvrdi </button>\n        </div>\n\n        <div *ngIf=\"submitted\">\n            <h4> Uspjesno ste kreirali novu finansijsku karticu!</h4>\n            <button class=\"btn btn-success\" (click)=\"newFinancialCard()\"> Dodaj novu finansijsku karticu.. </button>\n        </div>\n    </div>\n</div>\n","<!-- start date, end date, name-->\r\n<div>\r\n    <h3> Course </h3>\r\n</div>\r\n\r\n<table class=\"table table-bordered\">\r\n    <tr>\r\n        <th>Title</th>\r\n        <th>Start date</th>\r\n        <th>End date</th>\r\n        <th>Course code</th>\r\n        <th>ECTS</th>\r\n        <th>Enrollments</th>\r\n        <th>Teachings</th>\r\n    </tr>\r\n    <tr *ngFor=\"let course of courses\">\r\n        <td>\r\n            {{course.title}}\r\n        </td>\r\n        <td>\r\n            {{course.startDate}}\r\n        </td>\r\n        <td>\r\n            {{course.endDate}}\r\n        </td>\r\n        <td>\r\n            {{course.courseCode}}\r\n        </td>\r\n        <td>\r\n            {{course.ECTS}}\r\n        </td>\r\n        <td>\r\n            {{course.enrollments}}\r\n        </td>\r\n        <td>\r\n            {{course.teachings}}\r\n        </td>\r\n        <td>\r\n            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(course)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(course.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n        </td>\r\n    </tr>\r\n</table>\r\n<div class=\"right\">\r\n    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CoursesService } from '../courses/courses.service';\r\nimport { Course } from '../model/course';\r\n\r\n@Component({\r\n  selector: 'app-admin-course',\r\n  templateUrl: './admin-course.component.html',\r\n  styleUrls: ['./admin-course.component.css']\r\n})\r\nexport class AdminCourseComponent implements OnInit {\r\n\r\n  courses : Course[];\r\n  subscription : Subscription;\r\n\r\n  constructor(private courseService: CoursesService, private router: Router) {\r\n    this.getCourses();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourses();\r\n  }\r\n  getCourses(){\r\n    this.courseService.getCourses().subscribe(res =>\r\n      this.courses = res.body);\r\n  }\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addCourse\"]);\r\n  }\r\n  gotoEdit(course : Course) : void {\r\n    this.router.navigate(['/editCourse', course.id]);\r\n  } \r\n  deleteCourse(courseId : number) : void {\r\n    this.courseService.deleteCourse(courseId).subscribe(\r\n      () => this.getCourses()\r\n    );\r\n  }\r\n\r\n}\r\n","<div style=\"width: 400px;margin: auto;\">\r\n    <div *ngIf=\"currentExamPeriod\" class=\"edit-form\">\r\n        <h4> Ispitni rok </h4>\r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"name\">Naziv</label>\r\n                <input type=\"text\" \r\n                class=\"form-control\"\r\n                 id=\"name\"\r\n                  [(ngModel)]=\"currentExamPeriod.name\" \r\n                  name=\"name\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"description\"> Datum pocetka </label>\r\n                <input type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"startDate\"\r\n                [(ngModel)] = \"currentExamPeriod.startDate\"\r\n                name=\"startDate\"\r\n                >\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"description\"> Datum kraja </label>\r\n                <input type=\"date\"\r\n                class=\"form-control\"\r\n                id=\"endDate\"\r\n                [(ngModel)] = \"currentExamPeriod.endDate\"\r\n                name=\"endDate\"\r\n                >\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"paymentAmount\"> Iznos za uplatu </label>\r\n                <input type=\"number\"\r\n                class=\"form-control\"\r\n                id=\"paymentAmount\"\r\n                [(ngModel)] = \"currentExamPeriod.paymentAmount\"\r\n                name=\"paymentAmount\"\r\n                >\r\n            </div>\r\n        </form>\r\n\r\n        <button\r\n        class=\"badge badge-primary mr-2\"\r\n        (click)=\"deleteExamPeriod()\"        \r\n        > Obrisi ispitni rok </button>\r\n\r\n        <button\r\n        type=\"submit\"\r\n        class=\"badge badge-success\"\r\n        (click)=\"updateExamPeriod()\"\r\n        > Izmijeni ispitni rok </button>\r\n        <p> {{message}}</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"!currentExamPeriod\">\r\n        <br/>\r\n        <p>Nemoguc pristup ispitnom roku!</p>\r\n    </div>\r\n</div>","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExamPeriodService } from '../exam-period/exam-period.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-exam-period',\r\n  templateUrl: './admin-details-exam-period.component.html',\r\n  styleUrls: ['./admin-details-exam-period.component.css']\r\n})\r\nexport class AdminDetailsExamPeriodComponent implements OnInit {\r\n\r\n  currentExamPeriod : any | null; \r\n  message = '';\r\n\r\n  constructor(private examPeriodService: ExamPeriodService, private route : ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getExamPeriod(this.route.snapshot.paramMap.get('id'));\r\n  }\r\n\r\n  getExamPeriod(id: any) : void {\r\n    this.examPeriodService.get(id)\r\n    .subscribe(\r\n      data => {\r\n        this.currentExamPeriod = data; \r\n        console.log(data); \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updateExamPeriod(): void {\r\n    this.examPeriodService.update(this.currentExamPeriod.id, this.currentExamPeriod)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.message =  \"Uspjesno ste izmijenili ispitni rok!\";\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteExamPeriod() : void {\r\n    this.examPeriodService.delete(this.currentExamPeriod.id)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.router.navigate(['/examPeriods']);\r\n      }, \r\n      error => {\r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div style=\"width: 400px;margin: auto;\">\n    <div *ngIf=\"currentFinancialCard\" class=\"edit-form\">\n        <h4> Finansijska kartica </h4>\n        <form>\n            <div class=\"form-group\">\n                <label for=\"initialState\"> Pocetno stanje</label>\n                <input type=\"number\" \n                class=\"form-control\"\n                 id=\"number\"\n                  [(ngModel)]=\"currentFinancialCard.initialState\" \n                  name=\"initialState\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"totalPayment\"> Ukupan iznos </label>\n                <input type=\"number\"\n                class=\"form-control\"\n                id=\"totalPayment\"\n                [(ngModel)] = \"currentFinancialCard.totalPayment\"\n                name=\"totalPayment\"\n                >\n            </div>\n            <div class=\"form-group\">\n                <label for=\"totalPayout\"> Ukupna isplata </label>\n                <input type=\"number\"\n                class=\"form-control\"\n                id=\"totalPayout\"\n                [(ngModel)] = \"currentFinancialCard.totalPayout\"\n                name=\"totalPayout\"\n                >\n            </div>\n            <div class=\"form-group\">\n                <label for=\"totalCost\"> Ukupni troskovi:  </label>\n                <input type=\"number\"\n                class=\"form-control\"\n                id=\"totalCost\"\n                [(ngModel)] = \"currentFinancialCard.totalCost\"\n                name=\"totalCost\"\n                >\n            </div>\n        </form>\n\n        <button\n        class=\"badge badge-primary mr-2\"\n        (click)=\"deleteFinancialCard()\"        \n        > Obrisi finansijsku karticu </button>\n\n        <button\n        type=\"submit\"\n        class=\"badge badge-success\"\n        (click)=\"updateFinancialCard()\"\n        > Izmijeni finansijsku karticu </button>\n        <p> {{message}}</p>\n    </div>\n\n    <div *ngIf=\"!currentFinancialCard\">\n        <br/>\n        <p>Nemoguc pristup kartici!</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FinancialcardService } from '../financial-card/financialcard.service';\n\n@Component({\n  selector: 'app-admin-details-financial-card',\n  templateUrl: './admin-details-financial-card.component.html',\n  styleUrls: ['./admin-details-financial-card.component.css']\n})\nexport class AdminDetailsFinancialCardComponent implements OnInit {\n\n  currentFinancialCard: any | null; \n  message = '';\n\n  constructor(private financialCardService: FinancialcardService, private route : ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.message = '';\n    this.getFinancialCard(this.route.snapshot.paramMap.get('id'));\n  }\n\n  getFinancialCard(id: any) : void {\n    this.financialCardService.get(id)\n    .subscribe(\n      data => {\n        this.currentFinancialCard = data; \n        console.log(data); \n      }, \n      error => {\n        console.log(error);\n      }\n    );\n  }\n  \n  updateFinancialCard(): void {\n    this.financialCardService.update(this.currentFinancialCard.id, this.currentFinancialCard)\n    .subscribe(\n      response => {\n        console.log(response); \n        this.message =  \"Uspjesno ste izmijenili finansijsku karticu!\";\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  deleteFinancialCard() : void {\n    this.financialCardService.delete(this.currentFinancialCard.id)\n    .subscribe(\n      response => {\n        console.log(response); \n        this.router.navigate(['/financialCards']);\n      }, \n      error => {\n        console.log(error); \n      }\n    );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-documents',\r\n  templateUrl: './admin-documents.component.html',\r\n  styleUrls: ['./admin-documents.component.css']\r\n})\r\nexport class AdminDocumentsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin-documents works!</p>\r\n","<!-- Exam grade points examDate status -->\r\n<div>\r\n    <h3> Exam </h3>\r\n</div>\r\n\r\n<table class=\"table table-bordered\">\r\n    <tr>\r\n        <th> Grade </th>\r\n        <th> Points</th>\r\n        <th> Exam date</th>\r\n        <th> Status </th>\r\n    </tr>\r\n    <tr *ngFor=\"let exam of exams\">\r\n        <td>\r\n            {{exam.grade}}\r\n        </td>\r\n        <td>\r\n            {{exam.points}}\r\n        </td>\r\n        <td>\r\n            {{exam.examDate}}\r\n        </td>\r\n        <td>\r\n            {{exam.status}}\r\n        </td>\r\n        <td>\r\n            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(exam)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(exam.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n        </td>\r\n    </tr>\r\n</table>\r\n<div class=\"right\">\r\n    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ExamService } from '../exam/exam.service';\r\nimport { Exam } from '../model/exam';\r\n\r\n@Component({\r\n  selector: 'app-admin-exam',\r\n  templateUrl: './admin-exam.component.html',\r\n  styleUrls: ['./admin-exam.component.css']\r\n})\r\nexport class AdminExamComponent implements OnInit {\r\n\r\n  exams : Exam[];\r\n  subscription : Subscription;\r\n\r\n  constructor(private examService: ExamService, private router: Router) { \r\n  this.getExams();\r\n}\r\n  ngOnInit(): void {\r\n    this.getExams();\r\n  }\r\n\r\n  getExams(){\r\n    this.examService.getExams().subscribe(res =>\r\n       this.exams = res.body);\r\n  }\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addExam\"]);\r\n  }\r\n  gotoEdit(exam : Exam) : void {\r\n    this.router.navigate(['/editExam', exam.id]);\r\n  } \r\n\r\n  deleteExam(examId : number) : void {\r\n    this.examService.deleteExam(examId).subscribe(\r\n      () => this.getExams()\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h3> Financial card </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            <th> Initial state </th>\r\n            <th> Total payment<th>\r\n            <th> Total payout </th>\r\n            <th> Total cost </th>\r\n        </tr>\r\n        <tr *ngFor=\"let financialCard of financialCards\">\r\n            <td>\r\n                {{financialCard.initialState}}\r\n            </td>\r\n            <td>\r\n                {{financialCard.totalPayment}}\r\n            </td>\r\n            <td>\r\n                {{examPeriod.totalPayout}}\r\n            </td>\r\n            <td>\r\n                {{examPeriod.totalCost}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(financialCard)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(financialCard.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>\r\n","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { FinancialcardService } from '../financial-card/financialcard.service';\r\nimport { FinancialCard } from '../model/financial-card';\r\n\r\n@Component({\r\n  selector: 'app-admin-financial-card',\r\n  templateUrl: './admin-financial-card.component.html',\r\n  styleUrls: ['./admin-financial-card.component.css']\r\n})\r\nexport class AdminFinancialCardComponent implements OnInit {\r\n\r\n  financialCards : FinancialCard[];\r\n  subscription : Subscription; \r\n\r\n  constructor(private financialCardService : FinancialcardService, private router : Router) { \r\n    this.getFinancialCards();\r\n  }\r\n\r\n  getFinancialCards(){\r\n    this.financialCardService.getFinancialCards().subscribe(res =>\r\n      this.financialCards = res.body);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getFinancialCards();\r\n  }\r\n\r\n  gotoAdd(): void {\r\n    this.router.navigate([\"/addFinancialCard\"]); \r\n  }\r\n\r\n  gotoEdit(financialCard : FinancialCard) : void {\r\n    this.router.navigate(['/editFinancialCard', financialCard.id]);\r\n  }\r\n\r\n  deleteFinancialCard(financialCardId : number) : void {\r\n    this.financialCardService.deleteFinancialCard(financialCardId).subscribe(\r\n      () => this.getFinancialCards()\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"list row\">\r\n    <div class=\"col-md-6\">\r\n      <h4>Lista ispitnih rokova </h4>\r\n      <ul class=\"list-group\">\r\n        <li\r\n          class=\"list-group-item\"\r\n          *ngFor=\"let examPeriod of examPeriods; let i = index\"\r\n          [class.active]=\"i == currentIndex\"\r\n          (click)=\"setActiveExamPeriod(examPeriod, i)\"\r\n        >\r\n          {{ examPeriod.name }}\r\n        </li>\r\n      </ul>\r\n      \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentExamPeriod\">\r\n        <h4> Ispitni rok </h4>\r\n        <div>\r\n          <label><strong>Naziv :</strong></label> {{ currentExamPeriod.name }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Datum pocetka:</strong></label>\r\n          {{ currentExamPeriod.startDate}}\r\n        </div>\r\n        <div>\r\n          <label><strong>Datum zavrsetka:</strong></label>\r\n          {{ currentExamPeriod.endDate}}\r\n        </div>\r\n        <div>\r\n            <label><strong>Iznos za uplatu:</strong></label>\r\n            {{ currentExamPeriod.paymentAmount}}\r\n          </div>\r\n      \r\n        <a class=\"badge badge-warning\" routerLink=\"/examPeriods/{{ currentExamPeriod.id }}\">\r\n          Uredi\r\n        </a>\r\n      </div>\r\n  \r\n      <div *ngIf=\"!currentExamPeriod\">\r\n        <br />\r\n        <p>Kliknite na odredjeni ispitni rok..</p>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { ExamPeriodService } from '../exam-period/exam-period.service';\r\nimport { ExamPeriod } from '../model/exam-period';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-exam-period',\r\n  templateUrl: './admin-list-exam-period.component.html',\r\n  styleUrls: ['./admin-list-exam-period.component.css']\r\n})\r\nexport class AdminListExamPeriodComponent implements OnInit {\r\n\r\n  examPeriods: any; \r\n  currentExamPeriod: null | any; \r\n  currentIndex = -1; \r\n  name = '';\r\n\r\n  constructor(private examPeriodService: ExamPeriodService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveExamPeriods(); \r\n  }\r\n\r\n  retrieveExamPeriods() : void {\r\n    this.examPeriodService.getAll()\r\n    .subscribe(\r\n      data => {\r\n        this.examPeriods = data;\r\n        console.log(data); \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveExamPeriods();\r\n    this.currentIndex = -1; \r\n    this.currentExamPeriod= null;\r\n  }\r\n\r\n  setActiveExamPeriod(examPeriod : null | any, index=-1) : void {\r\n    this.currentExamPeriod = examPeriod;\r\n    this.currentIndex = index;\r\n  }\r\n  \r\n}\r\n","\n<div class=\"list row\">\n    <div class=\"col-md-6\">\n      <h4>Lista finansijskih kartica </h4>\n      <ul class=\"list-group\">\n        <li\n          class=\"list-group-item\"\n          *ngFor=\"let financialCard of financialCards; let i = index\"\n          [class.active]=\"i == currentIndex\"\n          (click)=\"setActiveFinancialCard(financialCard, i)\"\n        >\n          {{ financialCard.totalCost }}\n        </li>\n      </ul>\n      \n    </div>\n    <div class=\"col-md-6\">\n      <div *ngIf=\"currentFinancialCard\">\n        <h4> Finansijska kartica </h4>\n        <div>\n          <label><strong> Pocetno stanje: </strong></label>\n           {{ currentFinancialCard.initialState }}\n        </div>\n        <div>\n          <label><strong> Ukupan iznos: </strong></label>\n          {{ currentFinancialCard.totalPayment }}\n        </div>\n        <div>\n          <label><strong> Ukupna isplata: </strong></label>\n          {{ currentFinancialCard.totalPayout }}\n        </div>\n        <div>\n            <label><strong> Ukupni troskovi:</strong></label>\n            {{ currentFinancialCard.totalCost }}\n          </div>\n      \n        <a class=\"badge badge-warning\" routerLink=\"/financialCards/{{ currentFinancialCard.id }}\">\n          Uredi\n        </a>\n      </div>\n  \n      <div *ngIf=\"!currentFinancialCard\">\n        <br />\n        <p>Kliknite na odredjenu finanskijsku karticu da biste vidjeli detalje iste..</p>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FinancialcardService } from '../financial-card/financialcard.service';\n\n@Component({\n  selector: 'app-admin-list-financial-card',\n  templateUrl: './admin-list-financial-card.component.html',\n  styleUrls: ['./admin-list-financial-card.component.css']\n})\nexport class AdminListFinancialCardComponent implements OnInit {\n\n  financialCards: any; \n  currentFinancialCard: null | any; \n  currentIndex = -1; \n  totalCost = 0;\n\n  constructor(private financialCardService: FinancialcardService) { }\n\n  ngOnInit(): void {\n    this.retrieveFinancialCards();\n  }\n\n  retrieveFinancialCards() : void {\n    this.financialCardService.getAll()\n    .subscribe(\n      data => {\n        this.financialCards = data;\n        console.log(data); \n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  refreshList(): void {\n    this.retrieveFinancialCards();\n    this.currentIndex = -1; \n    this.currentFinancialCard= null;\n  }\n\n  setActiveFinancialCard(financialCard : null | any, index=-1) : void {\n    this.currentFinancialCard = financialCard;\n    this.currentIndex = index;\n  }\n\n\n}\n","<div>\r\n    <h3> Payment </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            <th>Date of payment</th>\r\n            <th>Payment description</th>\r\n            <th>Payment amount</th>\r\n            <th></th>\r\n        </tr>\r\n        <tr *ngFor=\"let payment of payments\">\r\n            <td>\r\n                {{payment.dateOfPayment}}\r\n            </td>\r\n            <td>\r\n                {{payment.paymentDescription}}\r\n            </td>\r\n            <td>\r\n                {{payment.paymentAmount}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(payment)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(payment.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>\r\n\r\n","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Payment } from '../model/payment';\r\nimport { PaymentService } from '../payment/payment.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-payment',\r\n  templateUrl: './admin-payment.component.html',\r\n  styleUrls: ['./admin-payment.component.css']\r\n})\r\nexport class AdminPaymentComponent implements OnInit {\r\n\r\n  payments : Payment[];\r\n  subscription : Subscription; \r\n\r\n  constructor(private paymentService: PaymentService, private router : Router) { \r\n    this.getPayments();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPayments();\r\n  }\r\n\r\n  getPayments() { \r\n    this.paymentService.getPayments().subscribe(res =>\r\n      this.payments = res.body);\r\n  }\r\n\r\n  gotoAdd() : void {\r\n    this.router.navigate(['/addPayment']);\r\n  }\r\n\r\n  gotoEdit(payment : Payment) : void {\r\n    this.router.navigate(['/editPayment', payment.id]);\r\n  }\r\n\r\n  deletePayment(paymentId: number) : void {\r\n    this.paymentService.deletePayment(paymentId).subscribe(\r\n      () => this.getPayments()\r\n    );\r\n  }\r\n\r\n}\r\n","<!-- points, location, dateofobligation, passed, preexamObligation type, preexamObligation status-->\r\n<div>\r\n    <h3> Preexam Obligation  </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            <th> Points </th>\r\n            <th> Location </th>\r\n            <th> Date of obligation</th>\r\n            <th> Passed </th>\r\n            <th> Preexam Obligation type </th>\r\n            <th> Preexam Obligation status </th>\r\n            <th></th>\r\n        </tr>\r\n        <tr *ngFor=\"let preexamObligation of preexamObligations\">\r\n            <td>\r\n                {{preexamObligation.points}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.location}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.dateOfObligation}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.passed}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.preexamObligationType}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.preexamObligationStatus}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(preexamObligation)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(preexamObligation.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\nimport { PreexamObligationService } from '../preexam-obligation/preexam-obligation.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-preexam-obligation',\r\n  templateUrl: './admin-preexam-obligation.component.html',\r\n  styleUrls: ['./admin-preexam-obligation.component.css']\r\n})\r\nexport class AdminPreexamObligationComponent implements OnInit {\r\n\r\n  preexamObligations : PreexamObligation[];\r\n  subscription : Subscription;\r\n\r\n  constructor(private preexamObligationService : PreexamObligationService, private router : Router) { \r\n    this.getPreexamObligations();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPreexamObligations();\r\n  }\r\n\r\n  getPreexamObligations(){\r\n    this.preexamObligationService.getAllPreexamObligations().subscribe(res =>\r\n      this.preexamObligations = res.body);\r\n  }\r\n\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addPreexamObligation\"]);\r\n  }\r\n\r\n  gotoEdit(preexamObligation: PreexamObligation): void {\r\n    this.router.navigate([\"/editPreexamObligation\", preexamObligation.id]);\r\n  }\r\n\r\n  deletePreexamObligation(preexamObligationId: number) : void {\r\n    this.preexamObligationService.deletePreexamObligation(preexamObligationId).subscribe(\r\n      () => this.getPreexamObligations()\r\n    );\r\n  }\r\n}\r\n","\r\n<div>\r\n    <h3> Professor </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            \r\n            <th>First name </th>\r\n            <th>Last name </th>\r\n    \r\n        </tr>\r\n        <tr *ngFor=\"let professor of professors\">\r\n           \r\n            <td>\r\n                {{professor.firstName}}\r\n            </td>\r\n            <td>\r\n                {{professor.lastName}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(professor)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(professor.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Professor } from '../model/professor';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-professors',\r\n  templateUrl: './admin-professors.component.html',\r\n  styleUrls: ['./admin-professors.component.css']\r\n})\r\nexport class AdminProfessorsComponent implements OnInit {\r\n\r\n  professors: Professor[];\r\n  subscription: Subscription;\r\n  constructor(private professorService: ProfessorService, private router: Router) { \r\n    this.getProfessors();  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfessors\r\n  }\r\n  getProfessors(){\r\n    this.professorService.getProfessors().subscribe(res => \r\n      this.professors = res.body);\r\n  }\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addProfessor\"]);\r\n  }\r\n\r\n  gotoEdit(professor : Professor) : void {\r\n    this.router.navigate(['/editProfessor', professor.id]);\r\n  } \r\n\r\n  deleteProfessor(professorId : number) : void {\r\n    this.professorService.deleteProfessor(professorId).subscribe(\r\n      () => this.getProfessors()\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h3> Student </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            <th>Card number </th>\r\n            <th>First name </th>\r\n            <th>Last name </th>\r\n            <th>Phone number </th>\r\n            <th>Email </th>\r\n            <th>UMNC </th>\r\n            <th>Started college in</th>\r\n            <th>Model number </th>\r\n            <th>Reference number </th>\r\n            <th>Account number </th>\r\n            <th>Card amount </th>\r\n            <th>Type of financing </th>\r\n        </tr>\r\n        <tr *ngFor=\"let student of students\">\r\n            <td>\r\n                {{student.cardNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.firstName}}\r\n            </td>\r\n            <td>\r\n                {{student.lastName}}\r\n            </td>\r\n            <td>\r\n                {{student.phoneNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.email}}\r\n            </td>\r\n            <td>\r\n                {{student.umnc}}\r\n            </td>\r\n            <td>\r\n                {{student.startedCollegeIn}}\r\n            </td>\r\n            <td>\r\n                {{student.modelNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.referenceNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.accountNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.cardAmount}}\r\n            </td>\r\n            <td>\r\n                {{student.typeOfFinancing}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(student)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(student.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Student } from '../model/student';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-student',\r\n  templateUrl: './admin-student.component.html',\r\n  styleUrls: ['./admin-student.component.css']\r\n})\r\nexport class AdminStudentComponent implements OnInit {\r\n\r\n  students: Student[];\r\n  subscription: Subscription;\r\n\r\n  constructor(private studentService: StudentService, private router: Router) { \r\n    this.getStudents();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudents();\r\n  }\r\n\r\n  getStudents(){\r\n    this.studentService.getStudents().subscribe(res => \r\n      this.students = res.body);\r\n  }\r\n\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addStudent\"]);\r\n  }\r\n\r\n  gotoEdit(student : Student) : void {\r\n    this.router.navigate(['/editStudent', student.id]);\r\n  } \r\n\r\n  deleteStudent(studentId : number) : void {\r\n    this.studentService.deleteStudent(studentId).subscribe(\r\n      () => this.getStudents()\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin works!</p>\r\n","<div class=\"container-fluid\"> \r\n  <div *ngIf=\"currentUser != false; else elseBlock\">\r\n\r\n      <div class=\"row primer\">\r\n        <div class=\"col\">\r\n          <app-header></app-header>\r\n          <app-navbar-student *ngIf=\"roles.includes('ROLE_STUDENT')\"></app-navbar-student>\r\n          <app-navbar-admin *ngIf=\"roles.includes('ROLE_ADMIN')\"></app-navbar-admin>\r\n        </div>\r\n      </div>\r\n      <div align=\"center\">\r\n        <router-outlet>\r\n          \r\n        </router-outlet>\r\n      </div>\r\n  </div>\r\n  <ng-template #elseBlock>\r\n    <app-login></app-login>\r\n  </ng-template>    \r\n  \r\n</div>\r\n\r\n\r\n  ","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n\r\n\r\n\tpublic roles: string[]=[];\r\n\tcurrentUser:any;\r\n\tconstructor(private router: Router) {}\r\n\r\n\t// checkRole() {\r\n\t// \tconst item = localStorage.getItem('currentUser');\r\n\r\n\t// \tif (!item) {\r\n\t// \t\tthis.router.navigate(['login']);\r\n\t// \t\tthis.role = undefined;\r\n\t// \t\treturn;\r\n\t// \t}\r\n\r\n\t// \tconst jwt: JwtHelperService = new JwtHelperService();\r\n\t// \tthis.role = jwt.decodeToken(item).roles[0];\r\n\t// }\r\n\tngOnInit(){\r\n\t\tthis.roles=this.getCurrentUser().roles;\r\n\t\tthis.currentUser=this.getCurrentUser();\r\n\r\n\t}\r\n\tgetCurrentUser(){\r\n\t\tif(localStorage.getItem('currentUser')){\r\n\t\t\treturn JSON.parse(localStorage.currentUser);\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppRoutingModule } from './routing/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { StudentDetailsComponent } from './student-details/student-details.component';\r\nimport { StudentsComponent } from './students/students.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { PreexamObligationComponent } from './preexam-obligation/preexam-obligation.component';\r\nimport { HeaderComponent } from './core/header/header.component';\r\nimport { FinancialcardStudentComponent } from './financialcard-student/financialcard-student.component';\r\nimport { NavbarProfessorComponent } from './core/navbar-professor/navbar-professor.component';\r\nimport { ProfessorCoursesComponent } from './professor-courses/professor-courses.component';\r\nimport { ProfessorStudentsComponent } from './professor-students/professor-students.component';\r\nimport { ProfessorProfileComponent } from './professor-profile/professor-profile.component';\r\nimport { ProfessorExamsComponent } from './professor-exams/professor-exams.component';\r\n//import { ExamPeriodComponent } from './exam-period/exam-period.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { AdminFinancialCardComponent } from './admin-financial-card/admin-financial-card.component';\r\nimport { AdminPaymentComponent } from './admin-payment/admin-payment.component';\r\nimport { AdminPreexamObligationComponent } from './admin-preexam-obligation/admin-preexam-obligation.component';\r\nimport { AdminStudentComponent } from './admin-student/admin-student.component';\r\nimport { PayoutComponent } from './payout/payout.component';\r\nimport { StudentProfileComponent } from './student-profile/student-profile.component';\r\nimport { AdminExamComponent } from './admin-exam/admin-exam.component';\r\nimport { AdminDocumentsComponent } from './admin-documents/admin-documents.component';\r\nimport { AdminCourseComponent } from './admin-course/admin-course.component';\r\nimport { AdminProfessorsComponent } from './admin-professors/admin-professors.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { StudentExamsComponent } from './student-exams/student-exams.component';\r\nimport { StudentDocumentsComponent } from './student-documents/student-documents.component';\r\nimport { StudentEnrollmentComponent } from './student-enrollment/student-enrollment.component';\r\nimport { ExamPeriodDetailsComponent } from './exam-period-details/exam-period-details.component';\r\nimport { FinancialCardDetailsComponent } from './financial-card-details/financial-card-details.component';\r\nimport { PaymentDetailsComponent } from './payment-details/payment-details.component';\r\nimport { PreexamObligationDetailsComponent } from './preexam-obligation-details/preexam-obligation-details.component';\r\nimport { NavbarAdminComponent } from './core/navbar-admin/navbar-admin.component';\r\nimport { NavbarStudentComponent } from './core/navbar-student/navbar-student.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AdminAddExamPeriodComponent } from './admin-add-exam-period/admin-add-exam-period.component';\r\nimport { AdminDetailsExamPeriodComponent } from './admin-details-exam-period/admin-details-exam-period.component';\r\nimport { AdminListExamPeriodComponent } from './admin-list-exam-period/admin-list-exam-period.component';\r\nimport { AdminAddFinancialCardComponent } from './admin-add-financial-card/admin-add-financial-card.component';\r\nimport { AdminDetailsFinancialCardComponent } from './admin-details-financial-card/admin-details-financial-card.component';\r\nimport { AdminListFinancialCardComponent } from './admin-list-financial-card/admin-list-financial-card.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StudentDetailsComponent,\r\n    StudentsComponent,\r\n    LoginComponent,\r\n    PreexamObligationComponent,\r\n    HeaderComponent,\r\n    NavbarStudentComponent,\r\n    FinancialcardStudentComponent,\r\n    NavbarProfessorComponent,\r\n    ProfessorCoursesComponent,\r\n    ProfessorStudentsComponent,\r\n    ProfessorProfileComponent,\r\n    ProfessorExamsComponent,\r\n    //ExamPeriodComponent,\r\n    PaymentComponent,\r\n    AdminFinancialCardComponent,\r\n    AdminPaymentComponent,\r\n    AdminPreexamObligationComponent,\r\n    AdminStudentComponent,\r\n    PayoutComponent,\r\n    StudentProfileComponent,\r\n    AdminExamComponent,\r\n    AdminDocumentsComponent,\r\n    AdminCourseComponent,\r\n    AdminProfessorsComponent,\r\n    AdminComponent,\r\n    MainComponent,\r\n    StudentExamsComponent,\r\n    StudentDocumentsComponent,\r\n    StudentEnrollmentComponent,\r\n    NavbarAdminComponent,\r\n    ExamPeriodDetailsComponent,\r\n    FinancialCardDetailsComponent,\r\n    PaymentDetailsComponent,\r\n    PreexamObligationDetailsComponent,\r\n    AdminAddExamPeriodComponent,\r\n    AdminDetailsExamPeriodComponent,\r\n    AdminListExamPeriodComponent,\r\n    AdminAddFinancialCardComponent,\r\n    AdminDetailsFinancialCardComponent,\r\n    AdminListFinancialCardComponent,\r\n    AdminAddFinancialCardComponent,\r\n    AdminDetailsFinancialCardComponent,\r\n    AdminListFinancialCardComponent,\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n\t\tReactiveFormsModule,\r\n    BrowserAnimationsModule, // required animations module\r\n\t\tToastrModule.forRoot(),\r\n\t\tHttpClientModule,\r\n    \r\n    NgbModule,\r\n    CommonModule,\r\n  ],\r\n\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<img src=\"../../assets/images/essential-books.jpg\" class=\"img-fluid rounded\">\r\n<p>nesto</p>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from 'src/app/login/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar-admin',\r\n  templateUrl: './navbar-admin.component.html',\r\n  styleUrls: ['./navbar-admin.component.css']\r\n})\r\nexport class NavbarAdminComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n\t\tprivate toastr: ToastrService,\r\n\t\tprivate router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout () {\r\n    this.authenticationService.logOut();\r\n  }\r\n\r\n}\r\n","<!--\r\n<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n  \r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/adminExamPeriod']\">About exam periods</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/adminFinancialCard']\">About financial cards</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/adminPayment']\"> About payments </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/adminPreexamObligation']\">About preexam obligations </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/adminStudent']\"> Info about students </a>\r\n      </li>\r\n    </ul>\r\n  \r\n    <ul class=\"navbar-nav ml-auto\">   \r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n-->\r\n\r\n  <div>\r\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n      <a href=\"#\" class=\"navbar-brand\">Admin panel</a>\r\n      <div class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"examPeriods\" class=\"nav-link\">Ispitni rokovi </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"addExamPeriod\" class=\"nav-link\">Dodaj novi ispitni rok</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"financialCards\" class=\"nav-link\"> Finansijske kartice </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"adminAddFinancialCard\" class=\"nav-link\"> Dodajte novu finansijsku karticu </a>\r\n        </li>\r\n      </div>\r\n    </nav>\r\n  \r\n    <div class=\"container mt-3\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    \r\n    <ul class=\"navbar-nav ml-auto\">   \r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\r\n      </li>\r\n    </ul>\r\n\r\n   \r\n  </div>","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/login/authentication.service';\r\nimport { Course } from 'src/app/model/course';\r\nimport { ProfessorService } from 'src/app/professor/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar-professor',\r\n  templateUrl: './navbar-professor.component.html',\r\n  styleUrls: ['./navbar-professor.component.css']\r\n})\r\nexport class NavbarProfessorComponent implements OnInit {\r\n  courses: Course[];\r\n  constructor(private professorService: ProfessorService, private router: Router,private authService:AuthenticationService,private route:ActivatedRoute,private location:Location) { \r\n      }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['courseId']) {\r\n      this.route.params.pipe(switchMap((params : Params) =>\r\n      this.professorService.getProfsesorCourses(+params['courseId'])))\r\n      .subscribe(res => {\r\n        this.courses = res;\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  logout() {\r\n\t\tthis.authService.logOut();\r\n\t\t\r\n\t}\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n \r\n\t\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n\r\n    <a class=\"navbar-brand\">professor</a>\r\n  \r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/exams']\">Exams</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/students']\">Students</a>\r\n        </li>\r\n      </ul>\r\n    \r\n    <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/professorProfile/']\">Profile</a>\r\n        </li>\r\n    </ul>\r\n  \r\n  \r\n    <ul class=\"navbar-nav ml-auto\">   \r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\r\n      </li>\r\n    </ul>\r\n\r\n</nav>\r\n\r\n<table class=\"table table-striped pera\">\r\n  <thead>\r\n    <tr>\r\n      <th>Title <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n      <th>Code <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n      <th>Ects <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n      <th>Start Date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n      <th>End Date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let course of courses\">\r\n      <td>{{course.title}}</td>\r\n      <td>{{course.courseCode}}</td>\r\n      <td>{{course.ECTS}}</td>\r\n      <td>{{course.startDate}}</td>\r\n      <td>{{course.endDate}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n<div>\r\n  <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n</div> \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from 'src/app/login/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar-student',\r\n  templateUrl: './navbar-student.component.html',\r\n  styleUrls: ['./navbar-student.component.css']\r\n})\r\nexport class NavbarStudentComponent implements OnInit {\r\n\r\n  constructor(\r\n\t\tprivate authenticationService: AuthenticationService,\r\n\t\tprivate toastr: ToastrService,\r\n\t\tprivate router: Router\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.authenticationService.logOut();\r\n\t}\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n\r\n    <a class=\"navbar-brand\">financial card</a>\r\n  \r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/financialcard']\" >Financial card</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/payouts']\">Financial card payouts</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/payment']\">Financial card payment</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/studentProfile/']\">Profile</a>\r\n      </li>\r\n    </ul>\r\n  \r\n    <ul class=\"navbar-nav ml-auto\">   \r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\r\n      </li>\r\n    </ul>\r\n  </nav>","import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Course } from '../model/course';\r\n\r\n@Injectable()\r\nexport class CoursesService {\r\n\r\n  private path=\"api/courses\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n    private RegenerateData = new Subject<void>();\r\n\r\n    RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n    announceChange() {\r\n        this.RegenerateData.next();\r\n    }\r\n    addCourse(course: Course) : Observable<HttpResponse<Course>> {\r\n      return this.http.post<Course>(this.path, course, {observe: 'response'});\r\n    }\r\n    editCourse(course: Course) : Observable<HttpResponse<Course>> {\r\n      return this.http.put<Course>(this.path, course, {observe: 'response'});\r\n    }\r\n    deleteCourse(id : number): Observable<HttpResponse<any>> {\r\n      const url = `${this.path}/${id}`;\r\n      return this.http.delete<any>(url, {observe: 'response'});\r\n    }\r\n    getCourses(): Observable<HttpResponse<Course[]>> {\r\n  \r\n      return this.http.get<Course[]>(this.path, {observe: 'response'});\r\n  }\r\n   \r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ExamPeriodService } from '../exam-period/exam-period.service';\r\nimport { ExamPeriod } from '../model/exam-period';\r\n\r\n\r\n@Component({\r\n  selector: 'app-exam-period-details',\r\n  templateUrl: './exam-period-details.component.html',\r\n  styleUrls: ['./exam-period-details.component.css']\r\n})\r\nexport class ExamPeriodDetailsComponent implements OnInit {\r\n\r\n  examPeriod: ExamPeriod = new ExamPeriod({\r\n    name: '',\r\n    startDate : '', \r\n    endDate: '',\r\n    paymentAmount : 0\r\n  });\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private examPeriodService: ExamPeriodService, private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params : Params) => \r\n      this.examPeriodService.getExamPeriod(+params['id'])))\r\n      .subscribe(res => {\r\n        this.examPeriod = res.body; \r\n      });\r\n    }\r\n  }\r\n\r\n  save() : void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.examPeriodService.addExamPeriod(this.examPeriod)\r\n    .subscribe(res => {\r\n      this.examPeriodService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  private edit() : void {\r\n    this.examPeriodService.editExamPeriod(this.examPeriod)\r\n    .subscribe(examPeriod => {\r\n      this.examPeriodService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n}\r\n","<div>\r\n    <h3>Exam period</h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Name: </label>\r\n            <input type=\"text\" [(ngModel)]=\"examPeriod.name\" placeholder=\"Name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Start date: </label>\r\n            <input type=\"text\" [(ngModel)]=\"examPeriod.startDate\" placeholder=\"Start date\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> End date: </label>\r\n            <input type=\"text\" [(ngModel)]=\"examPeriod.endDate\" placeholder=\"End date\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ExamPeriod } from '../model/exam-period';\r\n\r\nconst baseUrl = \"https://localhost:8443/api/examPeriods\"; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ExamPeriodService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get(baseUrl); \r\n  }\r\n\r\n  get(id: number): Observable<any>{\r\n    return this.http.get(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  create(data: any) : Observable<any> {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id: number, data: any) : Observable<any>{\r\n     return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n  delete(id: number) : Observable<any> {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.http.delete(baseUrl);\r\n  }\r\n\r\n  findByName(name: string) : Observable<any> { \r\n    return this.http.get(`${baseUrl}?name=${name}`);\r\n  }\r\n\r\n  private RegenerateData = new Subject<void>(); \r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange(){\r\n    this.RegenerateData.next();\r\n  }\r\n\r\n  getExamPeriods() : Observable<HttpResponse<ExamPeriod[]>> {\r\n    return this.http.get<ExamPeriod[]>(baseUrl, {observe: 'response'});\r\n  }\r\n\r\n  getExamPeriod(id: number) : Observable<HttpResponse<ExamPeriod>> {\r\n    const url = `${baseUrl}/${id}`;\r\n    return this.http.get<ExamPeriod>(url, {observe: 'response'});\r\n  }\r\n\r\n  addExamPeriod(examPeriod: ExamPeriod) : Observable<HttpResponse<ExamPeriod>> {\r\n    return this.http.post<ExamPeriod>(baseUrl, examPeriod, {observe: 'response'});\r\n  }\r\n\r\n  editExamPeriod(examPeriod: ExamPeriod) : Observable<HttpResponse<ExamPeriod>> {\r\n    return this.http.put<ExamPeriod>(baseUrl, examPeriod, {observe: 'response'});\r\n  }\r\n\r\n  updateExamPeriod(id: number, data: any) : Observable<any> {\r\n    return this.http.put(`$examPeriodUrl/${id}`, data);\r\n  }\r\n\r\n  deleteExamPeriod(id : number): Observable<HttpResponse<any>> {\r\n    const url = `${baseUrl}/${id}`;\r\n    return this.http.delete<any>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';import { Exam } from '../model/exam';\r\n\r\n@Injectable()\r\nexport class ExamService {\r\n\r\n  private path=\"api/exams\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n    private RegenerateData = new Subject<void>();\r\n\r\n    RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n    announceChange() {\r\n        this.RegenerateData.next();\r\n    }\r\n    addExam(exam: Exam) : Observable<HttpResponse<Exam>> {\r\n      return this.http.post<Exam>(this.path, exam, {observe: 'response'});\r\n    }\r\n    editExam(exam: Exam) : Observable<HttpResponse<Exam>> {\r\n      return this.http.put<Exam>(this.path, exam, {observe: 'response'});\r\n    }\r\n    deleteExam(id : number): Observable<HttpResponse<any>> {\r\n      const url = `${this.path}/${id}`;\r\n      return this.http.delete<any>(url, {observe: 'response'});\r\n    }\r\n    getExams(): Observable<HttpResponse<Exam[]>> {\r\n  \r\n      return this.http.get<Exam[]>(this.path, {observe: 'response'});\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { FinancialcardService } from '../financial-card/financialcard.service';\r\nimport { FinancialCard } from '../model/financial-card';\r\n\r\n@Component({\r\n  selector: 'app-financial-card-details',\r\n  templateUrl: './financial-card-details.component.html',\r\n  styleUrls: ['./financial-card-details.component.css']\r\n})\r\nexport class FinancialCardDetailsComponent implements OnInit {\r\n\r\n  financialCard: FinancialCard = new FinancialCard({\r\n    initialState : 0,\r\n    totalPayment : 0,\r\n    totalPayout: 0, \r\n    totalCost : 0,\r\n    student : null\r\n  });\r\n\r\n  mode: string = 'ADD'; \r\n\r\n  constructor(private financialCardService : FinancialcardService, private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params : Params) =>\r\n      this.financialCardService.getFinancialCard(+params['id'])))\r\n      .subscribe(res => {\r\n        this.financialCard = res.body;\r\n      });\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add() : void {\r\n    this.financialCardService.addFinancialCard(this.financialCard)\r\n    .subscribe(res => {\r\n      this.financialCardService.announceChange(); \r\n      this.goBack();\r\n    })\r\n  } \r\n\r\n  private edit() : void {\r\n    this.financialCardService.editFinancialCard(this.financialCard)\r\n    .subscribe(financialCard => {\r\n      this.financialCardService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack() : void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h3>Financial card</h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Initial state: </label>\r\n            <input type=\"text\" [(ngModel)]=\"financialCard.initialState\" placeholder=\"Initial state\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Total payment: </label>\r\n            <input type=\"text\" [(ngModel)]=\"financialCard.totalPayment\" placeholder=\"Total payment\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Total payout: </label>\r\n            <input type=\"text\" [(ngModel)]=\"financialCard.totalPayout\" placeholder=\"Total payout\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Total cost: </label>\r\n            <input type=\"text\" [(ngModel)]=\"financialCard.totalCost\" placeholder=\"Total cost\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport { FinancialCard } from '../model/financial-card';\r\n\r\nconst baseUrl = \"https://localhost:8443/api/financialCards\"; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FinancialcardService {\r\n\r\n  private financialCardUrl = \"api/financialCard\";\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get(baseUrl); \r\n  }\r\n\r\n  get(id: number): Observable<any>{\r\n    return this.http.get(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  create(data: any) : Observable<any> {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id: number, data: any) : Observable<any>{\r\n     return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n  delete(id: number) : Observable<any> {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  getFinancialCards() : Observable<HttpResponse<FinancialCard[]>> {\r\n    return this.http.get<FinancialCard[]>(this.financialCardUrl, {observe: 'response'});\r\n  }\r\n\r\n  getFinancialCard(id: number) : Observable<HttpResponse<FinancialCard>> {\r\n    const url = `${this.financialCardUrl}/{$id}`;\r\n    return this.http.get<FinancialCard>(url, {observe: 'response'});\r\n  }\r\n\r\n  addFinancialCard(financialCard: FinancialCard) : Observable<HttpResponse<FinancialCard>> {\r\n    return this.http.post<FinancialCard>(this.financialCardUrl, financialCard, {observe: 'response'});\r\n  }\r\n\r\n  editFinancialCard(financialCard: FinancialCard) : Observable<HttpResponse<FinancialCard>> {\r\n    return this.http.put<FinancialCard>(this.financialCardUrl, financialCard, {observe: 'response'});\r\n  }\r\n\r\n  deleteFinancialCard(id: number) : Observable<HttpResponse<any>> {\r\n    const url = `${this.financialCardUrl}/${id}`;\r\n    return this.http.delete<any>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { FinancialCard } from '../model/financial-card';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-financialcard-student',\r\n  templateUrl: './financialcard-student.component.html',\r\n  styleUrls: ['./financialcard-student.component.css']\r\n})\r\nexport class FinancialcardStudentComponent implements OnInit {\r\n\r\n  financialCard: FinancialCard = new FinancialCard({\r\n    initialState : 0,\r\n    totalPayment : 0,\r\n    totalPayout: 0, \r\n    totalCost : 0,\r\n    student : null\r\n  });\r\n  \r\n\r\n   constructor(private studentService: StudentService, private route: ActivatedRoute,private authService:AuthenticationService,private router:Router,private location:Location) {\r\n    \r\n   }\r\n\r\n\t ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params : Params) =>\r\n      this.studentService.getStudentFinancialCard(+params['id'])))\r\n      .subscribe(res => {\r\n        this.financialCard = res;\r\n      });\r\n    }\r\n  }\r\n  goBack() : void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h3>Financial card</h3>\r\n</div>\r\n\r\n<div>\r\n  <form>\r\n      <div class=\"form-group\">\r\n          <label for=\"field1c\" class=\"form-control-label\"> Initial state: </label>\r\n          <input type=\"text\" [(ngModel)]=\"financialCard.initialState\" placeholder=\"Initial state\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n      </div>\r\n      <br/>\r\n      <div class=\"form-group\">\r\n          <label for=\"field1c\" class=\"form-control-label\"> Total payment: </label>\r\n          <input type=\"text\" [(ngModel)]=\"financialCard.totalPayment\" placeholder=\"Total payment\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n      </div>\r\n      <br/>\r\n      <div class=\"form-group\">\r\n          <label for=\"field1c\" class=\"form-control-label\"> Total payout: </label>\r\n          <input type=\"text\" [(ngModel)]=\"financialCard.totalPayout\" placeholder=\"Total payout\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n          <label for=\"field1c\" class=\"form-control-label\"> Total cost: </label>\r\n          <input type=\"text\" [(ngModel)]=\"financialCard.totalCost\" placeholder=\"Total cost\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n      </div>\r\n      <br/>\r\n  </form>\r\n</div>\r\n<div>\r\n  <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n</div>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtserviceutilsService {\r\n\r\n  constructor() { }\r\n\r\n  getRoles(token:string){\r\n    let jwtData=token.split('.')[1];\r\n    let decodedJWTJsonData=window.atob(jwtData);\r\n    let decodedJWTData=JSON.parse(decodedJWTJsonData);\r\n\r\n    return [decodedJWTData.roles];\r\n\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtserviceutilsService } from '../jwtservice/jwtserviceutils.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\tprivate readonly loginPath = '/api/login';\r\n\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate jwtUtilsService:JwtserviceutilsService\r\n\t) { }\r\n\r\n\tlogin(username:string,password:string): Observable<boolean> {\r\n\t\tvar headers:HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\r\n\r\n\t\treturn this.http.post(this.loginPath, JSON.stringify({username,password}), {headers:headers,responseType:\"text\"})\r\n\t\t.pipe(map((res:any)=>{\r\n\t\t\tlet token=res;\r\n\t\t\tif (token){\r\n\t\t\t\tlocalStorage.setItem('currentUser',JSON.stringify({\r\n\t\t\t\t\tusername:username,\r\n\t\t\t\t\troles:this.jwtUtilsService.getRoles(token),\r\n\t\t\t\t\ttoken:token\r\n\t\t\t\t}));\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}))\r\n\r\n\t\t// .catch((error:any)=>{\r\n\t\t// \tif(error.status===400){\r\n\t\t// \t\treturn Observable.throw(\"Ilegale login\");\r\n\t\t\t\t\r\n\t\t// \t}\r\n\t\t// \telse{\r\n\t\t// \t\treturn Observable.throw(error.json().error|| 'Server error');\r\n\t\t\t\t\r\n\t\t// \t}\r\n\t\t// })\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tgetToken():String{\r\n\t\tvar currentUser=JSON.parse(localStorage.getItem('currentUser') || '{}');\r\n\t\tvar token =currentUser && currentUser.token;\r\n\t\treturn token ? token: \"\";\r\n\t}\r\n\r\n\tlogOut():void{\r\n\t\tlocalStorage.removeItem('currentUser');\r\n\t}\r\n\r\n\tisLoggedIn():boolean{\r\n\t\tif(this.getToken() !='') return true;\r\n\t\telse return false;\r\n\t}\r\n\r\n\tgetCurrentUser(){\r\n\t\tif(localStorage.currentUser){\r\n\t\t\treturn JSON.parse(localStorage.currentUser);\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\r\n}\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, NgForm } from '@angular/forms';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { JwtserviceutilsService } from '../jwtservice/jwtserviceutils.service';\r\nimport { User } from '../model/user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\t\r\n\t\r\n\tconstructor(private authenticationService: AuthenticationService,private router: Router,\r\n\t)\r\n\t {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tlogin(form:NgForm):void {\r\n\t\tvar username:string=form.value.username;\r\n\t\tvar password:string=form.value.password;\r\n\t\tthis.authenticationService.login(username,password).subscribe(\r\n\t\t\t(loggedIn:boolean) =>{\r\n\t\t\t\tif(loggedIn){\r\n\t\t\t\t\tthis.router.navigate(['']);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t)}\r\n}\r\n","<div class=\"row justify-content-center align-items-center loginForm\">\r\n  <form class=\"col-md-12 box\" #signupForm=\"ngForm\" (ngSubmit)=\"login(signupForm)\">\r\n    <fieldset>\r\n      <legend>Login</legend>\r\n\r\n      <div class=\"form-group row\">\r\n        <label for=\"username\" class=\"control-label col-md-3\"><b>Username:</b></label>\r\n        <div class=\"col-md-9\">\r\n          <input type=\"text\"  id=\"username\" name=\"username\" placeholder=\"username\" ngModel>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row\">\r\n        <label for=\"password\" class=\"control-label col-md-3\"><b>Password:</b></label>\r\n        <div class=\"col-md-9\">\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\" ngModel>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-3\"></div>\r\n        <div class=\"col-lg-9\">\r\n          <button type=\"submit\" class=\"btn btn-primary\"  >Login</button>\r\n        </div>\r\n      </div>\r\n\r\n    </fieldset>\r\n  </form>\r\n</div>\r\n\r\n\r\n","import { localizedString } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent {\r\n\r\n// <<<<<<< HEAD\r\n//   \t// public roles: string[]=[];\r\n// \t// currentUser:any;\r\n// \t// constructor(private router: Router) {}\r\n// =======\r\n\r\n\r\n//   public role?: string;\r\n// >>>>>>> f721dbc5c2f5a7c192403527e84cf48f156e698c\r\n\r\n// \t// // checkRole() {\r\n// \t// // \tconst item = localStorage.getItem('currentUser');\r\n\r\n// \t// // \tif (!item) {\r\n// \t// // \t\tthis.router.navigate(['login']);\r\n// \t// // \t\tthis.role = undefined;\r\n// \t// // \t\treturn;\r\n// \t// // \t}\r\n\r\n// \t// // \tconst jwt: JwtHelperService = new JwtHelperService();\r\n// \t// // \tthis.role = jwt.decodeToken(item).roles[0];\r\n// \t// // }\r\n// \t// ngOnInit(){\r\n// \t// \tthis.roles=this.getCurrentUser.roles();\r\n// \t// \tthis.currentUser=this.getCurrentUser();\r\n\r\n// \t// }\r\n// \t// getCurrentUser(){\r\n// \t// \tif(localStorage.getItem('currentUser')){\r\n// \t// \t\treturn JSON.parse(localStorage.currentUser);\r\n// \t// \t}\r\n// \t// \telse{\r\n// \t// \t\treturn false;\r\n// \t// \t}\r\n\r\n// \t// }\r\n}\r\n","import { Identifiers } from \"@angular/compiler\";\r\nexport class ExamPeriod  implements ExamPeriodInterface {\r\n\r\n    public id?: number;\r\n    public name: string;\r\n    //public startDate: Date;\r\n    //public endDate: Date;\r\n    public startDate: string;\r\n    public endDate: string;\r\n    public paymentAmount: number;\r\n\r\n    constructor(examPeriodCfg: ExamPeriodInterface) {\r\n        this.id= examPeriodCfg.id;\r\n        this.name= examPeriodCfg.name;\r\n        this.startDate= examPeriodCfg.startDate;\r\n        this.endDate= examPeriodCfg.endDate;\r\n        this.paymentAmount= examPeriodCfg.paymentAmount;\r\n    }\r\n}\r\n\r\ninterface ExamPeriodInterface {\r\n    id?: number;\r\n    name: string;\r\n    //startDate: Date;\r\n    //endDate: Date;\r\n    startDate: string;\r\n    endDate: string;\r\n    paymentAmount: number;\r\n}\r\n","\r\nimport { Student } from \"./student\";\r\n\r\nexport class FinancialCard {\r\n\r\n    public id?:number;\r\n\tpublic initialState:number;\r\n\tpublic totalPayment:number;\r\n\tpublic totalPayout:number;\r\n\tpublic totalCost:number;\r\n    public student:Student;\r\n\r\n    //inicijalni konstruktor \r\n/*\r\n    constructor(financialCardConf:FinancialCardInterface){\r\n        this.id=financialCardConf.id;\r\n        this.initialState=financialCardConf.initialState;\r\n        this.totalPayment=financialCardConf.totalPayment;\r\n        this.totalPayout=financialCardConf.totalPayout;\r\n        this.totalCost=financialCardConf.totalCost;\r\n        this.student=financialCardConf.student;\r\n    }\r\n*/\r\n    constructor(financialCardConf:FinancialCardInterface){\r\n        this.initialState=financialCardConf.initialState;\r\n        this.totalPayment=financialCardConf.totalPayment;\r\n        this.totalPayout=financialCardConf.totalPayout;\r\n        this.totalCost=financialCardConf.totalCost;\r\n    }\r\n}\r\n\r\n//inicijalni interfejs \r\n\r\n/*\r\ninterface FinancialCardInterface{\r\n    id?:number;\r\n    initialState:number;\r\n    totalPayment:number;\r\n    totalPayout:number;\r\n    totalCost:number;\r\n    student:Student;\r\n}\r\n*/\r\n\r\ninterface FinancialCardInterface{\r\n   \r\n    initialState:number;\r\n    totalPayment:number;\r\n    totalPayout:number;\r\n    totalCost:number;\r\n    student : Student\r\n   \r\n}","import { FinancialCard } from \"./financial-card\";\r\n\r\nexport class Payment implements PaymentInterface{\r\n    public id?:number;\r\n\tpublic  dateOfPayment:Date;\r\n\tpublic paymentDescription:String ;\r\n\tpublic paymentAmount:number;\r\n    public financialCard:FinancialCard;\r\n\r\n    constructor(paymentConf:PaymentInterface){\r\n        this.id=paymentConf.id;\r\n        this.dateOfPayment=paymentConf.dateOfPayment;\r\n        this.paymentDescription=paymentConf.paymentDescription;\r\n        this.paymentAmount=paymentConf.paymentAmount;\r\n        this.financialCard=paymentConf.financialCard;\r\n    }\r\n}\r\ninterface PaymentInterface{\r\n    id?:number;\r\n    dateOfPayment:Date;\r\n    paymentDescription:String;\r\n    paymentAmount:number;\r\n    financialCard:FinancialCard;\r\n}","import { Identifiers } from \"@angular/compiler\";\r\nimport { Exam } from \"./exam\";\r\nimport { PreexamObligationType } from \"./preexam-obligation-type\";\r\nimport { PreexamObligationStatus } from \"./preexam-obligation-status\";\r\n\r\nexport class PreexamObligation implements preexamObligationInterface {\r\n\r\n    public  id?:number;\r\n\tpublic points:number;\r\n\tpublic  location:String;\r\n\tpublic  dateOfObligation:Date;\r\n\tpublic passed:boolean; \r\n\tpublic  exam:Exam;\r\n\tpublic  preexamObligationType:PreexamObligationType;\r\n\tpublic  preexamObligationStatus:PreexamObligationStatus;\r\n\r\n\tconstructor(preexamObligationCfg:preexamObligationInterface){\r\n        this.id= preexamObligationCfg.id;\r\n        this.points= preexamObligationCfg.points;\r\n        this.location= preexamObligationCfg.location;\r\n\t\tthis.dateOfObligation= preexamObligationCfg.dateOfObligation;\r\n\t\tthis.passed= preexamObligationCfg.passed;\r\n\t\tthis.exam= preexamObligationCfg.exam;\r\n\t\tthis.preexamObligationType= preexamObligationCfg.preexamObligationType;\r\n\t\tthis.preexamObligationStatus= preexamObligationCfg.preexamObligationStatus;\r\n\r\n    }\r\n\r\n}\r\ninterface preexamObligationInterface{\r\n\tid?: number;\r\n    points: number;\r\n    location: String;\r\n    dateOfObligation:Date;\r\n    passed:boolean;\r\n    exam:Exam;\r\n    preexamObligationType:PreexamObligationType;\r\n    preexamObligationStatus:PreexamObligationStatus;\r\n   \r\n    \r\n\r\n}","import { Identifiers } from \"@angular/compiler\";\r\n\r\nexport class Professor implements ProfessorInterface {\r\n    \r\n    public id?: number;\r\n    public firstName: string;\r\n    public lastName: string;\r\n\r\n    constructor(professorCfg:ProfessorInterface){\r\n        this.id= professorCfg.id;\r\n        this.firstName= professorCfg.firstName;\r\n        this.lastName= professorCfg.lastName;\r\n\r\n    }\r\n\r\n}\r\n\r\ninterface ProfessorInterface{\r\n    id?: number;\r\n    firstName: string;\r\n    lastName: string;\r\n}\r\n","import { Identifiers } from \"@angular/compiler\";\r\nimport { FinancialCard } from \"./financial-card\";\r\nimport { TypeOfFinancing } from \"./type-of-financing\";\r\n\r\nexport class Student implements StudentInterface {\r\n   \tpublic id?:number;\t\r\n\tpublic cardNumber:String;\r\n\tpublic firstName:String;\r\n\tpublic lastName:String;\r\n\tpublic phoneNumber:String;\r\n\tpublic email:String;\r\n\tpublic umnc:String;\r\n\tpublic startedCollegeIn:number;\r\n\tpublic modelNumber:number;\r\n\tpublic referenceNumber:String ;\r\n\tpublic accountNumber:String ;\r\n\t//testno \r\n\tpublic cardAmount:number; \r\n    public  typeOfFinancing:TypeOfFinancing;\r\n\tpublic financialCards:FinancialCard ;\r\n    constructor(studentCfg:StudentInterface)\r\n\t{\t\r\n\t\tthis.id = studentCfg.id;\r\n\t\tthis.cardNumber = studentCfg.cardNumber;\r\n        this.email=studentCfg.email;\r\n        this.modelNumber=studentCfg.modelNumber;\r\n        this.phoneNumber=studentCfg.phoneNumber;\r\n        this.financialCards=studentCfg.financialCards;\r\n        this.referenceNumber=studentCfg.referenceNumber;\r\n        this.typeOfFinancing=studentCfg.typeOfFinancing;\r\n        this.umnc=studentCfg.umnc;\r\n        this.startedCollegeIn=studentCfg.startedCollegeIn;\r\n        this.cardAmount=studentCfg.cardAmount;\r\n        this.accountNumber=studentCfg.accountNumber;\r\n\t\tthis.firstName = studentCfg.firstName;\r\n\t\tthis.lastName = studentCfg.lastName;\t\t\r\n\t}\r\n \r\n}\r\ninterface StudentInterface {\r\n    id?: number;\r\n    firstName: String;\r\n    lastName: String;\r\n    phoneNumber:String;\r\n    cardNumber:String;\r\n    email:String;\r\n    umnc:String;\r\n    startedCollegeIn:number;\r\n    modelNumber:number;\r\n    referenceNumber:String ;\r\n    accountNumber:String ;\r\n    typeOfFinancing:TypeOfFinancing;\r\n    cardAmount:number;\r\n    financialCards:FinancialCard;\r\n        \r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Payment } from '../model/payment';\r\nimport { PaymentService } from '../payment/payment.service';\r\n\r\n@Component({\r\n  selector: 'app-payment-details',\r\n  templateUrl: './payment-details.component.html',\r\n  styleUrls: ['./payment-details.component.css']\r\n})\r\nexport class PaymentDetailsComponent implements OnInit {\r\n\r\n  payment: Payment = new Payment({\r\n    dateOfPayment : new Date(), \r\n    paymentAmount : 0, \r\n    paymentDescription : '',\r\n    financialCard : null\r\n  });\r\n\r\n  mode : string = 'ADD'; \r\n\r\n  constructor(private paymentService : PaymentService, private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params: Params) => \r\n      this.paymentService.getPayment(+params['id'])))\r\n      .subscribe(res => {\r\n        this.payment = res.body;\r\n      })\r\n    }\r\n  }\r\n\r\n  private edit() : void {\r\n    this.paymentService.editPayment(this.payment)\r\n    .subscribe(payment => {\r\n      this.paymentService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack() : void {\r\n    this.location.back();\r\n  }\r\n\r\n  private add() : void {\r\n    this.paymentService.addPayment(this.payment)\r\n    .subscribe(res => {\r\n      this.paymentService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  save() : void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  } \r\n\r\n}\r\n","<div>\r\n    <h3>Payment</h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Date of payment: </label>\r\n            <input type=\"text\" [(ngModel)]=\"payment.dateOfPayment\" placeholder=\"Date of payment\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Payment amount: </label>\r\n            <input type=\"text\" [(ngModel)]=\"payment.paymentAmount\" placeholder=\"Payment amount\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Payment description: </label>\r\n            <input type=\"text\" [(ngModel)]=\"payment.paymentDescription\" placeholder=\"Payment description\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n\r\n  dateOfPayment : new Date(), \r\n  paymentAmount : 0, \r\n  paymentDescription : '',\r\n  financialCard : null","<table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Date of payment <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Payment description <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Payment amount <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let payment of payments\">\r\n        <td>{{payment.dateOfPayment}}</td>\r\n        <td>{{payment.paymentDescription}}</td>\r\n        <td>{{payment.paymentAmount}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  ","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Payment } from '../model/payment';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.css']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n   payments?: Payment[];\r\n\r\n    //  subscription: Subscription;\r\n\r\n  constructor(private studentService: StudentService, private router: Router,private authService:AuthenticationService) {\r\n    //  this.subscription = studentService.RegenerateData$.subscribe(() =>\r\n    //   //  this.getPayment(studentId?:number)\r\n\r\n    //  );\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    // this.getPayment(studentId:number);\r\n  }\r\n\r\n  getPayment(studentId:number)\r\n  {\r\n    this.studentService.getStudentPayment(studentId);\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Payment } from '../model/payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentService {\r\n\r\n  private paymentUrl = \"api/payment\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange(){\r\n    this.RegenerateData.next();\r\n  }\r\n\r\n  getPayments() : Observable<HttpResponse<Payment[]>> {\r\n    return this.http.get<Payment[]>(this.paymentUrl, {observe: 'response'});\r\n  }\r\n\r\n  getPayment(id: number) : Observable<HttpResponse<Payment>> {\r\n    const url = `${this.paymentUrl}/${id}`;\r\n    return this.http.get<Payment>(url, {observe: 'response'});\r\n  }\r\n\r\n  addPayment(payment: Payment) : Observable<HttpResponse<Payment>> {\r\n    return this.http.post<Payment>(this.paymentUrl, payment, {observe: 'response'});\r\n  }\r\n\r\n  editPayment(payment: Payment) : Observable<HttpResponse<Payment>> {\r\n    return this.http.put<Payment>(this.paymentUrl, payment, {observe: 'response'});\r\n  }\r\n\r\n  deletePayment(id: number) : Observable<HttpResponse<Payment>> {\r\n    const url = `${this.paymentUrl}/${id}`;\r\n    return this.http.delete<any>(url, {observe: 'response'});\r\n  }\r\n}\r\n","<table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Date of payout <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Payout description <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Payout amount <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let payout of payouts\">\r\n        <td>{{payout.dateOfPayOut}}</td>\r\n        <td>{{payout.descriptionPayOut}}</td>\r\n        <td>{{payout.payOutAmount}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Payout } from '../model/payout';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-payout',\r\n  templateUrl: './payout.component.html',\r\n  styleUrls: ['./payout.component.css']\r\n})\r\nexport class PayoutComponent implements OnInit {\r\n   payouts?:Payout[];\r\n   //  subscription: Subscription;\r\n  constructor(private studentService: StudentService, private router: Router,private authService:AuthenticationService) { \r\n    //  this.subscription = studentService.RegenerateData$.subscribe(() =>\r\n    //   //  this.getPayout(studentId?:number)\r\n\r\n    //  );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getPayout(studentId:number);\r\n  }\r\n  getPayout(studentId:number)\r\n  {\r\n    this.studentService.getStudentPayout(studentId);\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\nimport { PreexamObligationService } from '../preexam-obligation/preexam-obligation.service';\r\n\r\n@Component({\r\n  selector: 'app-preexam-obligation-details',\r\n  templateUrl: './preexam-obligation-details.component.html',\r\n  styleUrls: ['./preexam-obligation-details.component.css']\r\n})\r\nexport class PreexamObligationDetailsComponent implements OnInit {\r\n\r\n  preexamObligation: PreexamObligation = new PreexamObligation({\r\n    points : 0, \r\n    location : '',\r\n    dateOfObligation : new Date(),\r\n    passed : false, \r\n    preexamObligationStatus : null, \r\n    preexamObligationType : null,\r\n    exam : null\r\n  });\r\n\r\n  mode : string = 'ADD'; \r\n\r\n  constructor(private preexamObligationService : PreexamObligationService,private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params : Params) =>\r\n      this.preexamObligationService.getPreexamObligation(+params['id'])))\r\n      .subscribe(res => {\r\n        this.preexamObligation = res.body;\r\n      });\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add() : void {\r\n    this.preexamObligationService.addPreexamObligation(this.preexamObligation)\r\n    .subscribe(res => {\r\n      this.preexamObligationService.announceChange(); \r\n      this.goBack();\r\n    })\r\n  } \r\n\r\n  private edit() : void {\r\n    this.preexamObligationService.editPreexamObligation(this.preexamObligation)\r\n    .subscribe(preexamObligation => {\r\n      this.preexamObligationService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack() : void {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n}\r\n","<div>\r\n    <h3>Preexam Obligation</h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Points: </label>\r\n            <input type=\"text\" [(ngModel)]=\"preexamObligation.points\" placeholder=\"Points\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Location: </label>\r\n            <input type=\"text\" [(ngModel)]=\"preexamObligation.location\" placeholder=\"Location\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Date of obligation: </label>\r\n            <input type=\"text\" [(ngModel)]=\"preexamObligation.dateOfObligation\" placeholder=\"Date of obligation\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Passed: </label>\r\n            <select [(ngModel)]=\"preexamObligation.passed\" class=\"form-control\", id=\"field1c\", name=\"field1\">\r\n                <option value=\"true\">True</option>\r\n                <option value=\"false\"> False </option>\r\n            </select>\r\n        </div>\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n\r\n<!-- dodati status i tip -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-preexam-obligation',\r\n  templateUrl: './preexam-obligation.component.html',\r\n  styleUrls: ['./preexam-obligation.component.css']\r\n})\r\nexport class PreexamObligationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>preexam-obligation works!</p>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\n\r\n@Injectable()\r\nexport class PreexamObligationService {\r\n\r\n  private path=\"api/preexamObligation\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n    private RegenerateData = new Subject<void>();\r\n\r\n    RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n    announceChange() {\r\n        this.RegenerateData.next();\r\n    }\r\n\r\n    getPreexamObligation(id: number) : Observable<HttpResponse<PreexamObligation>> {\r\n        const url = `${this.path}/${id}`;\r\n        return this.http.get<PreexamObligation>(url, {observe: 'response'});\r\n    }\r\n\r\n    getAllPreexamObligations(): Observable<HttpResponse<PreexamObligation[]>> {\r\n        return this.http.get<PreexamObligation[]>(this.path, {observe: 'response'});\r\n    }\r\n   \r\n    addPreexamObligation(preexamObligation: PreexamObligation) : Observable<HttpResponse<PreexamObligation>> {\r\n        return this.http.post<PreexamObligation>(this.path, preexamObligation, {observe: 'response'});\r\n    }\r\n\r\n    editPreexamObligation(preexamObligation: PreexamObligation) : Observable<HttpResponse<PreexamObligation>> {\r\n        return this.http.put<PreexamObligation>(this.path, preexamObligation, {observe: 'response'});\r\n    }\r\n\r\n    deletePreexamObligation(id: number) : Observable<HttpResponse<any>> {\r\n        const url = `${this.path}/${id}`;\r\n        return this.http.delete<any>(url, {observe: 'response'})\r\n    }\r\n\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Course } from '../model/course';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-courses',\r\n  templateUrl: './professor-courses.component.html',\r\n  styleUrls: ['./professor-courses.component.css']\r\n})\r\nexport class ProfessorCoursesComponent implements OnInit {\r\n  courses:Course[] ;\r\n  constructor(private professorService: ProfessorService, private router: Router,private authService:AuthenticationService, private route:ActivatedRoute, private location:Location ) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['courseId']) {\r\n      this.route.params.pipe(switchMap((params : Params) =>\r\n      this.professorService.getProfsesorCourses(+params['courseId'])))\r\n      .subscribe(res => {\r\n        this.courses = res;\r\n        \r\n      });\r\n  }\r\n\r\n  }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n}\r\n","<table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Title <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Code <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Ects <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Start Date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>End Date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let course of courses\">\r\n        <td>{{course.title}}</td>\r\n        <td>{{course.courseCode}}</td>\r\n        <td>{{course.ECTS}}</td>\r\n        <td>{{course.startDate}}</td>\r\n        <td>{{course.endDate}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  \r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-professor-exams',\r\n  templateUrl: './professor-exams.component.html',\r\n  styleUrls: ['./professor-exams.component.css']\r\n})\r\nexport class ProfessorExamsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>professor-exams works!</p>\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Professor } from '../model/professor';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-profile',\r\n  templateUrl: './professor-profile.component.html',\r\n  styleUrls: ['./professor-profile.component.css']\r\n})\r\nexport class ProfessorProfileComponent implements OnInit {\r\n  professor= new Professor({\r\n    firstName:'',\r\n    lastName:''\r\n  })\r\n\r\n  constructor(private location:Location,private professorService: ProfessorService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.snapshot.params['id'];\r\n    if (this.route.snapshot.params['id']) {\r\n      // fetch professor if we edit the existing professor\r\n      this.route.params.pipe(switchMap((params: Params) => \r\n          this.professorService.getProfessor(+params['id']))) // convert to number\r\n        .subscribe(res => {\r\n         // this.professor = res.body;\r\n          \r\n          }\r\n        );\r\n    } \r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h3>Professor</h3>\r\n  </div>\r\n  \r\n  <div>\r\n  \r\n    <form >\r\n          <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\">First name</label>\r\n            <input type=\"text\" [(ngModel)]=\"professor.firstName\" placeholder=\"First name\" \r\n               class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label for=\"field2c\" class=\"form-control-label\">Last name</label>\r\n            <input type=\"text\" [(ngModel)]=\"professor.lastName\" placeholder=\"Last name\" \r\n               class=\"form-control\" id=\"field2c\" name=\"field2\">\r\n          </div>\r\n         \r\n         \r\n     </form>\r\n     </div>\r\n  <div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div> \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-professor-students',\r\n  templateUrl: './professor-students.component.html',\r\n  styleUrls: ['./professor-students.component.css']\r\n})\r\nexport class ProfessorStudentsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Course } from '../model/course';\r\nimport { Student } from '../model/student';\r\nimport { Professor } from '../model/professor';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\n\r\n@Injectable()\r\nexport class ProfessorService {\r\n\r\n  private path=\"api/professors\"\r\n\r\n  constructor(private http: HttpClient, private authService:AuthenticationService) { }\r\n\r\n    private RegenerateData = new Subject<void>();\r\n\r\n    RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n    announceChange() {\r\n        this.RegenerateData.next();\r\n    }\r\n    addProfessor(professor: Professor): Observable<HttpResponse<Professor>> {\r\n      return this.http.post<Professor>(this.path, professor, {observe: 'response'});\r\n    }\r\n\r\n  editProfessor(professor: Professor): Observable<HttpResponse<Professor>> {\r\n      return this.http.put<Professor>(this.path, professor, {observe: 'response'});\r\n    }\r\n\r\n  deleteProfessor(professorId: number): Observable<HttpResponse<any>> {\r\n      const url = `${this.path}/${professorId}`;\r\n      return this.http.delete<any>(url, {observe: 'response'});\r\n    }\r\n    getProfessors(): Observable<HttpResponse<Professor[]>> {\r\n      return this.http.get<Professor[]>(this.path, {observe: 'response'});\r\n    }\r\n\r\n    getProfessor(id:number):Observable<HttpResponse<Professor[]>>{\r\n      const url=`${this.path}/{id}`;\r\n      return this.http.get<Professor[]>(url, {observe: 'response'});\r\n    } \r\n\r\n\r\n    getProfessorStudents(professorId:number): Observable<HttpResponse<Student[]>> {\r\n      const headInfo={\r\n        'Content - Type': 'application/json',\r\n        'X-Auth-Token':\"\" + this.authService.getToken(),\r\n            }\r\n            const requestOptions={\r\n              headers:new HttpHeaders(headInfo)\r\n            }\r\n      const url=`${this.path}/{professorId}/professorStudents`;\r\n      return this.http.get<Student[]>(url, {observe: 'response'});\r\n    }\r\n\r\n    getProfsesorCourses(courseId:number): Observable<Course[]> {\r\n      const headInfo={\r\n        'Content - Type': 'application/json',\r\n        'X-Auth-Token':\"\" + this.authService.getToken(),\r\n            }\r\n            const requestOptions={\r\n              headers:new HttpHeaders(headInfo)\r\n            }\r\n      const url=`${this.path}/{courseId}/proffesorCourses`;\r\n      return this.http.get<Course[]>(url, requestOptions);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminAddExamPeriodComponent } from '../admin-add-exam-period/admin-add-exam-period.component';\r\nimport { AdminAddFinancialCardComponent } from '../admin-add-financial-card/admin-add-financial-card.component';\r\nimport { AdminDetailsExamPeriodComponent } from '../admin-details-exam-period/admin-details-exam-period.component';\r\nimport { AdminDetailsFinancialCardComponent } from '../admin-details-financial-card/admin-details-financial-card.component';\r\nimport { AdminFinancialCardComponent } from '../admin-financial-card/admin-financial-card.component';\r\nimport { AdminListExamPeriodComponent } from '../admin-list-exam-period/admin-list-exam-period.component';\r\nimport { AdminListFinancialCardComponent } from '../admin-list-financial-card/admin-list-financial-card.component';\r\nimport { AdminPaymentComponent } from '../admin-payment/admin-payment.component';\r\nimport { AdminPreexamObligationComponent } from '../admin-preexam-obligation/admin-preexam-obligation.component';\r\nimport { AdminStudentComponent } from '../admin-student/admin-student.component';\r\nimport { ExamPeriodDetailsComponent } from '../exam-period-details/exam-period-details.component';\r\nimport { FinancialCardDetailsComponent } from '../financial-card-details/financial-card-details.component';\r\nimport { FinancialcardStudentComponent } from '../financialcard-student/financialcard-student.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { MainComponent } from '../main/main.component';\r\nimport { Professor } from '../model/professor';\r\nimport { PaymentDetailsComponent } from '../payment-details/payment-details.component';\r\nimport { PaymentComponent } from '../payment/payment.component';\r\nimport { PayoutComponent } from '../payout/payout.component';\r\nimport { PreexamObligationDetailsComponent } from '../preexam-obligation-details/preexam-obligation-details.component';\r\nimport { ProfessorProfileComponent } from '../professor-profile/professor-profile.component';\r\nimport { StudentDetailsComponent } from '../student-details/student-details.component';\r\nimport { StudentProfileComponent } from '../student-profile/student-profile.component';\r\nimport { StudentsComponent } from '../students/students.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'financialCard', component: FinancialcardStudentComponent },\r\n  { path: 'studentProfile', component: StudentProfileComponent },\r\n  {path: 'professorProfile', component: ProfessorProfileComponent},\r\n  { path: 'studentPayment', component: PaymentComponent },\r\n  { path: 'studentPayout', component: PayoutComponent },\r\n  { path: 'main', component: MainComponent },\r\n  //{ path: 'addExamPeriod', component: ExamPeriodDetailsComponent},\r\n  //{ path : 'editExamPeriod/:id', component: ExamPeriodDetailsComponent},\r\n  { path: 'examPeriods', component: AdminListExamPeriodComponent },\r\n  { path: 'examPeriods/:id', component: AdminDetailsExamPeriodComponent },\r\n  { path: 'addExamPeriod', component: AdminAddExamPeriodComponent },\r\n  { path : 'financialCards', component: AdminListFinancialCardComponent},\r\n  { path: 'financialCards/:id', component: AdminDetailsFinancialCardComponent}, \r\n  { path: 'adminAddFinancialCard', component: AdminAddFinancialCardComponent},\r\n  { path: 'addFinancialCard', component: FinancialCardDetailsComponent},\r\n  { path : 'editFinancialCard/:id', component: FinancialCardDetailsComponent},\r\n  { path: 'addPreexamObligation', component: PreexamObligationDetailsComponent},\r\n  { path: 'editPreexamObligation/:id', component: PreexamObligationDetailsComponent},\r\n  { path: 'addStudent', component: StudentDetailsComponent},\r\n  { path: 'editStudent/:id', component: StudentDetailsComponent},\r\n  { path: 'addPayment', component: PaymentDetailsComponent},\r\n  { path: 'editPayment/:id', component: PaymentDetailsComponent},\r\n  { path: '**', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash: false})\r\n  ],\r\n  exports: [RouterModule]\r\n  \r\n})\r\nexport class AppRoutingModule { }\r\n\r\n\r\n\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Student } from '../model/student';\r\nimport { TypeOfFinancing } from '../model/type-of-financing';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-details',\r\n  templateUrl: './student-details.component.html',\r\n  styleUrls: ['./student-details.component.css']\r\n})\r\nexport class StudentDetailsComponent implements OnInit {\r\n\r\n  student: Student = new Student({\r\n    cardNumber : '', \r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNumber: '',\r\n    email: '',\r\n    umnc: '',\r\n    startedCollegeIn : 0,\r\n    modelNumber: 0,\r\n    referenceNumber: '',\r\n    accountNumber : '',\r\n    cardAmount : 0,\r\n    //testno\r\n    typeOfFinancing: null,\r\n    financialCards : null\r\n  });\r\n  \r\n  mode: string = 'ADD'; \r\n\r\n  constructor(private studentService: StudentService, private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n      this.studentService.getStudent(+params['id'])))\r\n      .subscribe(res => {\r\n        this.student = res.body;\r\n      });\r\n    }\r\n  }\r\n\r\n  save() : void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.studentService.addStudent(this.student)\r\n    .subscribe(res => {\r\n      this.studentService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  private edit() : void {\r\n    this.studentService.editStudent(this.student)\r\n    .subscribe(student => {\r\n      this.studentService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack() : void {\r\n    this.location.back(); \r\n  }\r\n}\r\n","<div>\r\n    <h3> About student </h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Card number: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.cardNumber\" placeholder=\"Card number\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> First name: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.firstName\" placeholder=\"First name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Last name: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Phone number: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Email:  </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Umnc:  </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Started college in:  </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Model number: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Reference number:  </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Account number: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Card amount: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <!-- Mora se napraviti da se izvlaci objekat,kao i za studenta preexamObligation.passed --preexamObligation treba da bude objekat iz ts-a -->\r\n        <!-- <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Passed: </label>\r\n            <select [(ngModel)]=\"preexamObligation.passed\" class=\"form-control\", id=\"field1c\", name=\"field1\">\r\n                <option value=\"true\">Self-financing</option>\r\n                <option value=\"false\"> Budget </option>\r\n            </select>\r\n        </div> -->\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n\r\n ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Location } from '@angular/common';\r\nimport { StudentService } from '../students/student.service';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-student-documents',\r\n  templateUrl: './student-documents.component.html',\r\n  styleUrls: ['./student-documents.component.css']\r\n})\r\nexport class StudentDocumentsComponent implements OnInit {\r\n  documents:Document[];\r\n \r\n  constructor(private studentService: StudentService, private router: Router,private authService:AuthenticationService,private route:ActivatedRoute,private location:Location) { \r\n  \r\n  }\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params : Params) =>\r\n      this.studentService.getStudentDocument(+params['id'])))\r\n      .subscribe(res => {\r\n        this.documents = res;\r\n        \r\n      });\r\n    }\r\n      \r\n  }\r\n  \r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  }\r\n\r\n","<div>\r\n    <h3>Student</h3>\r\n  </div>\r\n  \r\n  <table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Title <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Download <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Url <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Student <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Type <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        \r\n    </thead>\r\n    <tbody>\r\n      \r\n      <tr *ngFor=\"let document of documents\">\r\n      \r\n        <td>{{document.title}}</td>\r\n        <td><button>{{document.download}}</button></td>\r\n        <td>{{document.student.firstname}}</td>\r\n        <td>{{document.url}}</td>\r\n        <td>{{document.documentType.name}}</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div> \r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Enrollment } from '../model/enrollment';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-enrollment',\r\n  templateUrl: './student-enrollment.component.html',\r\n  styleUrls: ['./student-enrollment.component.css']\r\n})\r\nexport class StudentEnrollmentComponent implements OnInit {\r\n  \r\n  enrollments: Enrollment[];\r\n  \r\n   constructor(private studentService: StudentService, private router: Router,private authService:AuthenticationService,private route:ActivatedRoute) { \r\n  \r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params : Params) =>\r\n      this.studentService.getStudentEnrollment(+params['id'])))\r\n      .subscribe(res => {\r\n        this.enrollments = res;\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Start date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>End date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Course name <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let enrollment of enrollments\">\r\n        <td>{{enrollment.startDate}}</td>\r\n        <td>{{enrollment.endDate}}</td>\r\n        <td>{{enrollment.course.title}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n","<table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Grade <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Points <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Exam date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Status <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>    \r\n        <th>Course name <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>     \r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let exam of exams\">\r\n        <td>{{exam.grade}}</td>\r\n        <td>{{exam.points}}</td>\r\n        <td>{{exam.examDate}}</td>\r\n        <td>{{exam.status}}</td>\r\n        <td>{{exam.courseName}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Exam } from '../model/exam';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-exams',\r\n  templateUrl: './student-exams.component.html',\r\n  styleUrls: ['./student-exams.component.css']\r\n})\r\nexport class StudentExamsComponent implements OnInit {\r\n\r\n  exams?:Exam[];\r\n  constructor(private studentService: StudentService, private router: Router,private authService:AuthenticationService) { \r\n    //  this.subscription = studentService.RegenerateData$.subscribe(() =>\r\n    //   //  this.getExams(studentId?:number)\r\n\r\n    //  );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getExams(studentId:number);\r\n  }\r\n\r\n  getExams(studentId:number){\r\n    this.studentService.getStudentsExams(studentId);\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Student } from '../model/student';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { StudentService } from '../students/student.service';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-student-profile',\r\n  templateUrl: './student-profile.component.html',\r\n  styleUrls: ['./student-profile.component.css']\r\n})\r\n\r\nexport class StudentProfileComponent implements OnInit {\r\n  student=new Student({\r\n    cardNumber:'',\r\n    firstName:'',\r\n    lastName:'',\r\n    phoneNumber:'',\r\n    email:'',\r\n    umnc:'',\r\n    modelNumber:0,\r\n    startedCollegeIn:0,\r\n    referenceNumber:'',\r\n    cardAmount:0,\r\n    accountNumber:'',\r\n    typeOfFinancing:null,\r\n    financialCards:null\r\n  });\r\n\r\n\r\n  constructor(private location:Location,private studentService: StudentService, private route: ActivatedRoute) {}\r\n   \r\n\r\n  ngOnInit(): void {\r\n    this.route.snapshot.params['id'];\r\n    if (this.route.snapshot.params['id']) {\r\n      // fetch student if we edit the existing student\r\n      this.route.params.pipe(switchMap((params: Params) => \r\n          this.studentService.getStudent(+params['id']))) // convert to number\r\n        .subscribe(res => {\r\n          this.student = res.body;\r\n          \r\n          }\r\n        );\r\n    } \r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h3>Student</h3>\r\n  </div>\r\n  \r\n  <div>\r\n  \r\n    <form >\r\n          <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\">Card number</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.cardNumber\" placeholder=\"Card number\" \r\n               class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label for=\"field2c\" class=\"form-control-label\">First name</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.firstName\" placeholder=\"First name\" \r\n               class=\"form-control\" id=\"field2c\" name=\"field2\">\r\n          </div>\r\n         \r\n          <div class=\"form-group\">\r\n            <label for=\"field3c\" class=\"form-control-label\">Last name</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" \r\n               class=\"form-control\" id=\"field3c\" name=\"field3\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field4c\" class=\"form-control-label\">Phone number</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.phoneNumber\" placeholder=\"Phone number\" \r\n               class=\"form-control\" id=\"field4c\" name=\"field4\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field5c\" class=\"form-control-label\">Email</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.email\" placeholder=\"Email\" \r\n               class=\"form-control\" id=\"field5c\" name=\"field5\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"field6c\" class=\"form-control-label\">UMNC</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.umnc\" placeholder=\"Umns\" \r\n               class=\"form-control\" id=\"field6c\" name=\"field6\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"field7c\" class=\"form-control-label\">Started college in</label>\r\n            <input type=\"number\" [(ngModel)]=\"student.startedCollegeIn\" placeholder=\"Started college in\" \r\n               class=\"form-control\" id=\"field7c\" name=\"field7\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field8c\" class=\"form-control-label\">Model number</label>\r\n            <input type=\"number\" [(ngModel)]=\"student.modelNumber\" placeholder=\"Model number\" \r\n               class=\"form-control\" id=\"field8c\" name=\"field8\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field8c\" class=\"form-control-label\">Reference number</label>\r\n            <input type=\"number\" [(ngModel)]=\"student.referenceNumber\" placeholder=\"Reference number\" \r\n               class=\"form-control\" id=\"field8c\" name=\"field8\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field9c\" class=\"form-control-label\">Account number</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.accountNumber\" placeholder=\"Account number\" \r\n               class=\"form-control\" id=\"field9c\" name=\"field9\">\r\n          </div>\r\n     </form>\r\n     \r\n  </div>\r\n  <div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n     </div> ","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Student } from '../model/student';\r\nimport { Exam } from '../model/exam';\r\nimport { FinancialCard } from '../model/financial-card';\r\nimport { Payment } from '../model/payment';\r\nimport { Payout } from '../model/payout';\r\nimport { Enrollment } from '../model/enrollment';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\n\r\n@Injectable()\r\nexport class StudentService {\r\n\r\n  private path=\"api/student\";\r\n\r\n  constructor(private http: HttpClient,private authService:AuthenticationService) { }\r\n\r\n    private RegenerateData = new Subject<void>();\r\n\r\n    RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n    announceChange() {\r\n        this.RegenerateData.next();\r\n    }\r\n\r\n  getStudents(): Observable<HttpResponse<Student[]>> {\r\n      return this.http.get<Student[]>(this.path, {observe: 'response'});\r\n    }\r\n\r\n  getStudent(id: number): Observable<HttpResponse<Student>> {\r\n      const url = `${this.path}/${id}`;\r\n      return this.http.get<Student>(url, {observe: 'response'});\r\n    }\r\n\r\n  addStudent(student: Student): Observable<HttpResponse<Student>> {\r\n      return this.http.post<Student>(this.path, student, {observe: 'response'});\r\n    }\r\n\r\n  editStudent(student: Student): Observable<HttpResponse<Student>> {\r\n      return this.http.put<Student>(this.path, student, {observe: 'response'});\r\n    }\r\n\r\n  deleteStudent(studentId: number): Observable<HttpResponse<any>> {\r\n      const url = `${this.path}/${studentId}`;\r\n      return this.http.delete<any>(url, {observe: 'response'});\r\n    }\r\n\r\n    getStudentsExams(id:number): Observable<Exam[]> {\r\n\r\n            const headInfo={\r\n              'Content - Type': 'application/json',\r\n              'X-Auth-Token':\"\" + this.authService.getToken(),\r\n                  }\r\n            const requestOptions={\r\n              headers:new HttpHeaders(headInfo)\r\n            }\r\n\r\n        const url=`${this.path}/${id}/exams`;\r\n        return this.http.get<Exam[]>(url, requestOptions);\r\n    }\r\n\r\n   getStudentFinancialCard(id: number): Observable<FinancialCard> {\r\n             const headInfo={\r\n        'Content - Type': 'application/json',\r\n        'X-Auth-Token':\"\" + this.authService.getToken(),\r\n            }\r\n            const requestOptions={\r\n              headers:new HttpHeaders(headInfo)\r\n            }\r\n        const url = `${this.path}/${id}/financial-card`;\r\n        return this.http.get<FinancialCard>(url,requestOptions);\r\n\r\n    }\r\n    getStudentPayment(id: number): Observable<Payment[]> {\r\n            const headInfo={\r\n              'Content - Type': 'application/json',\r\n              'X-Auth-Token':\"\" + this.authService.getToken(),\r\n                  }\r\n            const requestOptions={\r\n              headers:new HttpHeaders(headInfo)\r\n            }\r\n      const url = `${this.path}/${id}/payment`;\r\n      return this.http.get<Payment[]>(url, requestOptions);\r\n      \r\n  }\r\n\r\n  getStudentPayout(id: number): Observable<Payout[]> {\r\n    const headInfo={\r\n      'Content - Type': 'application/json',\r\n      'X-Auth-Token':\"\" + this.authService.getToken(),\r\n          }\r\n          const requestOptions={\r\n            headers:new HttpHeaders(headInfo)\r\n          }\r\n    const url = `${this.path}/${id}/payout`;\r\n    return this.http.get<Payout[]>(url, requestOptions);  \r\n }\r\n\r\ngetStudentDocument(id: number): Observable<Document[]> {\r\n  const headInfo={\r\n    'Content - Type': 'application/json',\r\n    'X-Auth-Token':\"\" + this.authService.getToken(),\r\n        }\r\n        const requestOptions={\r\n          headers:new HttpHeaders(headInfo)\r\n        }\r\n  const url = `${this.path}/${id}/document`;\r\n  return this.http.get<Document[]>(url, requestOptions);\r\n  \r\n}\r\ngetStudentEnrollment(id: number): Observable<Enrollment[]> {\r\n  const headInfo={\r\n    'Content - Type': 'application/json',\r\n    'X-Auth-Token':\"\" + this.authService.getToken(),\r\n        }\r\n        const requestOptions={\r\n          headers:new HttpHeaders(headInfo)\r\n        }\r\n  const url = `${this.path}/${id}/enrollment`;\r\n  return this.http.get<Enrollment[]>(url, requestOptions);\r\n  \r\n}\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-students',\r\n  templateUrl: './students.component.html',\r\n  styleUrls: ['./students.component.css']\r\n})\r\nexport class StudentsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n  path : 'https://localhost:8443'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n\r\n\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}