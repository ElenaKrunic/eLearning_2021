{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/admin-add-course/admin-add-course.component.ts","./src/app/admin-add-course/admin-add-course.component.html","./src/app/admin-add-exam-period/admin-add-exam-period.component.ts","./src/app/admin-add-exam-period/admin-add-exam-period.component.html","./src/app/admin-add-exam/admin-add-exam.component.ts","./src/app/admin-add-exam/admin-add-exam.component.html","./src/app/admin-add-financial-card/admin-add-financial-card.component.ts","./src/app/admin-add-financial-card/admin-add-financial-card.component.html","./src/app/admin-add-payment/admin-add-payment.component.ts","./src/app/admin-add-payment/admin-add-payment.component.html","./src/app/admin-add-preexam-obligation/admin-add-preexam-obligation.component.ts","./src/app/admin-add-preexam-obligation/admin-add-preexam-obligation.component.html","./src/app/admin-add-professor/admin-add-professor.component.ts","./src/app/admin-add-professor/admin-add-professor.component.html","./src/app/admin-add-student/admin-add-student.component.ts","./src/app/admin-add-student/admin-add-student.component.html","./src/app/admin-add-user/admin-add-user.component.ts","./src/app/admin-add-user/admin-add-user.component.html","./src/app/admin-course/admin-course.component.html","./src/app/admin-course/admin-course.component.ts","./src/app/admin-details-course/admin-details-course.component.ts","./src/app/admin-details-course/admin-details-course.component.html","./src/app/admin-details-document/admin-details-document.component.ts","./src/app/admin-details-document/admin-details-document.component.html","./src/app/admin-details-exam-period/admin-details-exam-period.component.ts","./src/app/admin-details-exam-period/admin-details-exam-period.component.html","./src/app/admin-details-exam/admin-details-exam.component.ts","./src/app/admin-details-exam/admin-details-exam.component.html","./src/app/admin-details-financial-card/admin-details-financial-card.component.ts","./src/app/admin-details-financial-card/admin-details-financial-card.component.html","./src/app/admin-details-payment/admin-details-payment.component.ts","./src/app/admin-details-payment/admin-details-payment.component.html","./src/app/admin-details-preexam-obligation-type/admin-details-preexam-obligation-type.component.ts","./src/app/admin-details-preexam-obligation-type/admin-details-preexam-obligation-type.component.html","./src/app/admin-details-preexam-obligation/admin-details-preexam-obligation.component.ts","./src/app/admin-details-preexam-obligation/admin-details-preexam-obligation.component.html","./src/app/admin-details-professor/admin-details-professor.component.ts","./src/app/admin-details-professor/admin-details-professor.component.html","./src/app/admin-details-student/admin-details-student.component.ts","./src/app/admin-details-student/admin-details-student.component.html","./src/app/admin-details-user/admin-details-user.component.ts","./src/app/admin-details-user/admin-details-user.component.html","./src/app/admin-documents/admin-documents.component.ts","./src/app/admin-documents/admin-documents.component.html","./src/app/admin-exam/admin-exam.component.html","./src/app/admin-exam/admin-exam.component.ts","./src/app/admin-financial-card/admin-financial-card.component.html","./src/app/admin-financial-card/admin-financial-card.component.ts","./src/app/admin-list-course/admin-list-course.component.html","./src/app/admin-list-course/admin-list-course.component.ts","./src/app/admin-list-exam-period/admin-list-exam-period.component.html","./src/app/admin-list-exam-period/admin-list-exam-period.component.ts","./src/app/admin-list-exam/admin-list-exam.component.html","./src/app/admin-list-exam/admin-list-exam.component.ts","./src/app/admin-list-financial-card/admin-list-financial-card.component.html","./src/app/admin-list-financial-card/admin-list-financial-card.component.ts","./src/app/admin-list-payment/admin-list-payment.component.html","./src/app/admin-list-payment/admin-list-payment.component.ts","./src/app/admin-list-preexam-obligation/admin-list-preexam-obligation.component.html","./src/app/admin-list-preexam-obligation/admin-list-preexam-obligation.component.ts","./src/app/admin-list-professor/admin-list-professor.component.html","./src/app/admin-list-professor/admin-list-professor.component.ts","./src/app/admin-list-students/admin-list-students.component.html","./src/app/admin-list-students/admin-list-students.component.ts","./src/app/admin-list-user/admin-list-user.component.html","./src/app/admin-list-user/admin-list-user.component.ts","./src/app/admin-payment/admin-payment.component.html","./src/app/admin-payment/admin-payment.component.ts","./src/app/admin-preexam-obligation/admin-preexam-obligation.component.html","./src/app/admin-preexam-obligation/admin-preexam-obligation.component.ts","./src/app/admin-professors/admin-professors.component.html","./src/app/admin-professors/admin-professors.component.ts","./src/app/admin-profile/admin-profile.component.ts","./src/app/admin-profile/admin-profile.component.html","./src/app/admin-student/admin-student.component.html","./src/app/admin-student/admin-student.component.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/header/header.component.ts","./src/app/core/navbar-admin/navbar-admin.component.ts","./src/app/core/navbar-admin/navbar-admin.component.html","./src/app/core/navbar-professor/navbar-professor.component.ts","./src/app/core/navbar-professor/navbar-professor.component.html","./src/app/core/navbar-student/navbar-student.component.ts","./src/app/core/navbar-student/navbar-student.component.html","./src/app/courses/courses.service.ts","./src/app/exam-period-details/exam-period-details.component.ts","./src/app/exam-period-details/exam-period-details.component.html","./src/app/exam-period/exam-period.service.ts","./src/app/exam/exam.service.ts","./src/app/financial-card-details/financial-card-details.component.ts","./src/app/financial-card-details/financial-card-details.component.html","./src/app/financial-card/financialcard.service.ts","./src/app/financialcard-student/financialcard-student.component.ts","./src/app/financialcard-student/financialcard-student.component.html","./src/app/jwtservice/jwtserviceutils.service.ts","./src/app/login/authentication.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/role.service.ts","./src/app/main/main.component.ts","./src/app/model/course.ts","./src/app/model/exam-period.ts","./src/app/model/exam.ts","./src/app/model/financial-card.ts","./src/app/model/payment.ts","./src/app/model/preexam-obligation.ts","./src/app/model/professor.ts","./src/app/model/student.ts","./src/app/model/user.ts","./src/app/payment-details/payment-details.component.ts","./src/app/payment-details/payment-details.component.html","./src/app/payment/payment.component.html","./src/app/payment/payment.component.ts","./src/app/payment/payment.service.ts","./src/app/payout/payout.component.html","./src/app/payout/payout.component.ts","./src/app/preexam-obligation-details/preexam-obligation-details.component.ts","./src/app/preexam-obligation-details/preexam-obligation-details.component.html","./src/app/preexam-obligation/preexam-obligation.service.ts","./src/app/professor-courses/professor-courses.component.ts","./src/app/professor-courses/professor-courses.component.html","./src/app/professor-exams/professor-exams.component.html","./src/app/professor-exams/professor-exams.component.ts","./src/app/professor-profile/professor-profile.component.ts","./src/app/professor-profile/professor-profile.component.html","./src/app/professor-students/professor-students.component.html","./src/app/professor-students/professor-students.component.ts","./src/app/professor/professor.service.ts","./src/app/routing/app-routing.module.ts","./src/app/student-details/student-details.component.ts","./src/app/student-details/student-details.component.html","./src/app/student-documents/student-documents.component.html","./src/app/student-documents/student-documents.component.ts","./src/app/student-enrollment/student-enrollment.component.html","./src/app/student-enrollment/student-enrollment.component.ts","./src/app/student-exams/student-exams.component.html","./src/app/student-exams/student-exams.component.ts","./src/app/student-profile/student-profile.component.ts","./src/app/student-profile/student-profile.component.html","./src/app/studentpreexamobligations/studentpreexamobligations.component.html","./src/app/studentpreexamobligations/studentpreexamobligations.component.ts","./src/app/students/student.service.ts","./src/app/students/students.component.ts","./src/app/users/users.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;;;;;ACXyC;AAI4C;;;;;;ICS3E,sEAAqC;IAAA,6FAAkC;IAAA,4DAAM;;;IAC7E,sEAAsC;IACpC,gGACF;IAAA,4DAAM;;;IACN,sEAAsC;IACpC,gGACF;IAAA,4DAAM;;;IAPR,0EAAkE;IAChE,yHAA6E;IAC7E,yHAEM;IACN,yHAEM;IACR,4DAAM;;;IAPE,0DAA6B;IAA7B,gGAA6B;IAC7B,0DAA8B;IAA9B,iGAA8B;IAG9B,0DAA8B;IAA9B,iGAA8B;;;IAiBpC,sEAA0C;IAAA,kFAAuB;IAAA,4DAAM;;;IADzE,0EAAuE;IACrE,0HAAuE;IACzE,4DAAM;;;IADE,0DAAkC;IAAlC,qGAAkC;;;IAexC,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IADvE,0EAAsE;IACpE,0HAAqE;IACvE,4DAAM;;;IADE,0DAAiC;IAAjC,oGAAiC;;;IAevC,sEAAuC;IAAA,+EAAoB;IAAA,4DAAM;;;IADnE,0EAAoE;IAClE,0HAAiE;IACnE,4DAAM;;;IADE,0DAA+B;IAA/B,kGAA+B;;;IAerC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD5D,0EAAiE;IAC/D,0HAA0D;IAC5D,4DAAM;;;IADE,0DAA4B;IAA5B,+FAA4B;;;;IAItC,sEAAuB;IACrB,qEAAI;IAAC,qGAAyC;IAAA,4DAAK;IACnD,6EAAsD;IAAtB,+TAAqB;IAAE,kFAAsB;IAAA,4DAAS;IAC1F,4DAAM;;;AD3EH,MAAM,uBAAuB;IAalC,YAAoB,aAA6B,EAAU,WAAwB;QAA/D,kBAAa,GAAb,aAAa,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAVnF,WAAM,GAAW,IAAI,iDAAM,CAAC;YAC1B,KAAK,EAAE,EAAE;YACT,UAAU,EAAE,EAAE;YACd,SAAS,EAAG,IAAI,IAAI,EAAE;YACtB,OAAO,EAAE,IAAI,IAAI,EAAE;YACnB,IAAI,EAAG,CAAC;SACT,CAAC,CAAC;QAGH,cAAS,GAAG,KAAK,CAAC;IACqE,CAAC;IAExF,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,KAAK,EAAE;gBACL,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,UAAU,EAAC,CAAC,EAAE,EAAC,+DAAmB,CAAC;YACnC,SAAS,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClC,IAAI,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,KAAwC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;IAExE,UAAU;QACR,MAAM,IAAI,GAAG;YACX,KAAK,EAAG,IAAI,CAAC,MAAM,CAAC,KAAK;YACzB,UAAU,EAAG,IAAI,CAAC,MAAM,CAAC,UAAU;YACnC,SAAS,EAAG,IAAI,CAAC,MAAM,CAAC,SAAS;YACjC,OAAO,EAAG,IAAI,CAAC,MAAM,CAAC,OAAO;YAC7B,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI;SACvB,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC;aAC9B,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG;YACZ,KAAK,EAAE,EAAE;YACT,UAAU,EAAC,EAAE;YACb,SAAS,EAAE,IAAI,IAAI,EAAE;YACrB,OAAO,EAAE,IAAI,IAAI,EAAE;YACnB,IAAI,EAAE,CAAC;SACR,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;8FA/EU,uBAAuB;qHAAvB,uBAAuB;QCZpC,yEAAyB;QACrB,0EAAiD;QAAxB,mJAAY,cAAU,IAAC;QAC9C,yEAAwB;QACvB,wEAAO;QAAA,gEAAK;QAAA,4DAAQ;QACnB,2EAQE;QAJA,iMAA0B;QAJ5B,4DAQE;QACF,mHAQM;QACR,4DAAM;QACL,yEAAwB;QACvB,wEAAO;QAAA,sEAAW;QAAA,4DAAQ;QAC1B,4EAQE;QAJA,uMAA+B;QAJjC,4DAQE;QACF,qHAEM;QACR,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,sEAAU;QAAA,4DAAQ;QACzB,4EAQE;QAJA,sMAA8B;QAJhC,4DAQE;QACF,qHAEM;QACR,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EAQE;QAJA,oMAA4B;QAJ9B,4DAQE;QACF,qHAEM;QACR,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,4EAQE;QAJA,iMAAyB;QAJ3B,4DAQE;QACF,qHAEM;QACR,4DAAM;QAEN,qHAGI;QAEJ,0EAAwB;QACvB,8EAAuD;QAA/C,gJAAS,gBAAY,IAAC;QAA0B,oEAAO;QAAA,4DAAS;QACvE,8EAIC;QAFC,gJAAS,aAAS,IAAC;QAGnB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;;QAnGE,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAA0B;QAA1B,qFAA0B;QAKtB,0DAAiC;QAAjC,qGAAiC;QAgBrC,0DAA+B;QAA/B,0FAA+B;QAK3B,0DAAsC;QAAtC,0GAAsC;QAU1C,0DAA8B;QAA9B,yFAA8B;QAK1B,0DAAqC;QAArC,yGAAqC;QAUzC,0DAA4B;QAA5B,uFAA4B;QAKxB,0DAAmC;QAAnC,uGAAmC;QAUvC,0DAAyB;QAAzB,oFAAyB;QAKrB,0DAAgC;QAAhC,oGAAgC;QAKlC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;AClFuB;AAEmC;;;;;;ICW3E,sEAAoC;IAAA,0FAA+B;IAAA,4DAAM;;;IACzE,sEAAqC;IACnC,+FACF;IAAA,4DAAM;;;IACN,sEAAqC;IACnC,+FACF;IAAA,4DAAM;;;IAPR,0EAAiE;IAC/D,6HAAyE;IACzE,6HAEM;IACN,6HAEM;IACR,4DAAM;;;IAPE,0DAA4B;IAA5B,+FAA4B;IAC5B,0DAA6B;IAA7B,gGAA6B;IAG7B,0DAA6B;IAA7B,gGAA6B;;;IAkBnC,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IADvE,0EAAsE;IACpE,8HAAqE;IACvE,4DAAM;;;IADE,0DAAiC;IAAjC,oGAAiC;;;IAgBvC,sEAAuC;IAAA,+EAAoB;IAAA,4DAAM;;;IADnE,0EAAoE;IAClE,8HAAiE;IACnE,4DAAM;;;IADE,0DAA+B;IAA/B,kGAA+B;;;IAgBrC,sEAA6C;IAAA,8EAAmB;IAAA,4DAAM;;;IADxE,0EAA0E;IACxE,8HAAsE;IACxE,4DAAM;;;IADE,0DAAqC;IAArC,wGAAqC;;;;IAI/C,sEAAuB;IACrB,qEAAI;IAAC,mGAAuC;IAAA,4DAAK;IACjD,4EAA0D;IAA1B,uUAAyB;IAAE,gFAAoB;IAAA,4DAAS;IAC5F,4DAAM;;;ADjEH,MAAM,2BAA2B;IAYtC,YAAoB,iBAAoC,EAC9C,WAAwB;QADd,sBAAiB,GAAjB,iBAAiB,CAAmB;QAC9C,gBAAW,GAAX,WAAW,CAAa;QAXlC,eAAU,GAAe,IAAI,0DAAU,CAAC;YACtC,IAAI,EAAE,EAAE;YACR,SAAS,EAAG,EAAE;YACd,OAAO,EAAE,EAAE;YACX,aAAa,EAAG,CAAC;SAClB,CAAC,CAAC;QAGH,cAAS,GAAG,KAAK,CAAC;IAGoB,CAAC;IAEvC,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,IAAI,EAAE;gBACJ,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,SAAS,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClC,aAAa,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,KAAwC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;IAExE,cAAc;QACZ,MAAM,IAAI,GAAG;YACX,IAAI,EAAG,IAAI,CAAC,UAAU,CAAC,IAAI;YAC3B,SAAS,EAAG,IAAI,CAAC,UAAU,CAAC,SAAS;YACrC,OAAO,EAAG,IAAI,CAAC,UAAU,CAAC,OAAO;YACjC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa;SAC7C,CAAC;QAEF,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC;aAClC,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG;YAChB,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,aAAa,EAAE,GAAG;SACnB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;sGA5EU,2BAA2B;yHAA3B,2BAA2B;QCVxC,yEAAyB;QACrB,0EAAiD;QAAxB,uJAAY,cAAU,IAAC;QAC9C,yEAAwB;QACtB,wEAAO;QAAA,+DAAI;QAAA,4DAAQ;QACnB,2EAQE;QAJA,wMAA6B;QAJ/B,4DAQE;QACF,uHAQM;QACR,4DAAM;QAEN,yEAAwB;QACtB,wEAAO;QAAA,qEAAU;QAAA,4DAAQ;QACzB,4EAQE;QAJA,8MAAkC;QAJpC,4DAQE;QACF,yHAEM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EAQE;QAJA,4MAAgC;QAJlC,4DAQE;QACF,yHAEM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,0EAAc;QAAA,4DAAQ;QAC7B,4EAQE;QAJA,kNAAsC;QAJxC,4DAQE;QACF,yHAEM;QACR,4DAAM;QAEN,yHAGI;QAEJ,0EAAwB;QACvB,6EAA2D;QAAnD,oJAAS,oBAAgB,IAAC;QAA0B,oEAAO;QAAA,4DAAS;QAC3E,8EAIC;QAFC,oJAAS,aAAS,IAAC;QAGnB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;;QAvFE,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAA6B;QAA7B,wFAA6B;QAKzB,0DAAgC;QAAhC,oGAAgC;QAiBpC,0DAAkC;QAAlC,6FAAkC;QAK9B,0DAAqC;QAArC,yGAAqC;QAWzC,0DAAgC;QAAhC,2FAAgC;QAK5B,0DAAmC;QAAnC,uGAAmC;QAWvC,0DAAsC;QAAtC,iGAAsC;QAKlC,0DAAyC;QAAzC,6GAAyC;QAK3C,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;ACvEU;AAEgD;;;;;;ICU3E,sEAAqC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD7D,0EAAkE;IAChE,uHAA2D;IAC7D,4DAAM;;;IADE,0DAA6B;IAA7B,gGAA6B;;;IAenC,sEAAsC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD9D,0EAAmE;IACjE,wHAA4D;IAC9D,4DAAM;;;IADE,0DAA8B;IAA9B,iGAA8B;;;IAepC,sEAAwC;IAAA,2EAAgB;IAAA,4DAAM;;;IADhE,0EAAqE;IACnE,wHAA8D;IAChE,4DAAM;;;IADE,0DAAgC;IAAhC,mGAAgC;;;IActC,sEAAsC;IAAA,6EAAkB;IAAA,4DAAM;;;IADhE,0EAAmE;IACjE,wHAA8D;IAChE,4DAAM;;;IADE,0DAA8B;IAA9B,iGAA8B;;;;IAIxC,sEAAuB;IACrB,qEAAI;IAAC,4FAAiC;IAAA,4DAAK;IAC3C,4EAAoD;IAApB,yTAAmB;IAAE,yEAAc;IAAA,4DAAS;IAChF,4DAAM;;;ADpDH,MAAM,qBAAqB;IAiBhC,YAAoB,WAAwB,EAAU,WAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAf9E,SAAI,GAAS,IAAI,6CAAI,CAAC;YACpB,KAAK,EAAE,CAAC;YACR,MAAM,EAAC,CAAC;YACR,QAAQ,EAAG,IAAI,IAAI,EAAE;YACrB,MAAM,EAAG,IAAI;YAEb,UAAU,EAAC,IAAI;YACf,UAAU,EAAC,IAAI;SAIhB,CAAC,CAAC;QAEH,cAAS,GAAG,KAAK,CAAC;IAE+D,CAAC;IAElF,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEjC,KAAK,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;YAC/B,MAAM,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACnC,MAAM,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAAC,IAAI,CAAC,KAAwC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;IAE1E,QAAQ;QACN,MAAM,IAAI,GAAG;YACX,KAAK,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK;YACvB,MAAM,EAAG,IAAI,CAAC,IAAI,CAAC,MAAM;YACzB,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC7B,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;SACzB,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC;aAC5B,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG;YACV,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,IAAI,IAAI,EAAE;YACpB,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE,IAAI;YAChB,UAAU,EAAC,IAAI;SAChB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IAEtB,CAAC;;0FA3EY,qBAAqB;mHAArB,qBAAqB;QCblC,yEAAyB;QACrB,0EAAiD;QAAxB,iJAAY,cAAU,IAAC;QAC9C,yEAAwB;QACxB,wEAAO;QAAA,gEAAK;QAAA,4DAAQ;QAClB,2EAQE;QAJA,6LAAwB;QAJ1B,4DAQE;QACF,iHAEM;QACR,4DAAM;QACN,yEAAwB;QACxB,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QACnB,4EAQE;QAJA,+LAAyB;QAJ3B,4DAQE;QACF,mHAEM;QACR,4DAAM;QACL,0EAAwB;QACzB,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACtB,4EAQE;QAJA,iMAA2B;QAJ7B,4DAQE;QACF,mHAEM;QACR,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,4EAOC;QAJC,+LAAyB;QAH3B,4DAOC;QACD,mHAEM;QACR,4DAAM;QAEN,mHAGI;QAEJ,0EAAwB;QACvB,6EAAqD;QAA7C,8IAAS,cAAU,IAAC;QAA0B,oEAAO;QAAA,4DAAS;QACrE,8EAIC;QAFC,8IAAS,aAAS,IAAC;QAGnB,mEACJ;QAAA,4DAAS;QAEX,4DAAM;QACR,4DAAO;QACT,4DAAM;;QA9EI,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAAwB;QAAxB,mFAAwB;QAKpB,0DAAiC;QAAjC,qGAAiC;QAUrC,0DAAyB;QAAzB,oFAAyB;QAKrB,0DAAkC;QAAlC,sGAAkC;QAUtC,0DAA2B;QAA3B,sFAA2B;QAKvB,0DAAoC;QAApC,wGAAoC;QASxC,0DAAyB;QAAzB,oFAAyB;QAKrB,0DAAkC;QAAlC,sGAAkC;QAKpC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;AC5D6B;AAE6B;;;;;;ICU3E,sEAA4C;IAAC,uFAA2B;IAAA,4DAAM;;;IAC9E,sEAA6C;IAC3C,uGACF;IAAA,4DAAM;;;IACN,sEAA6C;IAC3C,mGACF;IAAA,4DAAM;;;IAPR,0EAAyE;IACvE,gIAA8E;IAC9E,gIAEM;IACN,gIAEM;IACR,4DAAM;;;IAPE,0DAAoC;IAApC,uGAAoC;IACpC,0DAAqC;IAArC,wGAAqC;IAGrC,0DAAqC;IAArC,wGAAqC;;;IAkB3C,sEAA4C;IAAA,oFAAyB;IAAA,4DAAM;;;IAC3E,sEAA6C;IAC3C,uGACF;IAAA,4DAAM;;;IACN,sEAA6C;IAC3C,mGACF;IAAA,4DAAM;;;IAPR,0EAAyE;IACvE,iIAA2E;IAC3E,iIAEM;IACN,iIAEM;IACR,4DAAM;;;IAPE,0DAAoC;IAApC,uGAAoC;IACpC,0DAAqC;IAArC,wGAAqC;IAGrC,0DAAqC;IAArC,wGAAqC;;;IAkB3C,sEAA2C;IAAA,mFAAwB;IAAA,4DAAM;;;IACzE,sEAA4C;IAC1C,uGACF;IAAA,4DAAM;;;IACN,sEAA4C;IAC1C,mGACF;IAAA,4DAAM;;;IAPR,0EAAwE;IACtE,iIAAyE;IACzE,iIAEM;IACN,iIAEM;IACR,4DAAM;;;IAPE,0DAAmC;IAAnC,sGAAmC;IACnC,0DAAoC;IAApC,uGAAoC;IAGpC,0DAAoC;IAApC,uGAAoC;;;IAkB1C,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IACrE,sEAA0C;IACxC,uGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,mGACF;IAAA,4DAAM;;;IAPR,0EAAsE;IACpE,iIAAqE;IACrE,iIAEM;IACN,iIAEM;IACR,4DAAM;;;IAPE,0DAAiC;IAAjC,oGAAiC;IACjC,0DAAkC;IAAlC,qGAAkC;IAGlC,0DAAkC;IAAlC,qGAAkC;;;;IAM5C,sEAAuB;IACrB,qEAAI;IAAC,8GAAkD;IAAA,4DAAK;IAC5D,4EAA6D;IAA7B,6UAA4B;IAAE,mFAAuB;IAAA,4DAAS;IAClG,4DAAM;;;ADlFH,MAAM,8BAA8B;IAYzC,YAAoB,oBAA2C,EAAU,WAAwB;QAA7E,yBAAoB,GAApB,oBAAoB,CAAuB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAVjG,kBAAa,GAAkB,IAAI,gEAAa,CAAC;YAC/C,YAAY,EAAE,CAAC;YACf,YAAY,EAAG,CAAC;YAChB,WAAW,EAAG,CAAC;YACf,SAAS,EAAG,CAAC;SACd,CAAC,CAAC;QAGH,cAAS,GAAG,KAAK,CAAC;IAEmF,CAAC;IAEtG,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,YAAY,EAAE;gBACZ,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,EAAE;gBACH;oBACC,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACvB;aACD;YACD,WAAW,EAAE;gBACX,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACxB;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACpB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,iBAAiB;QACf,MAAM,IAAI,GAAG;YACX,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY;YAC7C,YAAY,EAAG,IAAI,CAAC,aAAa,CAAC,YAAY;YAC9C,WAAW,EAAG,IAAI,CAAC,aAAa,CAAC,WAAW;YAC5C,SAAS,EAAG,IAAI,CAAC,aAAa,CAAC,SAAS;SACzC,CAAC;QAEF,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC;aACrC,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG;YACnB,YAAY,EAAE,CAAC;YACf,YAAY,EAAG,CAAC;YAChB,WAAW,EAAG,CAAC;YACf,SAAS,EAAG,CAAC;SACd,CAAC;IACJ,CAAC;;4GAlGU,8BAA8B;4HAA9B,8BAA8B;QCX3C,yEAAyB;QACrB,0EAAiD;QAAxB,0JAAY,cAAU,IAAC;QAC9C,yEAAwB;QACtB,wEAAO;QAAA,wEAAa;QAAA,4DAAQ;QAC5B,2EAQE;QAJA,sNAAwC;QAJ1C,4DAQE;QACF,0HAQM;QACR,4DAAM;QAEN,yEAAwB;QACtB,wEAAO;QAAA,wEAAa;QAAA,4DAAQ;QAC5B,4EAQE;QAJA,uNAAwC;QAJ1C,4DAQE;QACF,4HAQM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,wEAAY;QAAA,4DAAQ;QAC3B,4EAQE;QAJA,sNAAuC;QAJzC,4DAQE;QACF,4HAQM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,sEAAU;QAAA,4DAAQ;QACzB,4EAQE;QAJA,oNAAqC;QAJvC,4DAQE;QACF,4HAQM;QACR,4DAAM;QAEN,4HAGI;QAEJ,0EAAwB;QACvB,6EAA8D;QAAtD,uJAAS,uBAAmB,IAAC;QAA0B,oEAAO;QAAA,4DAAS;QAC9E,8EAIC;QAFC,uJAAS,aAAS,IAAC;QAGnB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;;QAzGE,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAAwC;QAAxC,mGAAwC;QAKpC,0DAAwC;QAAxC,4GAAwC;QAiB5C,0DAAwC;QAAxC,mGAAwC;QAKpC,0DAAwC;QAAxC,4GAAwC;QAiB5C,0DAAuC;QAAvC,kGAAuC;QAKnC,0DAAuC;QAAvC,2GAAuC;QAiB3C,0DAAqC;QAArC,gGAAqC;QAKjC,0DAAqC;QAArC,yGAAqC;QAWvC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;ACzF0D;AAC1C;;;;;;ICcjC,sEAA6C;IAAC,4FAAgC;IAAA,4DAAM;;;IADtF,0EAA0E;IACxE,0HAAoF;IACtF,4DAAM;;;IADE,0DAAqC;IAArC,wGAAqC;;;IAgB3C,sEAAkD;IAAA,0FAA+B;IAAA,4DAAM;;;IADzF,0EAA+E;IAC7E,2HAAuF;IACzF,4DAAM;;;IADE,0DAA0C;IAA1C,6GAA0C;;;IAgBhD,sEAA6C;IAAA,8EAAmB;IAAA,4DAAM;;;IADxE,0EAA0E;IACxE,2HAAsE;IACxE,4DAAM;;;IADE,0DAAqC;IAArC,wGAAqC;;;IAI/C,sEAAuB;IACrB,qEAAI;IAAC,gFAAoB;IAAA,4DAAK;IAClC,4DAAM;;;AD3CH,MAAM,wBAAwB;IAWnC,YAAoB,cAA8B,EAAU,WAAwB;QAAhE,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QATpF,YAAO,GAAY,IAAI,mDAAO,CAAC;YAC7B,aAAa,EAAE,IAAI;YACnB,kBAAkB,EAAG,EAAE;YACvB,aAAa,EAAE,CAAC;SACf,CAAC,CAAC;QAGL,cAAS,GAAG,KAAK,CAAC;IAEsE,CAAC;IAEzF,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,aAAa,EAAE;gBACb,EAAE;gBACF;oBACE,+DAAmB;iBACpB;aACF;YACD,kBAAkB,EAAE;gBAClB,EAAE;gBACH;oBACC,+DAAmB;iBACnB;aACD;YACD,aAAa,EAAE;gBACb,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACxB;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACpB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,WAAW;QACT,MAAM,IAAI,GAAG;YACX,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;YACzC,kBAAkB,EAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB;YACpD,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;SAC1C,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC;aAC/B,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG;YACb,aAAa,EAAE,IAAI;YACnB,kBAAkB,EAAG,EAAE;YACvB,aAAa,EAAE,CAAC;SACjB,CAAC;IACJ,CAAC;;gGAnFU,wBAAwB;sHAAxB,wBAAwB;QCVrC,yEAAyB;QACrB,0EAAiD;QAAxB,oJAAY,cAAU,IAAC;QAE9C,yEAAwB;QACtB,wEAAO;QAAA,0EAAe;QAAA,4DAAQ;QAC9B,2EAQE;QAJA,2MAAmC;QAJrC,4DAQE;QACF,oHAEM;QACR,4DAAM;QAEN,yEAAwB;QACtB,wEAAO;QAAA,8EAAmB;QAAA,4DAAQ;QAClC,4EAQE;QAJA,iNAAwC;QAJ1C,4DAQE;QACF,sHAEM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,0EAAc;QAAA,4DAAQ;QAC7B,4EAQE;QAJA,4MAAmC;QAJrC,4DAQE;QACF,sHAEM;QACR,4DAAM;QAEN,sHAEI;QAEJ,0EAAwB;QACvB,6EAAwD;QAAhD,iJAAS,iBAAa,IAAC;QAA0B,oEAAO;QAAA,4DAAS;QACxE,6EAIC;QAFC,iJAAS,aAAS,IAAC;QAGnB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;;QAjEE,0DAAkB;QAAlB,+EAAkB;QAQlB,0DAAmC;QAAnC,8FAAmC;QAK/B,0DAAyC;QAAzC,6GAAyC;QAW7C,0DAAwC;QAAxC,mGAAwC;QAKpC,0DAA8C;QAA9C,kHAA8C;QAWlD,0DAAmC;QAAnC,8FAAmC;QAK/B,0DAAyC;QAAzC,6GAAyC;QAK3C,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;ACnD0D;AAErB;;;;;;ICYtD,sEAAgD;IAAA,yFAA8B;IAAA,4DAAM;;;IADtF,0EAA6E;IAC3E,oIAAoF;IACtF,4DAAM;;;IADE,0DAAwC;IAAxC,2GAAwC;;;IAgB9C,sEAAwC;IAAA,iFAAsB;IAAA,4DAAM;;;IADtE,0EAAqE;IACnE,qIAAoE;IACtE,4DAAM;;;IADE,0DAAgC;IAAhC,mGAAgC;;;;IAI1C,sEAAuB;IACrB,qEAAI;IAAC,0GAA8C;IAAA,4DAAK;IACxD,4EAAiE;IAAjC,kVAAgC;IAAE,uFAA2B;IAAA,4DAAS;IACxG,4DAAM;;;AD3BL,MAAM,kCAAkC;IAU7C,YAAoB,wBAAkD,EAAU,WAAwB;QAApF,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,gBAAW,GAAX,WAAW,CAAa;QARxG,sBAAiB,GAAsB,IAAI,wEAAiB,CAAC;YAC3D,gBAAgB,EAAE,IAAI;YACtB,QAAQ,EAAG,EAAE;YACb,MAAM,EAAE,CAAC;SACV,CAAC,CAAC;QACH,cAAS,GAAG,KAAK,CAAC;IAG0F,CAAC;IAE7G,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,gBAAgB,EAAE;gBAChB,EAAE;gBACF;oBACE,+DAAmB;iBACpB;aACF;YACD,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,KAAwC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;IAExE,qBAAqB;QACnB,MAAM,IAAI,GAAG;YACX,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,gBAAgB;YACzD,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ;SAC1C,CAAC;QAEF,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC;aACvC,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,iBAAiB,GAAG;YACxB,gBAAgB,EAAE,EAAE;YACpB,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI;YACV,uBAAuB,EAAE,IAAI;YAC7B,qBAAqB,EAAE,IAAI;SAC3B,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;oHArEU,kCAAkC;gIAAlC,kCAAkC;QCX/C,yEAAyB;QACrB,0EAAiD;QAAxB,8JAAY,cAAU,IAAC;QAC9C,yEAAwB;QACtB,2EAAkB;QAAA,6EAAkB;QAAA,4DAAQ;QAC5C,2EASE;QAJA,kOAAgD;QALlD,4DASE;QACF,8HAEM;QACR,4DAAM;QAEN,yEAAwB;QACtB,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,4EAQE;QAJA,2NAAwC;QAJ1C,4DAQE;QACF,gIAEM;QACR,4DAAM;QAEN,gIAGM;QAEN,0EAAwB;QACvB,6EAAkE;QAA1D,2JAAS,2BAAuB,IAAC;QAA0B,oEAAO;QAAA,4DAAS;QAClF,8EAIC;QAFC,2JAAS,aAAS,IAAC;QAGnB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACV,4DAAO;QACT,4DAAM;;QAlDI,0DAAkB;QAAlB,+EAAkB;QAQlB,0DAAgD;QAAhD,2GAAgD;QAK5C,0DAA4C;QAA5C,gHAA4C;QAWhD,0DAAwC;QAAxC,mGAAwC;QAKpC,0DAAoC;QAApC,wGAAoC;QAKtC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;AClC0D;AACtC;;;;;;ICYrC,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IACrE,sEAA0C;IAElC,gGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,gGACF;IAAA,4DAAM;;;IARd,0EAAsE;IACpE,4HAAqE;IACrE,4HAGY;IACN,4HAEM;IACV,4DAAM;;;IARF,0DAAiC;IAAjC,oGAAiC;IACjC,0DAAkC;IAAlC,qGAAkC;IAI5B,0DAAkC;IAAlC,qGAAkC;;;IAiBxC,sEAAwC;IAAA,qEAAU;IAAA,4DAAM;;;IACxD,sEAAyC;IACvC,oGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,oGACF;IAAA,4DAAM;;;IAPV,0EAAqE;IACjE,6HAAwD;IACxD,6HAEM;IACN,6HAEM;IACV,4DAAM;;;IAPI,0DAAgC;IAAhC,mGAAgC;IAChC,0DAAiC;IAAjC,oGAAiC;IAGjC,0DAAkC;IAAlC,qGAAkC;;;;IAKxD,sEAAuB;IACX,qEAAI;IAAC,iGAAqC;IAAA,4DAAK;IAC/C,4EAAyD;IAAzB,mUAAwB;IAAE,8EAAkB;IAAA,4DAAS;IACzF,4DAAM;;;ADvCP,MAAM,0BAA0B;IAarC,YAAoB,QAA0B,EAAU,WAAwB;QAA5D,aAAQ,GAAR,QAAQ,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAXhF,cAAS,GAAe,IAAI,uDAAS,CAAC;YACpC,IAAI,EAAE,IAAI;YAEV,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;SAEb,CAAC,CAAC;QAGH,cAAS,GAAG,KAAK,CAAC;IAEkE,CAAC;IAErF,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,SAAS,EAAE;gBACT,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,QAAQ,EAAE;gBACR,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;SAAG,CAAC,CAAC;IAER,CAAC;IAAA,IAAI,CAAC,KAAwC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;IAEzE,aAAa;QACX,MAAM,IAAI,GAAG;YAEZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS;YACnC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;SAEjC,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;aACzB,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG;YACf,IAAI,EAAE,IAAI;YAEV,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;SACb,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;oGA/EQ,0BAA0B;wHAA1B,0BAA0B;QCTvC,yEAAyB;QACrB,0EAAiD;QAAxB,sJAAY,cAAU,IAAC;QAChD,yEAAwB;QACpB,wEAAO;QAAA,qEAAU;QAAA,4DAAQ;QACzB,2EAQE;QAJA,2MAAiC;QAJnC,4DAQE;QACF,sHASU;QAGV,yEAAwB;QACpB,2EAAsB;QAAC,sEAAU;QAAA,4DAAQ;QACzC,4EAOE;QAJF,2MAAkC;QAHlC,4DAOE;QACF,wHAQM;QACV,4DAAM;QACd,wHAGc;QAEJ,0EAAwB;QACvB,6EAA0D;QAAlD,mJAAS,mBAAe,IAAC;QAA0B,oEAAO;QAAA,4DAAS;QAC1E,6EAIC;QAFC,mJAAS,aAAS,IAAC;QAGnB,mEACF;QAAA,4DAAS;QACX,4DAAM;QAEhB,4DAAM;QACN,4DAAO;QA9DP,4DAAyB;;QACf,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAAiC;QAAjC,4FAAiC;QAK7B,0DAAqC;QAArC,yGAAqC;QAiBvC,0DAAkC;QAAlC,2FAAkC;QAK5B,0DAAoC;QAApC,wGAAoC;QAUhD,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;;AC3CgE;AAI1C;;;;;;;ICS3B,sEAA0C;IAAA,sEAAW;IAAA,4DAAM;;;IAC3D,sEAAqC;IACnC,uGACF;IAAA,4DAAM;;;IACN,sEAAqC;IACnC,uGACF;IAAA,4DAAM;;;IAPV,0EAAuE;IACnE,2HAA2D;IAC3D,2HAEM;IACN,2HAEM;IACV,4DAAM;;;IAPI,0DAAkC;IAAlC,qGAAkC;IAClC,0DAA6B;IAA7B,gGAA6B;IAG7B,0DAA6B;IAA7B,gGAA6B;;;IAiBnC,sEAAyC;IAAA,qEAAU;IAAA,4DAAM;;;IACzD,sEAA0C;IACxC,gGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,gGACF;IAAA,4DAAM;;;IAPV,0EAAsE;IAClE,4HAAyD;IACzD,4HAEM;IACN,4HAEM;IACV,4DAAM;;;IAPI,0DAAiC;IAAjC,oGAAiC;IACjC,0DAAkC;IAAlC,qGAAkC;IAGlC,0DAAkC;IAAlC,qGAAkC;;;IAiBxC,sEAAwC;IAAA,qEAAU;IAAA,4DAAM;;;IACxD,sEAAyC;IACvC,oGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,oGACF;IAAA,4DAAM;;;IAPV,0EAAqE;IACjE,4HAAwD;IACxD,4HAEM;IACN,4HAEM;IACV,4DAAM;;;IAPI,0DAAgC;IAAhC,mGAAgC;IAChC,0DAAiC;IAAjC,oGAAiC;IAGjC,0DAAkC;IAAlC,qGAAkC;;;IAiBxC,sEAAoC;IAAC,iEAAK;IAAA,4DAAM;;;IAChD,sEAAqC;IACnC,+FACF;IAAA,4DAAM;;;IACN,sEAAqC;IACpC,+FACD;IAAA,4DAAM;;;IAPV,0EAAiE;IAC7D,4HAAgD;IAChD,4HAEM;IACN,4HAEM;IACV,4DAAM;;;IAPI,0DAA4B;IAA5B,+FAA4B;IAC5B,0DAA6B;IAA7B,gGAA6B;IAG7B,0DAA6B;IAA7B,gGAA6B;;;IAiBrC,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC5D,sEAAkC;IAAA,+EAAoB;IAAA,4DAAM;;;IAF9D,0EAAkE;IAChE,4HAA4D;IAC5D,4HAA4D;IAC9D,4DAAM;;;IAFE,0DAA6B;IAA7B,gGAA6B;IAC7B,0DAA0B;IAA1B,6FAA0B;;;IAe9B,sEAA2C;IAAA,mFAAwB;IAAA,4DAAM;;;IAD7E,0EAAwE;IACpE,4HAAyE;IAC7E,4DAAM;;;IADI,0DAAmC;IAAnC,sGAAmC;;;IAerC,sEAAgD;IAAC,yGAA6C;IAAA,4DAAM;;;IADxG,0EAA6E;IACzE,4HAAoG;IACxG,4DAAM;;;IADI,0DAAwC;IAAxC,2GAAwC;;;IAe9C,sEAA2C;IAAC,sFAA0B;IAAA,4DAAM;;;IADhF,0EAAwE;IACpE,4HAA4E;IAChF,4DAAM;;;IADI,0DAAmC;IAAnC,sGAAmC;;;IAezC,sEAA+C;IAAC,0FAA8B;IAAA,4DAAM;;;IADxF,0EAA4E;IACxE,4HAAoF;IACxF,4DAAM;;;IADI,0DAAuC;IAAvC,0GAAuC;;;IAe7C,sEAA6C;IAAC,wFAA4B;IAAA,4DAAM;;;IADpF,0EAA0E;IACtE,4HAAgF;IACpF,4DAAM;;;IADI,0DAAqC;IAArC,wGAAqC;;;IAejD,sEAA0C;IAAC,qFAAyB;IAAA,4DAAM;;;IAD9E,0EAAuE;IACnE,4HAA0E;IAC9E,4DAAM;;;IADI,0DAAkC;IAAlC,sGAAkC;;;;IA8B9C,sEAAuB;IACnB,qEAAI;IAAC,+FAAmC;IAAA,4DAAK;IAC7C,6EAAuD;IAAvB,iUAAsB;IAAE,4EAAgB;IAAA,4DAAS;IACrF,4DAAM;;;ADhNP,MAAM,wBAAwB;IA8BnC,YAAoB,cAA8B,EACvC,WAAwB,EACxB,WAAsB,EACtB,QAAmB;QAHV,mBAAc,GAAd,cAAc,CAAgB;QACvC,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAW;QACtB,aAAQ,GAAR,QAAQ,CAAW;QA/B9B,YAAO,GAAa,IAAI,mDAAO,CAAC;YAC9B,IAAI,EAAE,IAAI;YACV,UAAU,EAAG,EAAE;YACf,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,eAAe,EAAE,EAAE;YACnB,aAAa,EAAG,EAAE;YAClB,UAAU,EAAG,MAAM;YACnB,eAAe,EAAG,IAAI;YACtB,cAAc,EAAE,IAAI;SAErB,CAAC,CAAC;QAUH,cAAS,GAAG,KAAK,CAAC;IAMf,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,SAAS,EAAE;gBACT,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,QAAQ,EAAE;gBACR,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,UAAU,EAAE;gBACV,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,WAAW,EAAE;gBACX,EAAE;gBACF;oBACE,+DAAmB;iBACpB;aACF;YACD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;YACpD,IAAI,EAAE;gBACJ,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,gBAAgB,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;YAC1C,WAAW,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;YACrC,eAAe,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC1C,aAAa,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACxC,UAAU,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;SACrC,CAAC,CAAC;QAEH;;;;;;cAMM;IACR,CAAC;IAED,IAAI,CAAC,KAAwC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;IAExE,WAAW;QACT,MAAM,IAAI,GAAG;YACZ,UAAU,EAAG,IAAI,CAAC,OAAO,CAAC,UAAU;YACpC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;YACjC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;YAC/B,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;YACrC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;YACzB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;YACvB,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;YAC/C,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;YACrC,eAAe,EAAG,IAAI,CAAC,OAAO,CAAC,eAAe;YAC9C,aAAa,EAAG,IAAI,CAAC,OAAO,CAAC,aAAa;YAC1C,UAAU,EAAG,IAAI,CAAC,OAAO,CAAC,UAAU;YACpC,eAAe,EAAG,IAAI,CAAC,OAAO,CAAC,eAAe;YAC9C,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;SAC3C,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC;aAC/B,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;;;;;KAQC;IAEF,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEA,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG;YACb,IAAI,EAAE,IAAI;YACV,UAAU,EAAG,EAAE;YACf,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,eAAe,EAAE,EAAE;YACnB,aAAa,EAAG,EAAE;YAClB,UAAU,EAAG,MAAM;YACnB,eAAe,EAAG,IAAI;YACtB,cAAc,EAAE,IAAI;SACrB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;gGA3KU,wBAAwB;sHAAxB,wBAAwB;QCdrC,yEAAyB;QACrB,0EAAiD;QAAxB,oJAAY,cAAU,IAAC;QAE5C,yEAAwB;QACpB,2EAAwB;QAAC,wEAAY;QAAA,4DAAQ;QAC7C,2EAOE;QAJF,wMAAgC;QAHhC,4DAOE;QACF,oHAQM;QACV,4DAAM;QAEN,yEAAwB;QACpB,2EAAuB;QAAC,uEAAW;QAAA,4DAAQ;QAC3C,4EAOE;QAJF,wMAAiC;QAHjC,4DAOE;QACF,sHAQM;QACV,4DAAM;QAEN,0EAAwB;QACpB,4EAAsB;QAAC,uEAAU;QAAA,4DAAQ;QACzC,4EAOE;QAJF,uMAAgC;QAHhC,4DAOE;QACF,sHAQM;QACV,4DAAM;QAEN,0EAAwB;QACpB,6EAAkB;QAAC,kEAAK;QAAA,4DAAQ;QAChC,6EAOE;QAJF,mMAA4B;QAH5B,4DAOE;QACF,sHAQM;QACV,4DAAM;QAEN,0EAAwB;QACpB,6EAAmB;QAAC,mEAAM;QAAA,4DAAQ;QAClC,6EAOC;QAJD,oMAA6B;QAH7B,4DAOC;QACD,sHAGM;QACT,4DAAM;QAEP,0EAAwB;QACpB,6EAAyB;QAAC,0EAAa;QAAA,4DAAQ;QAC/C,6EAOE;QAJF,0MAAmC;QAHnC,4DAOE;QACF,sHAEM;QACV,4DAAM;QAEF,0EAAwB;QACpB,6EAA8B;QAAC,gFAAmB;QAAA,4DAAQ;QAC1D,6EAOE;QAJF,+MAAwC;QAHxC,4DAOE;QACF,sHAEM;QACV,4DAAM;QAEV,0EAAwB;QAChB,6EAAyB;QAAC,0EAAa;QAAA,4DAAQ;QAC/C,6EAOE;QAJF,0MAAmC;QAHnC,4DAOE;QACF,sHAEM;QACd,4DAAM;QAEN,0EAAwB;QAChB,6EAA6B;QAAC,8EAAiB;QAAA,4DAAQ;QACvD,6EAOE;QAJF,8MAAuC;QAHvC,4DAOE;QACF,sHAEM;QACd,4DAAM;QAEN,0EAAwB;QAChB,6EAA2B;QAAC,4EAAe;QAAA,4DAAQ;QACnD,6EAOE;QAJF,4MAAqC;QAHrC,4DAOE;QACF,sHAEM;QACd,4DAAM;QAEN,0EAAwB;QACtB,6EAAwB;QAAC,yEAAY;QAAA,4DAAQ;QAC7C,6EAOE;QAJF,yMAAkC;QAHlC,4DAOE;QACF,sHAEM;QACP,4DAAM;QA4BP,uHAGM;QAEJ,0EAAwB;QACvB,8EAAwD;QAAhD,iJAAS,iBAAa,IAAC;QAA0B,oEAAE;QAAA,4DAAS;QACnE,8EAIC;QAFC,iJAAS,aAAS,IAAC;QAGnB,mEACF;QAAA,4DAAS;QACX,4DAAM;QAWZ,4DAAO;QACX,4DAAM;;QApPI,0DAAkB;QAAlB,+EAAkB;QAOhB,0DAAgC;QAAhC,2FAAgC;QAK1B,0DAAsC;QAAtC,0GAAsC;QAgB5C,0DAAiC;QAAjC,0FAAiC;QAK3B,0DAAqC;QAArC,yGAAqC;QAgB3C,0DAAgC;QAAhC,yFAAgC;QAK1B,0DAAoC;QAApC,wGAAoC;QAgB1C,0DAA4B;QAA5B,qFAA4B;QAKtB,0DAAgC;QAAhC,oGAAgC;QAgBtC,0DAA6B;QAA7B,sFAA6B;QAKvB,0DAAiC;QAAjC,qGAAiC;QAWvC,0DAAmC;QAAnC,4FAAmC;QAK7B,0DAAuC;QAAvC,2GAAuC;QAUzC,0DAAwC;QAAxC,iGAAwC;QAKlC,0DAA4C;QAA5C,gHAA4C;QAUlD,0DAAmC;QAAnC,4FAAmC;QAK7B,0DAAuC;QAAvC,2GAAuC;QAU7C,0DAAuC;QAAvC,gGAAuC;QAKjC,0DAA2C;QAA3C,+GAA2C;QAUjD,0DAAqC;QAArC,8FAAqC;QAK/B,0DAAyC;QAAzC,6GAAyC;QAUrD,0DAAkC;QAAlC,2FAAkC;QAK5B,0DAAsC;QAAtC,0GAAsC;QA+BxC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;AC1NwD;AAIhD;;;;;;ICS3B,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEAAyC;IACvC,wGACF;IAAA,4DAAM;;;IACN,sEAAyC;IACvC,mGACF;IAAA,4DAAM;;;IAPR,yEAAqE;IACnE,uHAAkE;IAClE,uHAEM;IACN,uHAEM;IACR,4DAAM;;;IAPE,0DAAgC;IAAhC,mGAAgC;IAChC,0DAAiC;IAAjC,oGAAiC;IAGjC,0DAAiC;IAAjC,oGAAiC;;;IAkBvC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADpE,yEAAqE;IACnE,wHAAkE;IACpE,4DAAM;;;IADE,0DAAgC;IAAhC,mGAAgC;;;;IAO1C,sEAAuB;IACrB,qEAAI;IAAC,4FAAgC;IAAA,4DAAK;IAC1C,4EAAoD;IAApB,wTAAmB;IAAE,yEAAa;IAAA,4DAAS;IAC/E,4DAAM;;;ADjCH,MAAM,qBAAqB;IAchC,YAAoB,WAAyB,EACnC,WAAwB;QADd,gBAAW,GAAX,WAAW,CAAc;QACnC,gBAAW,GAAX,WAAW,CAAa;QAblC,SAAI,GAAS,IAAI,6CAAI,CAAC;YACpB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;SAChB,CAAC,CAAC;QAEH,kBAAa,GAAW,EAAE,CAAC;QAC3B,0BAAqB,GAAiB,EAAE,CAAC;QAGzC,cAAS,GAAG,KAAK,CAAC;IAKf,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE;gBACR,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,KAAwC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;IAExE,QAAQ;QACN,MAAM,IAAI,GAAG;YACX,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC7B,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;SAC9B,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC;aAC5B,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG;YACV,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;SAChB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,eAAe,CAAC,IAAW;QACzB,IAAI,CAAC,GAAe,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAG,IAAI,CAAC;QACpE,IAAI,CAAC,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAG,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,eAAe;QACb,MAAM,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,IAAG,CAAC,KAAG,SAAS,EAAC;YACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,qBAAqB,GAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAG,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5F;aAAI;YACP,KAAK,CAAC,iCAAiC,CAAC;SACzC;IACH,CAAC;;0FA5FU,qBAAqB;mHAArB,qBAAqB;QCblC,yEAAyB;QACrB,0EAAiD;QAAxB,iJAAY,cAAU,IAAC;QAC9C,yEAAwB;QACtB,wEAAO;QAAA,mEAAQ;QAAA,4DAAQ;QACvB,2EAQE;QAJA,gMAA2B;QAJ7B,4DAQE;QACF,iHAQM;QACR,4DAAM;QAEN,yEAAwB;QACtB,wEAAO;QAAA,mEAAQ;QAAA,4DAAQ;QACvB,4EAQE;QAJA,iMAA2B;QAJ7B,4DAQE;QACF,mHAEM;QACR,4DAAM;QAKN,mHAGI;QAEJ,0EAAwB;QACvB,6EAAqD;QAA7C,8IAAS,cAAU,IAAC;QAA0B,oEAAO;QAAA,4DAAS;QACrE,6EAIC;QAFC,8IAAS,aAAS,IAAC;QAGnB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QAuBT,4DAAM;;QAhFE,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAA2B;QAA3B,sFAA2B;QAKvB,0DAAoC;QAApC,wGAAoC;QAiBxC,0DAA2B;QAA3B,sFAA2B;QAKvB,0DAAoC;QAApC,wGAAoC;QAQtC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;IC7BvB,qEAAmC;IAC/B,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,6EAA2F;IAA3B,8XAA0B;IAClF,sEAAmD;IACvD,4DAAS;IAEb,6EAAkG;IAAhC,mYAA+B;IACzF,sEAAoD;IACxD,4DAAS;IACjB,4DAAK;IACT,4DAAK;;;IA7BG,0DACJ;IADI,2FACJ;IAEI,0DACJ;IADI,+FACJ;IAEI,0DACJ;IADI,6FACJ;IAEI,0DACJ;IADI,gGACJ;IAEI,0DACJ;IADI,0FACJ;IAEI,0DACJ;IADI,iGACJ;IAEI,0DACJ;IADI,+FACJ;;ACzBD,MAAM,oBAAoB;IAK/B,YAAoB,aAA6B,EAAU,MAAc;QAArD,kBAAa,GAAb,aAAa,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACvE,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAC9C,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,QAAQ,CAAC,MAAe;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC;IACD,YAAY,CAAC,QAAiB;QAC5B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CACjD,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;;wFA1BU,oBAAoB;kHAApB,oBAAoB;QDVjC,sEAAK;QACD,qEAAI;QAAC,mEAAO;QAAA,4DAAK;QACrB,4DAAM;QAEN,2EAAoC;QAChC,qEAAI;QACA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACnB,qEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QACtB,4DAAK;QACL,iHA+BK;QACT,4DAAQ;QACR,0EAAmB;QACf,6EAAiF;QACzE,sEAAmD;QACvD,4DAAS;QACjB,4DAAM;;QArCqB,2DAAU;QAAV,gFAAU;;;;;;;;;;;;;;;;;;;;;;AEZgD;;;;;;;ICUrE,sEAAqC;IAAA,gEAAK;IAAA,4DAAM;;;IAChD,sEAAsC;IACpC,gGACF;IAAA,4DAAM;;;IACN,sEAAsC;IACpC,gGACF;IAAA,4DAAM;;;IAPV,0EAAkE;IAC9D,8HAAgD;IAChD,8HAEM;IACN,8HAEM;IACV,4DAAM;;;IAPI,0DAA6B;IAA7B,gGAA6B;IAC7B,0DAA8B;IAA9B,iGAA8B;IAG9B,0DAA8B;IAA9B,iGAA8B;;;IAiB1C,sEAA0C;IAAA,kFAAuB;IAAA,4DAAM;;;IADzE,0EAAuE;IACrE,+HAAuE;IACzE,4DAAM;;;IADE,0DAAkC;IAAlC,qGAAkC;;;IAexC,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IADvE,0EAAsE;IACpE,+HAAqE;IACvE,4DAAM;;;IADE,0DAAiC;IAAjC,oGAAiC;;;IAevC,sEAAuC;IAAA,+EAAoB;IAAA,4DAAM;;;IADnE,0EAAoE;IAClE,+HAAiE;IACnE,4DAAM;;;IADE,0DAA+B;IAA/B,kGAA+B;;;IAerC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD5D,0EAAiE;IAC/D,+HAA0D;IAC5D,4DAAM;;;IADE,0DAA4B;IAA5B,+FAA4B;;;IAiB1C,sEAA4B;IACxB,gEAAK;IACL,oEAAG;IAAA,iFAAsB;IAAA,4DAAI;IACjC,4DAAM;;;ADxFD,MAAM,2BAA2B;IAOtC,YAAoB,cAA8B,EAAU,KAAsB,EAAU,MAAc,EAAU,WAAwB;QAAxH,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAL5I,kBAAa,GAAY,EAAY,CAAC;QACtC,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAC,KAAK,CAAC;IAEgI,CAAC;IAEjJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,KAAK,EAAE;gBACL,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,UAAU,EAAC,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpC,SAAS,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClC,IAAI,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,EAAO;QACf,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;aAC1B,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC;aACpE,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;aAChD,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACrC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;sGApFU,2BAA2B;yHAA3B,2BAA2B;QCXxC,yEAAuB;QACnB,0EAAiD;QAAxB,uJAAY,cAAU,IAAC;QAC5C,yEAAwB;QACxB,2EAAkB;QAAC,kEAAM;QAAA,4DAAQ;QAC7B,2EAOE;QAJF,4MAAmC;QAHnC,4DAOE;QACF,uHAQM;QACV,4DAAM;QACN,yEAAwB;QACxB,wEAAO;QAAA,sEAAW;QAAA,4DAAQ;QAC1B,4EAQE;QAJA,kNAAsC;QAJxC,4DAQE;QACF,yHAEM;QACN,4DAAM;QACN,0EAAwB;QACxB,yEAAO;QAAA,sEAAU;QAAA,4DAAQ;QACzB,4EAQE;QAJA,iNAAqC;QAJvC,4DAQE;QACF,yHAEM;QACR,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EAQE;QAJA,+MAAmC;QAJrC,4DAQE;QACF,yHAEM;QACR,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,4EAQE;QAJA,4MAAgC;QAJlC,4DAQE;QACF,yHAEM;QACR,4DAAM;QAEN,8EAGC;QADD,oJAAS,kBAAc,IAAC;QACtB,2EAAc;QAAA,4DAAS;QAEzB,8EAIC;QADD,oJAAS,kBAAc,IAAC;QACtB,kFAAqB;QAAA,4DAAS;QAChC,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAGvB,0HAGM;QACR,4DAAO;QACP,4DAAM;;QApGI,0DAAkB;QAAlB,+EAAkB;QAMhB,0DAAmC;QAAnC,4FAAmC;QAK7B,0DAAiC;QAAjC,qGAAiC;QAgBzC,0DAAsC;QAAtC,iGAAsC;QAKlC,0DAAsC;QAAtC,0GAAsC;QAU1C,0DAAqC;QAArC,gGAAqC;QAKjC,0DAAqC;QAArC,yGAAqC;QAUzC,0DAAmC;QAAnC,8FAAmC;QAK/B,0DAAmC;QAAnC,uGAAmC;QAUvC,0DAAgC;QAAhC,2FAAgC;QAK5B,0DAAgC;QAAhC,oGAAgC;QAepC,0DAAW;QAAX,sFAAW;QAGb,0DAAoB;QAApB,oFAAoB;;;;;;;;;;;;;;;;;;;ACzFrB,MAAM,6BAA6B;IAExC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0GALU,6BAA6B;2HAA7B,6BAA6B;QCP1C,oEAEM;;;;;;;;;;;;;;;;;;;;;;ACE+E;;;;;;;ICY3E,sEAAoC;IAAA,0FAA+B;IAAA,4DAAM;;;IACzE,sEAAqC;IACnC,+FACF;IAAA,4DAAM;;;IACN,sEAAqC;IACnC,+FACF;IAAA,4DAAM;;;IAPR,0EAAiE;IAC/D,kIAAyE;IACzE,kIAEM;IACN,kIAEM;IACR,4DAAM;;;IAPE,0DAA4B;IAA5B,+FAA4B;IAC5B,0DAA6B;IAA7B,gGAA6B;IAG7B,0DAA6B;IAA7B,gGAA6B;;;IAkBnC,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IADvE,0EAAsE;IACpE,mIAAqE;IACvE,4DAAM;;;IADE,0DAAiC;IAAjC,oGAAiC;;;IAgBvC,sEAAuC;IAAA,+EAAoB;IAAA,4DAAM;;;IADnE,0EAAoE;IAClE,mIAAiE;IACnE,4DAAM;;;IADE,0DAA+B;IAA/B,kGAA+B;;;IAgBrC,sEAA6C;IAAA,8EAAmB;IAAA,4DAAM;;;IADxE,0EAA0E;IACxE,mIAAsE;IACxE,4DAAM;;;IADE,0DAAqC;IAArC,wGAAqC;;;IAiBnD,sEAAgC;IAC5B,gEAAK;IACL,oEAAG;IAAA,sFAA2B;IAAA,4DAAI;IACtC,4DAAM;;;AD7ED,MAAM,+BAA+B;IAO1C,YAAoB,iBAAoC,EAC9C,KAAsB,EACtB,MAAc,EACd,WAAwB;QAHd,sBAAiB,GAAjB,iBAAiB,CAAmB;QAC9C,UAAK,GAAL,KAAK,CAAiB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QARlC,sBAAiB,GAAgB,EAAgB,CAAC;QAClD,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAC,KAAK,CAAC;IAKsB,CAAC;IAEvC,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,IAAI,EAAE;gBACJ,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,SAAS,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClC,aAAa,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,EAAO;QACnB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC;aAC7B,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC;aAC/E,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAI,uCAAuC,CAAC;QAC1D,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;aACvD,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAI,uCAAuC,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QACzC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;8GAvFU,+BAA+B;6HAA/B,+BAA+B;QCX5C,yEAAuB;QACnB,0EAAiD;QAAxB,2JAAY,cAAU,IAAC;QAC9C,yEAAwB;QACtB,wEAAO;QAAA,+DAAI;QAAA,4DAAQ;QACnB,2EAQE;QAJA,mNAAoC;QAJtC,4DAQE;QACF,2HAQM;QACR,4DAAM;QAEN,yEAAwB;QACtB,wEAAO;QAAA,qEAAU;QAAA,4DAAQ;QACzB,4EAQE;QAJA,yNAAyC;QAJ3C,4DAQE;QACF,6HAEM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EAQE;QAJA,uNAAuC;QAJzC,4DAQE;QACF,6HAEM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,0EAAc;QAAA,4DAAQ;QAC7B,4EAQE;QAJA,6NAA6C;QAJ/C,4DAQE;QACF,6HAEM;QACR,4DAAM;QAEN,6EAGC;QADD,wJAAS,sBAAkB,IAAC;QAC1B,gFAAmB;QAAA,4DAAS;QAE9B,6EAIC;QADD,wJAAS,sBAAkB,IAAC;QAC1B,uFAA0B;QAAA,4DAAS;QACrC,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAGvB,8HAGM;QACR,4DAAO;QACP,4DAAM;;QAzFI,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAAoC;QAApC,+FAAoC;QAKhC,0DAAgC;QAAhC,oGAAgC;QAiBpC,0DAAyC;QAAzC,oGAAyC;QAKrC,0DAAqC;QAArC,yGAAqC;QAWzC,0DAAuC;QAAvC,kGAAuC;QAKnC,0DAAmC;QAAnC,uGAAmC;QAWvC,0DAA6C;QAA7C,wGAA6C;QAKzC,0DAAyC;QAAzC,6GAAyC;QAe7C,0DAAW;QAAX,sFAAW;QAGb,0DAAwB;QAAxB,wFAAwB;;;;;;;;;;;;;;;;;;;;;;ACpFqD;;;;;;;ICUrE,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IADhE,0EAAkE;IAC9D,4HAA4D;IAEhE,4DAAM;;;IAFI,0DAA6B;IAA7B,gGAA6B;;;IAgBzC,sEAAsC;IAAA,8EAAmB;IAAA,4DAAM;;;IADjE,0EAAmE;IACjE,6HAA+D;IACjE,4DAAM;;;IADE,0DAA8B;IAA9B,iGAA8B;;;IAepC,sEAAwC;IAAA,gFAAqB;IAAA,4DAAM;;;IADrE,0EAAqE;IACnE,6HAAmE;IACrE,4DAAM;;;IADE,0DAAgC;IAAhC,mGAAgC;;;IAatC,sEAAsC;IAAA,6EAAkB;IAAA,4DAAM;;;IADhE,0EAAmE;IACjE,6HAA8D;IAChE,4DAAM;;;IADE,0DAA8B;IAA9B,iGAA8B;;;IAiB5C,sEAA0B;IACtB,gEAAK;IACL,oEAAG;IAAA,+EAAoB;IAAA,4DAAI;IAC/B,4DAAM;;;ADnED,MAAM,yBAAyB;IAEpC,YAAoB,WAAwB,EAAU,KAAsB,EAAU,MAAc,EAAU,WAAwB;QAAlH,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAEtI,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAC,KAAK,CAAC;IAJ0H,CAAC;IAK3I,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEjC,MAAM,EAAC,CAAC,CAAC,EAAE,+DAAmB,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACnC,KAAK,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,EAAO;QACb,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC;aACvB,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC;aAC7D,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,0DAA0D;QAC5D,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;aAC3C,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;kGA1EU,yBAAyB;uHAAzB,yBAAyB;QCVtC,yEAAuB;QACnB,0EAAiD;QAAxB,qJAAY,cAAU,IAAC;QAC5C,yEAAwB;QACxB,2EAAmB;QAAC,kEAAM;QAAA,4DAAQ;QAC9B,2EAOE;QAJF,wMAAiC;QAHjC,4DAOE;QACF,qHAGM;QACV,4DAAM;QACN,yEAAwB;QACxB,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QACrB,4EAQE;QAJA,0MAAgC;QAJlC,4DAQE;QACF,uHAEM;QACR,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,4EAQE;QAJA,4MAAkC;QAJpC,4DAQE;QACF,uHAEM;QACR,4DAAM;QAAA,0EAAwB;QAC5B,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,4EAOC;QAJC,0MAAgC;QAHlC,4DAOC;QACD,uHAEM;QACR,4DAAM;QAED,6EAGJ;QADD,kJAAS,gBAAY,IAAC;QACpB,yEAAY;QAAA,4DAAS;QAEvB,8EAIC;QADD,kJAAS,gBAAY,IAAC;QACpB,gFAAmB;QAAA,4DAAS;QAC9B,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAGvB,wHAGM;QACR,4DAAO;QACP,4DAAM;;QA9EI,0DAAkB;QAAlB,+EAAkB;QAMhB,0DAAiC;QAAjC,0FAAiC;QAK3B,0DAAiC;QAAjC,qGAAiC;QAWzC,0DAAgC;QAAhC,2FAAgC;QAK5B,0DAAkC;QAAlC,sGAAkC;QAUtC,0DAAkC;QAAlC,6FAAkC;QAK9B,0DAAoC;QAApC,wGAAoC;QAQxC,0DAAgC;QAAhC,2FAAgC;QAK5B,0DAAkC;QAAlC,sGAAkC;QAetC,0DAAW;QAAX,sFAAW;QAGb,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;;;;;ACvE2D;;;;;;;ICW3E,sEAA4C;IAAC,uFAA2B;IAAA,4DAAM;;;IAC9E,sEAA6C;IAC3C,uGACF;IAAA,4DAAM;;;IACN,sEAA6C;IAC3C,mGACF;IAAA,4DAAM;;;IAPR,0EAAyE;IACvE,qIAA8E;IAC9E,qIAEM;IACN,qIAEM;IACR,4DAAM;;;IAPE,0DAAoC;IAApC,uGAAoC;IACpC,0DAAqC;IAArC,wGAAqC;IAGrC,0DAAqC;IAArC,wGAAqC;;;IAkB3C,sEAA4C;IAAA,oFAAyB;IAAA,4DAAM;;;IAC3E,sEAA6C;IAC3C,uGACF;IAAA,4DAAM;;;IACN,sEAA6C;IAC3C,mGACF;IAAA,4DAAM;;;IAPR,0EAAyE;IACvE,sIAA2E;IAC3E,sIAEM;IACN,sIAEM;IACR,4DAAM;;;IAPE,0DAAoC;IAApC,uGAAoC;IACpC,0DAAqC;IAArC,wGAAqC;IAGrC,0DAAqC;IAArC,wGAAqC;;;IAkB3C,sEAA2C;IAAA,mFAAwB;IAAA,4DAAM;;;IACzE,sEAA4C;IAC1C,uGACF;IAAA,4DAAM;;;IACN,sEAA4C;IAC1C,mGACF;IAAA,4DAAM;;;IAPR,0EAAwE;IACtE,sIAAyE;IACzE,sIAEM;IACN,sIAEM;IACR,4DAAM;;;IAPE,0DAAmC;IAAnC,sGAAmC;IACnC,0DAAoC;IAApC,uGAAoC;IAGpC,0DAAoC;IAApC,uGAAoC;;;IAkB1C,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IACrE,sEAA0C;IACxC,uGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,mGACF;IAAA,4DAAM;;;IAPR,0EAAsE;IACpE,sIAAqE;IACrE,sIAEM;IACN,sIAEM;IACR,4DAAM;;;IAPE,0DAAiC;IAAjC,oGAAiC;IACjC,0DAAkC;IAAlC,qGAAkC;IAGlC,0DAAkC;IAAlC,qGAAkC;;;IAkB9C,sEAAmC;IACjC,gEAAK;IACL,oEAAG;IAAC,uFAA2B;IAAA,4DAAI;IACrC,4DAAM;;;AD/FH,MAAM,kCAAkC;IAO7C,YAAoB,oBAA0C,EAAU,KAAsB,EAAU,MAAc,EAAU,WAAwB;QAApI,yBAAoB,GAApB,oBAAoB,CAAsB;QAAU,UAAK,GAAL,KAAK,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAJxJ,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAC,KAAK,CAAC;IAE4I,CAAC;IAE7J,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,YAAY,EAAE;gBACZ,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,EAAE;gBACH;oBACC,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACvB;aACD;YACD,WAAW,EAAE;gBACX,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACxB;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC;aAChC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,IAAI,CAAC,oBAAoB,CAAC;aACxF,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC1C,6DAA6D;QAC/D,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC;aAC7D,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC5C,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;oHAzGU,kCAAkC;gIAAlC,kCAAkC;QCV/C,yEAAyB;QACrB,0EAAiD;QAAxB,8JAAY,cAAU,IAAC;QAC9C,yEAAwB;QACtB,wEAAO;QAAA,wEAAa;QAAA,4DAAQ;QAC5B,2EAQE;QAJA,iOAA+C;QAJjD,4DAQE;QACF,8HAQM;QACR,4DAAM;QAEN,yEAAwB;QACtB,wEAAO;QAAA,wEAAa;QAAA,4DAAQ;QAC5B,4EAQE;QAJA,kOAA+C;QAJjD,4DAQE;QACF,gIAQM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,wEAAY;QAAA,4DAAQ;QAC3B,4EAQE;QAJA,iOAA8C;QAJhD,4DAQE;QACF,gIAQM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,sEAAU;QAAA,4DAAQ;QACzB,4EAQE;QAJA,+NAA4C;QAJ9C,4DAQE;QACF,gIAQM;QACR,4DAAM;QAEN,6EAGC;QADD,2JAAS,yBAAqB,IAAC;QAC7B,mFAAsB;QAAA,4DAAS;QAEjC,6EAIC;QADD,2JAAS,yBAAqB,IAAC;QAC7B,4FAA+B;QAAA,4DAAS;QAC1C,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAErB,iIAGM;QACN,4DAAO;QACT,4DAAM;;QA1GE,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAA+C;QAA/C,0GAA+C;QAK3C,0DAAwC;QAAxC,4GAAwC;QAiB5C,0DAA+C;QAA/C,0GAA+C;QAK3C,0DAAwC;QAAxC,4GAAwC;QAiB5C,0DAA8C;QAA9C,yGAA8C;QAK1C,0DAAuC;QAAvC,2GAAuC;QAiB3C,0DAA4C;QAA5C,uGAA4C;QAKxC,0DAAqC;QAArC,yGAAqC;QAqBzC,0DAAW;QAAX,sFAAW;QAEX,0DAA2B;QAA3B,2FAA2B;;;;;;;;;;;;;;;;;;;;;;ACnGgD;;;;;;;ICY3E,sEAA6C;IAAC,4FAAgC;IAAA,4DAAM;;;IADtF,0EAA0E;IACxE,8HAAoF;IACtF,4DAAM;;;IADE,0DAAqC;IAArC,wGAAqC;;;IAgB3C,sEAAkD;IAAA,0FAA+B;IAAA,4DAAM;;;IADzF,0EAA+E;IAC7E,+HAAuF;IACzF,4DAAM;;;IADE,0DAA0C;IAA1C,6GAA0C;;;IAgBhD,sEAA6C;IAAA,qFAA0B;IAAA,4DAAM;;;IAC7E,sEAA8C;IAC5C,wGACF;IAAA,4DAAM;;;IACN,sEAA8C;IAC5C,qGACF;IAAA,4DAAM;;;IAPR,0EAA0E;IACxE,+HAA6E;IAC7E,+HAEM;IACN,+HAEM;IACR,4DAAM;;;IAPE,0DAAqC;IAArC,wGAAqC;IACrC,0DAAsC;IAAtC,yGAAsC;IAGtC,0DAAsC;IAAtC,yGAAsC;;;IAmBlD,sEAA6B;IAC3B,gEAAK;IACL,oEAAG;IAAA,uFAA4B;IAAA,4DAAI;IACrC,4DAAM;;;AD/DH,MAAM,4BAA4B;IAOvC,YAAoB,cAA8B,EAAU,KAAqB,EAAU,MAAc,EAAU,WAAwB;QAAvH,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAJ3I,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAG,KAAK,CAAC;IAE6H,CAAC;IAEhJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,aAAa,EAAE;gBACb,EAAE;gBACF;oBACE,+DAAmB;iBACpB;aACF;YACD,kBAAkB,EAAE;gBAClB,EAAE;gBACH;oBACC,+DAAmB;iBACnB;aACD;YACD,aAAa,EAAE;gBACb,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,CAAC,CAAC;iBACxB;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACpB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,UAAU,CAAC,EAAO;QAChB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;aAC1B,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC;aACtE,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;aACjD,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;wGA5FU,4BAA4B;0HAA5B,4BAA4B;QCTzC,yEAAuB;QACnB,0EAAiD;QAAxB,wJAAY,cAAU,IAAC;QAC9C,yEAAwB;QACtB,wEAAO;QAAA,0EAAe;QAAA,4DAAQ;QAC9B,2EAQE;QAJA,sNAA0C;QAJ5C,4DAQE;QACF,wHAEM;QACR,4DAAM;QAEN,yEAAwB;QACtB,wEAAO;QAAA,8EAAmB;QAAA,4DAAQ;QAClC,4EAQE;QAJA,4NAA+C;QAJjD,4DAQE;QACF,0HAEM;QACR,4DAAM;QAEN,0EAAwB;QACtB,yEAAO;QAAA,0EAAc;QAAA,4DAAQ;QAC7B,4EAQE;QAJA,uNAA0C;QAJ5C,4DAQE;QACF,0HAQM;QACR,4DAAM;QAEN,6EAGC;QADD,qJAAS,mBAAe,IAAC;QACvB,4EAAe;QAAA,4DAAS;QAE1B,6EAIC;QADD,qJAAS,mBAAe,IAAC;QACvB,mFAAsB;QAAA,4DAAS;QACjC,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAGrB,0HAGM;QACN,4DAAO;QACT,4DAAM;;QAzEE,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAA0C;QAA1C,qGAA0C;QAKtC,0DAAyC;QAAzC,6GAAyC;QAW7C,0DAA+C;QAA/C,0GAA+C;QAK3C,0DAA8C;QAA9C,kHAA8C;QAWlD,0DAA0C;QAA1C,qGAA0C;QAKtC,0DAAyC;QAAzC,6GAAyC;QAqB7C,0DAAW;QAAX,sFAAW;QAGX,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;;;;;;AC/DxB,MAAM,0CAA0C;IAErD,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oIALU,0CAA0C;wIAA1C,0CAA0C;QCPvD,oEAAG;QAAA,uGAA4C;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;ACCkC;;;;;;;ICcvE,sEAAgD;IAAA,yFAA8B;IAAA,4DAAM;;;IADtF,0EAA6E;IAC3E,yIAAoF;IACtF,4DAAM;;;IADE,0DAAwC;IAAxC,2GAAwC;;;IAgB9C,sEAAwC;IAAA,iFAAsB;IAAA,4DAAM;;;IADtE,0EAAqE;IACnE,0IAAoE;IACtE,4DAAM;;;IADE,0DAAgC;IAAhC,mGAAgC;;;IAgBhD,sEAAuC;IACnC,gEAAK;IACL,oEAAG;IAAA,6FAAkC;IAAA,4DAAI;IAC7C,4DAAM;;;ADvCH,MAAM,sCAAsC;IAOjD,YAAoB,wBAAkD,EAAU,KAAsB,EAAU,MAAc,EAAU,WAAwB;QAA5I,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,UAAK,GAAL,KAAK,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QALhK,6BAAwB,GAAuB,EAAuB,CAAC;QACvE,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAG,KAAK,CAAC;IAEkJ,CAAC;IAErK,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,gBAAgB,EAAE;gBAChB,EAAE;gBACF;oBACE,+DAAmB;iBACpB;aACF;YACD,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB,CAAC,EAAO;QAC1B,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,EAAE,CAAC;aACpC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,EAAE,IAAI,CAAC,wBAAwB,CAAC;aACpG,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAI,8CAA8C,CAAC;QACjE,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC;aACrE,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAChD,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;4HA/EU,sCAAsC;oIAAtC,sCAAsC;QCXnD,yEAAuB;QACnB,0EAAiD;QAAxB,kKAAY,cAAU,IAAC;QAC5C,yEAAwB;QACpB,2EAAkB;QAAA,6EAAkB;QAAA,4DAAQ;QAC5C,2EASE;QAJA,6OAAuD;QALzD,4DASE;QACF,kIAEM;QACR,4DAAM;QAEN,yEAAwB;QACtB,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,4EAQE;QAJA,sOAA+C;QAJjD,4DAQE;QACF,oIAEM;QACR,4DAAM;QAER,6EAGC;QADD,+JAAS,6BAAyB,IAAC;QACjC,uFAA0B;QAAA,4DAAS;QAErC,6EAIC;QADD,+JAAS,6BAAyB,IAAC;QACjC,8FAAiC;QAAA,4DAAS;QAC5C,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAEvB,qIAGM;QACN,4DAAO;QACX,4DAAM;;QAnDI,0DAAkB;QAAlB,+EAAkB;QAQd,0DAAuD;QAAvD,kHAAuD;QAKnD,0DAA4C;QAA5C,gHAA4C;QAWhD,0DAA+C;QAA/C,0GAA+C;QAK3C,0DAAoC;QAApC,wGAAoC;QAe1C,0DAAW;QAAX,sFAAW;QAEb,0DAA+B;QAA/B,+FAA+B;;;;;;;;;;;;;;;;;;;;;;AC9C4C;;;;;;;ICarE,sEAAyC;IAAA,qEAAU;IAAA,4DAAM;;;IACzD,sEAA0C;IACxC,gGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,gGACF;IAAA,4DAAM;;;IAPV,0EAAsE;IAClE,iIAAyD;IACzD,iIAEM;IACN,iIAEM;IACV,4DAAM;;;IAPI,0DAAiC;IAAjC,oGAAiC;IACjC,0DAAkC;IAAlC,qGAAkC;IAGlC,0DAAkC;IAAlC,qGAAkC;;;IAgBxC,sEAAwC;IAAA,qEAAU;IAAA,4DAAM;;;IACxD,sEAAyC;IACvC,oGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,oGACF;IAAA,4DAAM;;;IAPV,0EAAqE;IACjE,kIAAwD;IACxD,kIAEM;IACN,kIAEM;IACV,4DAAM;;;IAPI,0DAAgC;IAAhC,mGAAgC;IAChC,0DAAiC;IAAjC,oGAAiC;IAGjC,0DAAkC;IAAlC,qGAAkC;;;IAiBpD,sEAA+B;IAC3B,gEAAK;IACL,oEAAG;IAAA,oFAAyB;IAAA,4DAAI;IACpC,4DAAM;;;ADhDH,MAAM,8BAA8B;IAMzC,YAAoB,QAA0B,EAAU,KAAqB,EAAU,MAAc,EAAU,WAAwB;QAAnH,aAAQ,GAAR,QAAQ,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QALvI,qBAAgB,GAAc,EAAe,CAAC;QAC9C,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAC,KAAK,CAAC;IAE2H,CAAC;IAE5I,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,SAAS,EAAE;gBACT,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,QAAQ,EAAE;gBACR,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;SAAC,CAAC,CAAC;IACN,CAAC;IACC,YAAY,CAAC,EAAO;QAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;aACpB,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC;aACpE,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,OAAO,GAAE,oBAAoB,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC;aAC7C,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACxC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;4GArFM,8BAA8B;4HAA9B,8BAA8B;QCV3C,yEAAuB;QACnB,0EAAiD;QAAxB,0JAAY,cAAU,IAAC;QAE3C,yEAAwB;QACrB,2EAAuB;QAAC,uEAAW;QAAA,4DAAQ;QAC3C,2EAOE;QAJF,sNAA0C;QAH1C,4DAOE;QACF,0HAQM;QACV,4DAAM;QACL,yEAAwB;QACrB,2EAAsB;QAAC,sEAAU;QAAA,4DAAQ;QACzC,4EAOE;QAJF,sNAAyC;QAHzC,4DAOE;QACF,4HAQM;QACV,4DAAM;QAEH,6EAGF;QADD,uJAAS,qBAAiB,IAAC;QACzB,8EAAiB;QAAA,4DAAS;QAEhC,6EAG4B;QAA5B,uJAAS,qBAAiB,IAAC;QAAE,qFAAwB;QAAA,4DAAS;QAC1D,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAEvB,6HAGM;QAEV,4DAAO;QACP,4DAAM;;QA5DI,0DAAkB;QAAlB,+EAAkB;QAOhB,0DAA0C;QAA1C,mGAA0C;QAKpC,0DAAqC;QAArC,yGAAqC;QAe3C,0DAAyC;QAAzC,kGAAyC;QAKnC,0DAAoC;QAApC,wGAAoC;QAoB1C,0DAAW;QAAX,sFAAW;QAEb,0DAAuB;QAAvB,uFAAuB;;;;;;;;;;;;;;;;;;;;;;ACtDoD;;;;;;;ICcrE,sEAA0C;IAAA,sEAAW;IAAA,4DAAM;;;IAC3D,sEAAqC;IACnC,uGACF;IAAA,4DAAM;;;IACN,sEAAqC;IACnC,uGACF;IAAA,4DAAM;;;IAPV,0EAAuE;IACnE,+HAA2D;IAC3D,+HAEM;IACN,+HAEM;IACV,4DAAM;;;IAPI,0DAAkC;IAAlC,qGAAkC;IAClC,0DAA6B;IAA7B,gGAA6B;IAG7B,0DAA6B;IAA7B,gGAA6B;;;IAiBnC,sEAAyC;IAAA,qEAAU;IAAA,4DAAM;;;IACzD,sEAA0C;IACxC,gGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,gGACF;IAAA,4DAAM;;;IAPV,0EAAsE;IAClE,gIAAyD;IACzD,gIAEM;IACN,gIAEM;IACV,4DAAM;;;IAPI,0DAAiC;IAAjC,oGAAiC;IACjC,0DAAkC;IAAlC,qGAAkC;IAGlC,0DAAkC;IAAlC,qGAAkC;;;IAiBxC,sEAAwC;IAAA,qEAAU;IAAA,4DAAM;;;IACxD,sEAAyC;IACvC,oGACF;IAAA,4DAAM;;;IACN,sEAA0C;IACxC,oGACF;IAAA,4DAAM;;;IAPV,0EAAqE;IACjE,gIAAwD;IACxD,gIAEM;IACN,gIAEM;IACV,4DAAM;;;IAPI,0DAAgC;IAAhC,mGAAgC;IAChC,0DAAiC;IAAjC,oGAAiC;IAGjC,0DAAkC;IAAlC,qGAAkC;;;IAiBxC,sEAAoC;IAAC,iEAAK;IAAA,4DAAM;;;IAChD,sEAAqC;IACnC,+FACF;IAAA,4DAAM;;;IACN,sEAAqC;IACpC,+FACD;IAAA,4DAAM;;;IAPV,0EAAiE;IAC7D,gIAAgD;IAChD,gIAEM;IACN,gIAEM;IACV,4DAAM;;;IAPI,0DAA4B;IAA5B,+FAA4B;IAC5B,0DAA6B;IAA7B,gGAA6B;IAG7B,0DAA6B;IAA7B,gGAA6B;;;IAiBrC,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC5D,sEAAkC;IAAA,2EAAgB;IAAA,4DAAM;;;IAF1D,0EAAkE;IAChE,gIAA4D;IAC5D,gIAAwD;IAC1D,4DAAM;;;IAFE,0DAA6B;IAA7B,gGAA6B;IAC7B,0DAA0B;IAA1B,6FAA0B;;;IAe9B,sEAA2C;IAAA,mFAAwB;IAAA,4DAAM;;;IAD7E,0EAAwE;IACpE,gIAAyE;IAC7E,4DAAM;;;IADI,0DAAmC;IAAnC,sGAAmC;;;IAerC,sEAAgD;IAAC,yGAA6C;IAAA,4DAAM;;;IADxG,0EAA6E;IACzE,gIAAoG;IACxG,4DAAM;;;IADI,0DAAwC;IAAxC,2GAAwC;;;IAe9C,sEAA2C;IAAC,sFAA0B;IAAA,4DAAM;;;IADhF,0EAAwE;IACpE,gIAA4E;IAChF,4DAAM;;;IADI,0DAAmC;IAAnC,sGAAmC;;;IAezC,sEAA+C;IAAC,0FAA8B;IAAA,4DAAM;;;IADxF,0EAA4E;IACxE,gIAAoF;IACxF,4DAAM;;;IADI,0DAAuC;IAAvC,0GAAuC;;;IAe7C,sEAA6C;IAAC,wFAA4B;IAAA,4DAAM;;;IADpF,0EAA0E;IACtE,gIAAgF;IACpF,4DAAM;;;IADI,0DAAqC;IAArC,wGAAqC;;;IAe/C,sEAA0C;IAAC,qFAAyB;IAAA,4DAAM;;;IAD9E,0EAAuE;IACnE,gIAA0E;IAC9E,4DAAM;;;IADI,0DAAkC;IAAlC,sGAAkC;;;IAepD,sEAA6B;IACzB,gEAAK;IACL,oEAAG;IAAA,kFAAuB;IAAA,4DAAI;IAClC,4DAAM;;;ADrMH,MAAM,4BAA4B;IAOvC,YAAoB,cAA8B,EAAU,KAAqB,EAAU,MAAc,EAAU,WAAwB;QAAvH,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAL3I,mBAAc,GAAY,EAAa,CAAC;QACxC,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAC,KAAK,CAAC;IAE+H,CAAC;IAEhJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,SAAS,EAAE;gBACT,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,QAAQ,EAAE;gBACR,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,UAAU,EAAE;gBACV,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,WAAW,EAAE;gBACX,EAAE;gBACF;oBACE,+DAAmB;iBACpB;aACF;YACD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;YACpD,IAAI,EAAE;gBACJ,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,gBAAgB,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;YAC1C,WAAW,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;YACrC,eAAe,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC1C,aAAa,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACxC,UAAU,EAAE,CAAC,CAAC,EAAE,+DAAmB,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,EAAO;QAChB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;aAC1B,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC;aACtE,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,OAAO,GAAE,mBAAmB,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;aACjD,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;wGApHU,4BAA4B;0HAA5B,4BAA4B;QCVzC,yEAAuB;QACnB,0EAAiD;QAAxB,wJAAY,cAAU,IAAC;QAC5C,yEAAwB;QACpB,2EAAwB;QAAC,wEAAY;QAAA,4DAAQ;QAC7C,2EAQE;QALF,mNAAuC;QAHvC,4DAQE;QACF,wHAQM;QACV,4DAAM;QAEN,yEAAwB;QACpB,2EAAuB;QAAC,uEAAW;QAAA,4DAAQ;QAC3C,4EAOE;QAJF,mNAAwC;QAHxC,4DAOE;QACF,0HAQM;QACV,4DAAM;QAEN,0EAAwB;QACpB,4EAAsB;QAAC,uEAAU;QAAA,4DAAQ;QACzC,4EAOE;QAJF,kNAAuC;QAHvC,4DAOE;QACF,0HAQM;QACV,4DAAM;QAEN,0EAAwB;QACpB,6EAAkB;QAAC,kEAAK;QAAA,4DAAQ;QAChC,6EAOE;QAJF,8MAAmC;QAHnC,4DAOE;QACF,0HAQM;QACV,4DAAM;QAEN,0EAAwB;QACpB,6EAAmB;QAAC,mEAAM;QAAA,4DAAQ;QAClC,6EAOC;QAJD,+MAAoC;QAHpC,4DAOC;QACD,0HAGM;QACT,4DAAM;QAEP,0EAAwB;QACpB,6EAAyB;QAAC,0EAAa;QAAA,4DAAQ;QAC/C,6EAOE;QAJF,qNAA0C;QAH1C,4DAOE;QACF,0HAEM;QACV,4DAAM;QAEF,0EAAwB;QACpB,6EAA8B;QAAC,gFAAmB;QAAA,4DAAQ;QAC1D,6EAOE;QAJF,0NAA+C;QAH/C,4DAOE;QACF,0HAEM;QACV,4DAAM;QAEV,0EAAwB;QAChB,6EAAyB;QAAC,0EAAa;QAAA,4DAAQ;QAC/C,6EAOE;QAJF,qNAA0C;QAH1C,4DAOE;QACF,0HAEM;QACd,4DAAM;QAEN,0EAAwB;QAChB,6EAA6B;QAAC,8EAAiB;QAAA,4DAAQ;QACvD,6EAOE;QAJF,yNAA8C;QAH9C,4DAOE;QACF,0HAEM;QACd,4DAAM;QAEN,0EAAwB;QAChB,6EAA2B;QAAC,4EAAe;QAAA,4DAAQ;QACnD,6EAOE;QAJF,uNAA4C;QAH5C,4DAOE;QACF,0HAEM;QACd,4DAAM;QAEN,0EAAwB;QACpB,6EAAwB;QAAC,yEAAY;QAAA,4DAAQ;QAC7C,6EAOE;QAJF,oNAAyC;QAHzC,4DAOE;QACF,0HAEM;QACP,4DAAM;QAET,8EAGC;QADD,qJAAS,mBAAe,IAAC;QACvB,4EAAe;QAAA,4DAAS;QAE9B,8EAG0B;QAA1B,qJAAS,mBAAe,IAAC;QAAE,mFAAsB;QAAA,4DAAS;QACtD,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAEvB,2HAGM;QAEV,4DAAO;QACP,4DAAM;;QAjNI,0DAAkB;QAAlB,+EAAkB;QAMhB,0DAAuC;QAAvC,kGAAuC;QAMjC,0DAAsC;QAAtC,0GAAsC;QAgB5C,0DAAwC;QAAxC,iGAAwC;QAKlC,0DAAqC;QAArC,yGAAqC;QAgB3C,0DAAuC;QAAvC,gGAAuC;QAKjC,0DAAoC;QAApC,wGAAoC;QAgB1C,0DAAmC;QAAnC,4FAAmC;QAK7B,0DAAgC;QAAhC,oGAAgC;QAgBtC,0DAAoC;QAApC,6FAAoC;QAK9B,0DAAiC;QAAjC,qGAAiC;QAWvC,0DAA0C;QAA1C,mGAA0C;QAKpC,0DAAuC;QAAvC,2GAAuC;QAUzC,0DAA+C;QAA/C,wGAA+C;QAKzC,0DAA4C;QAA5C,gHAA4C;QAUlD,0DAA0C;QAA1C,mGAA0C;QAKpC,0DAAuC;QAAvC,2GAAuC;QAU7C,0DAA8C;QAA9C,uGAA8C;QAKxC,0DAA2C;QAA3C,+GAA2C;QAUjD,0DAA4C;QAA5C,qGAA4C;QAKtC,0DAAyC;QAAzC,6GAAyC;QAUnD,0DAAyC;QAAzC,kGAAyC;QAKnC,0DAAsC;QAAtC,0GAAsC;QAc5C,0DAAW;QAAX,sFAAW;QAEb,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;;;;;;;;;AC5MsD;;;;;;;ICc3E,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEAAyC;IACvC,wGACF;IAAA,4DAAM;;;IACN,sEAAyC;IACvC,mGACF;IAAA,4DAAM;;;IAPR,yEAAqE;IACnE,2HAAkE;IAClE,2HAEM;IACN,2HAEM;IACR,4DAAM;;;IAPE,0DAAgC;IAAhC,mGAAgC;IAChC,0DAAiC;IAAjC,oGAAiC;IAGjC,0DAAiC;IAAjC,oGAAiC;;;IAkBvC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADpE,yEAAqE;IACnE,4HAAkE;IACpE,4DAAM;;;IADE,0DAAgC;IAAhC,mGAAgC;;;IAiB9C,sEAA0B;IACtB,gEAAK;IACL,oEAAG;IAAA,+EAAoB;IAAA,4DAAI;IAC/B,4DAAM;;;AD/CD,MAAM,yBAAyB;IAOpC,YAAoB,WAAyB,EACnC,KAAqB,EACrB,MAAc,EACd,WAAwB;QAHd,gBAAW,GAAX,WAAW,CAAc;QACnC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAPlC,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAG,KAAK,CAAC;QAKmB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAAC,CAAC;IAE7D,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE;gBACR,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,EAAO;QACb,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC;aACvB,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC;aAC7D,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAI,gCAAgC,CAAC;QACnD,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;aAC3C,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAI,gCAAgC,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;;kGArFU,yBAAyB;uHAAzB,yBAAyB;QCTtC,yEAAuB;QACnB,0EAAiD;QAAxB,qJAAY,cAAU,IAAC;QAC9C,yEAAwB;QACtB,wEAAO;QAAA,mEAAQ;QAAA,4DAAQ;QACvB,2EAQE;QAJA,2MAAkC;QAJpC,4DAQE;QACF,qHAQM;QACR,4DAAM;QAEN,yEAAwB;QACtB,wEAAO;QAAA,mEAAQ;QAAA,4DAAQ;QACvB,4EAQE;QAJA,4MAAkC;QAJpC,4DAQE;QACF,uHAEM;QACR,4DAAM;QAEN,6EAGC;QADD,kJAAS,gBAAY,IAAC;QACpB,yEAAY;QAAA,4DAAS;QAEvB,6EAIC;QADD,kJAAS,gBAAY,IAAC;QACpB,gFAAmB;QAAA,4DAAS;QAC9B,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAGvB,uHAGM;QACR,4DAAO;QACP,4DAAM;;QAzDI,0DAAkB;QAAlB,+EAAkB;QAOlB,0DAAkC;QAAlC,6FAAkC;QAK9B,0DAAoC;QAApC,wGAAoC;QAiBxC,0DAAkC;QAAlC,6FAAkC;QAK9B,0DAAoC;QAApC,wGAAoC;QAexC,0DAAW;QAAX,sFAAW;QAGb,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;;AC/CnB,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8FALU,uBAAuB;qHAAvB,uBAAuB;QCPpC,oEAAG;QAAA,iFAAsB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;ICYzB,qEAA+B;IAC3B,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,6EAAyF;IAAzB,wXAAwB;IAChF,sEAAmD;IACvD,4DAAS;IAEb,6EAAgG;IAA9B,6XAA6B;IACvF,sEAAoD;IACxD,4DAAS;IACjB,4DAAK;IACT,4DAAK;;;IApBG,0DACJ;IADI,yFACJ;IAEI,0DACJ;IADI,0FACJ;IAEI,0DACJ;IADI,4FACJ;IAEI,0DACJ;IADI,0FACJ;;ACbD,MAAM,kBAAkB;IAK7B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QACpE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACC,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CACzC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IACD,QAAQ,CAAC,IAAW;QAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,UAAU,CAAC,MAAe;QACxB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3C,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CACtB,CAAC;IACJ,CAAC;;oFA3BU,kBAAkB;gHAAlB,kBAAkB;QDV/B,sEAAK;QACD,qEAAI;QAAC,iEAAK;QAAA,4DAAK;QACnB,4DAAM;QAEN,2EAAoC;QAChC,qEAAI;QACA,qEAAI;QAAC,kEAAM;QAAA,4DAAK;QAChB,qEAAI;QAAC,kEAAM;QAAA,4DAAK;QAChB,qEAAI;QAAC,sEAAS;QAAA,4DAAK;QACnB,sEAAI;QAAC,oEAAO;QAAA,4DAAK;QACrB,4DAAK;QACL,+GAsBK;QACT,4DAAQ;QACR,0EAAmB;QACf,6EAAiF;QACzE,sEAAmD;QACvD,4DAAS;QACjB,4DAAM;;QA5BmB,2DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;IEDzB,qEAAiD;IAC7C,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,6EAAkG;IAAlC,mZAAiC;IAC7F,sEAAmD;IACvD,4DAAS;IAET,6EAAyG;IAAvC,wZAAsC;IACpG,sEAAoD;IACxD,4DAAS;IACb,4DAAK;IACT,4DAAK;;;;IApBG,0DACJ;IADI,yGACJ;IAEI,0DACJ;IADI,yGACJ;IAEI,0DACJ;IADI,yGACJ;IAEI,0DACJ;IADI,uGACJ;;ACXL,MAAM,2BAA2B;IAKtC,YAAoB,oBAA2C,EAAU,MAAe;QAApE,yBAAoB,GAApB,oBAAoB,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAS;QACtF,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAC5D,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,QAAQ,CAAC,aAA6B;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,EAAE,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,mBAAmB,CAAC,eAAwB;QAC1C,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC,SAAS,CACtE,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAC/B,CAAC;IACJ,CAAC;;sGA9BU,2BAA2B;yHAA3B,2BAA2B;QDZxC,sEAAK;QACD,qEAAI;QAAC,2EAAe;QAAA,4DAAK;QAC7B,4DAAM;QAEF,2EAAoC;QAChC,qEAAI;QACA,qEAAI;QAAC,0EAAc;QAAA,4DAAK;QACxB,qEAAI;QAAC,yEAAa;QAAlB,4DAAI;QAAc,gEAAI;QACtB,sEAAI;QAAC,0EAAa;QAAA,4DAAK;QACvB,sEAAI;QAAC,wEAAW;QAAA,4DAAK;QACzB,4DAAK;QACL,wHAsBK;QACT,4DAAQ;QACR,0EAAmB;QACf,6EAAiF;QAC7E,sEAAmD;QACvD,4DAAS;QACb,4DAAM;;QA5B4B,2DAAiB;QAAjB,uFAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEuB/C,yEAYC;IADC,0aAAoC;IAEpC,uDACF;IAAA,4DAAK;;;;;IAJH,gGAAkC;IAGlC,0DACF;IADE,2FACF;;;IAME,6EAAwD;IACtD,uDACF;IAAA,4DAAS;;;IAF8B,4EAAgB;IACrD,0DACF;IADE,mFACF;;;IAMJ,sEAA2B;IACzB,qEAAI;IAAC,mEAAO;IAAA,4DAAK;IACjB,sEAAK;IACH,wEAAO;IAAA,yEAAQ;IAAA,kEAAO;IAAA,4DAAS;IAAA,4DAAQ;IACtC,uDACH;IAAA,4DAAM;IACN,sEAAK;IACH,wEAAO;IAAA,0EAAQ;IAAA,yEAAa;IAAA,4DAAS;IAAA,4DAAQ;IAAC,wDAChD;IAAA,4DAAM;IACN,uEAAK;IACH,yEAAO;IAAA,0EAAQ;IAAA,uEAAW;IAAA,4DAAS;IAAA,4DAAQ;IAC3C,wDACF;IAAA,4DAAM;IACN,uEAAK;IACH,yEAAO;IAAA,0EAAQ;IAAA,qEAAS;IAAA,4DAAS;IAAA,4DAAQ;IACzC,wDACF;IAAA,4DAAM;IACN,uEAAK;IACD,yEAAO;IAAA,0EAAQ;IAAA,iEAAK;IAAA,4DAAS;IAAA,4DAAQ;IACrC,wDACF;IAAA,4DAAM;IAER,yEAA4E;IAC1E,kEACF;IAAA,4DAAI;IACN,4DAAM;;;IArBD,0DACH;IADG,sGACH;IAEgD,0DAChD;IADgD,2GAChD;IAGE,0DACF;IADE,0GACF;IAGE,0DACF;IADE,wGACF;IAGI,0DACF;IADE,qGACF;IAE6B,0DAA4C;IAA5C,4HAA4C;;;IAK7E,sEAA4B;IAC1B,gEAAM;IACN,oEAAG;IAAA,6FAAkC;IAAA,4DAAI;IAC3C,4DAAM;;;AClFL,MAAM,wBAAwB;IAYnC,YAAoB,QAAwB;QAAxB,aAAQ,GAAR,QAAQ,CAAgB;QAT5C,YAAO,GAAa,EAAE,CAAC;QAEvB,iBAAY,GAAG,CAAC,CAAC,CAAC;QAClB,UAAK,GAAG,EAAE,CAAC;QACX,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE0B,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,gBAAgB,CAAC,WAAmB,EAAE,IAAY,EAAE,QAAgB;QAClE,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,IAAI,WAAW,EAAE;YACf,MAAM,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;SAC/B;QAED,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;aAC3B,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC;YACzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAE,IAAI,CAAC;IAC3B,CAAC;IAED,eAAe,CAAC,MAAmB,EAAE,KAAK,GAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;;gGA7EU,wBAAwB;sHAAxB,wBAAwB;QDTrC,yEAAsB;QACpB,yEAAsB;QACpB,yEAA8B;QAC5B,2EAKE;QADA,2LAAmB;QAJrB,4DAKE;QACF,yEAAgC;QAC9B,4EAIC;QADC,gJAAS,iBAAa,IAAC;QAEvB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,yEAAuB;QACrB,yFAKC;QADC,6KAAc,4BAAwB,IAAC;QACxC,4DAAsB;QACzB,4DAAM;QAEJ,yEAAsB;QACpB,sEAAI;QAAC,4EAAe;QAAA,4DAAK;QACzB,yEAAuB;QACrB,qHAcK;;QACP,4DAAK;QAEL,2EAAkB;QAChB,6EACA;QAAA,8EAAgD;QAAxC,yJAAU,gCAA4B,IAAC;QAC7C,6HAES;QACX,4DAAS;QACX,4DAAM;QAER,4DAAM;QACN,0EAAsB;QACpB,wHAyBM;QAEN,uHAGM;QACR,4DAAM;QACR,4DAAM;;QAtFA,0DAAmB;QAAnB,8EAAmB;QAkBrB,0DAAmB;QAAnB,4EAAmB;QAWW,0DAKlB;QALkB,4PAKlB;QAYiB,0DAAY;QAAZ,kFAAY;QAQnC,0DAAmB;QAAnB,mFAAmB;QA2BnB,0DAAoB;QAApB,oFAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEvDxB,yEAYC;IADC,0bAA4C;IAE5C,uDACF;IAAA,4DAAK;;;;;IAJH,gGAAkC;IAGlC,0DACF;IADE,8FACF;;;IAME,6EAAwD;IACtD,uDACF;IAAA,4DAAS;;;IAF8B,4EAAgB;IACrD,0DACF;IADE,mFACF;;;IAMJ,sEAA+B;IAC7B,qEAAI;IAAC,wEAAY;IAAA,4DAAK;IACtB,sEAAK;IACH,wEAAO;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IAAA,4DAAQ;IAAC,uDACzC;IAAA,4DAAM;IACN,sEAAK;IACH,wEAAO;IAAA,0EAAQ;IAAA,uEAAW;IAAA,4DAAS;IAAA,4DAAQ;IAC3C,wDACF;IAAA,4DAAM;IACN,uEAAK;IACH,yEAAO;IAAA,0EAAQ;IAAA,qEAAS;IAAA,4DAAS;IAAA,4DAAQ;IACzC,wDACF;IAAA,4DAAM;IACN,uEAAK;IACD,yEAAO;IAAA,0EAAQ;IAAA,2EAAe;IAAA,4DAAS;IAAA,4DAAQ;IAC/C,wDACF;IAAA,4DAAM;IAER,yEAAoF;IAClF,kEACF;IAAA,4DAAI;IACN,4DAAM;;;IAlBqC,0DACzC;IADyC,yGACzC;IAGE,0DACF;IADE,8GACF;IAGE,0DACF;IADE,4GACF;IAGI,0DACF;IADE,kHACF;IAE6B,0DAAoD;IAApD,oIAAoD;;;IAKrF,sEAAgC;IAC9B,gEAAM;IACN,oEAAG;IAAA,8GAAmD;IAAA,4DAAI;IAC5D,4DAAM;;;AC/EL,MAAM,4BAA4B;IAYvC,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAVxD,gBAAW,GAAiB,EAAE,CAAC;QAE/B,iBAAY,GAAG,CAAC,CAAC,CAAC;QAClB,SAAI,GAAG,EAAE,CAAC;QAEV,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEsC,CAAC;IAE7D,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,gBAAgB,CAAC,UAAkB,EAAE,IAAY,EAAE,QAAgB;QACjE,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,IAAI,UAAU,EAAE;YACd,MAAM,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC;SAC7B;QAED,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,mBAAmB;QACjB,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE1E,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC;aACpC,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC;YAC7C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,iBAAiB,GAAE,IAAI,CAAC;IAC/B,CAAC;IAED,mBAAmB,CAAC,UAAuB,EAAE,KAAK,GAAC,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;;wGA7EU,4BAA4B;0HAA5B,4BAA4B;QDRzC,yEAAsB;QACpB,yEAAsB;QACpB,yEAA8B;QAC5B,2EAKE;QADA,8LAAkB;QAJpB,4DAKE;QACF,yEAAgC;QAC9B,4EAIC;QADC,oJAAS,gBAAY,IAAC;QAEtB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,yEAAuB;QACrB,yFAKC;QADC,iLAAc,4BAAwB,IAAC;QACxC,4DAAsB;QACzB,4DAAM;QAEJ,yEAAsB;QACpB,sEAAI;QAAC,kFAAqB;QAAA,4DAAK;QAC/B,yEAAuB;QACrB,yHAcK;;QACP,4DAAK;QAEL,2EAAkB;QAChB,6EACA;QAAA,8EAAgD;QAAxC,6JAAU,gCAA4B,IAAC;QAC7C,iIAES;QACX,4DAAS;QACX,4DAAM;QAER,4DAAM;QACN,0EAAsB;QACpB,4HAqBM;QAEN,2HAGM;QAER,4DAAM;QACR,4DAAM;;QAnFA,0DAAkB;QAAlB,6EAAkB;QAkBpB,0DAAmB;QAAnB,4EAAmB;QAWe,0DAKtB;QALsB,gQAKtB;QAYiB,0DAAY;QAAZ,kFAAY;QAQnC,0DAAuB;QAAvB,uFAAuB;QAuBvB,0DAAwB;QAAxB,wFAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEnD5B,yEAYC;IADC,kaAAgC;IAGhC,uDAEF;IAAA,4DAAK;;;;;IANH,gGAAkC;IAIlC,0DAEF;IAFE,0GAEF;;;IAME,6EAAwD;IACtD,uDACF;IAAA,4DAAS;;;IAF8B,4EAAgB;IACrD,0DACF;IADE,mFACF;;;IAMJ,sEAAyB;IACvB,qEAAI;IAAC,iEAAM;IAAA,4DAAK;IAChB,sEAAK;IACH,wEAAO;IAAA,yEAAQ;IAAA,+DAAI;IAAA,4DAAS;IAAA,4DAAQ;IAAC,uDACvC;IAAA,4DAAM;IACN,sEAAK;IACH,wEAAO;IAAA,0EAAQ;IAAA,kEAAM;IAAA,4DAAS;IAAA,4DAAQ;IACtC,wDACF;IAAA,4DAAM;IACN,uEAAK;IACH,yEAAO;IAAA,0EAAQ;IAAA,oEAAQ;IAAA,4DAAS;IAAA,4DAAQ;IACxC,wDACF;IAAA,4DAAM;IACN,uEAAK;IACD,yEAAO;IAAA,0EAAQ;IAAA,sEAAU;IAAA,4DAAS;IAAA,4DAAQ;IAC1C,wDACF;IAAA,4DAAM;IACN,uEAAK;IACH,yEAAO;IAAA,0EAAQ;IAAA,yEAAa;IAAA,4DAAS;IAAA,4DAAQ;IAC7C,wDACF;IAAA,4DAAM;IACN,uEAAK;IACH,yEAAO;IAAA,0EAAQ;IAAA,oEAAQ;IAAA,4DAAS;IAAA,4DAAQ;IACxC,wDACF;IAAA,4DAAM;IAIR,yEAAwE;IACtE,kEACF;IAAA,4DAAI;IACN,4DAAM;;;IA5BmC,0DACvC;IADuC,iGACvC;IAGE,0DACF;IADE,oGACF;IAGE,0DACF;IADE,qGACF;IAGI,0DACF;IADE,uGACF;IAGE,0DACF;IADE,yGACF;IAGE,0DACF;IADE,qGACF;IAI6B,0DAAwC;IAAxC,wHAAwC;;;IAKzE,sEAA0B;IACxB,gEAAM;IACN,oEAAG;IAAA,4FAAiC;IAAA,4DAAI;IAC1C,4DAAM;;;AC3FL,MAAM,sBAAsB;IAajC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAT5C,iBAAY,GAAG,CAAC,CAAC,CAAC;QAClB,UAAK,GAAG,CAAC,CAAC;QAEV,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAG0B,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,gBAAgB,CAAC,WAAmB,EAAE,IAAY,EAAE,QAAgB;QAClE,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,IAAI,WAAW,EAAE;YACf,MAAM,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;SAC/B;QAED,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa;QACX,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3E,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC;aAC9B,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC;IACzB,CAAC;IAED,aAAa,CAAC,IAAiB,EAAE,KAAK,GAAC,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;;4FA9EU,sBAAsB;oHAAtB,sBAAsB;QDRnC,yEAAsB;QACpB,yEAAsB;QACpB,yEAA8B;QAC5B,2EAKE;QADA,yLAAmB;QAJrB,4DAKE;QACF,yEAAgC;QAC9B,4EAIC;QADC,8IAAS,iBAAa,IAAC;QAEvB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,yEAAuB;QACrB,yFAKC;QADC,2KAAc,4BAAwB,IAAC;QACxC,4DAAsB;QACzB,4DAAM;QAEJ,yEAAsB;QACpB,sEAAI;QAAC,2EAAc;QAAA,4DAAK;QACxB,yEAAuB;QACrB,mHAgBK;;QACP,4DAAK;QAEL,2EAAkB;QAChB,6EACA;QAAA,8EAAgD;QAAxC,uJAAU,gCAA4B,IAAC;QAC7C,2HAES;QACX,4DAAS;QACX,4DAAM;QAER,4DAAM;QACN,0EAAsB;QACpB,sHA+BM;QAEN,qHAGM;QACR,4DAAM;QACR,4DAAM;;QA9FA,0DAAmB;QAAnB,8EAAmB;QAkBrB,0DAAmB;QAAnB,4EAAmB;QAWS,0DAKhB;QALgB,0PAKhB;QAciB,0DAAY;QAAZ,kFAAY;QAQnC,0DAAiB;QAAjB,iFAAiB;QAiCjB,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE/DtB,yEAYD;IADC,scAAkD;IAElD,uDAEA;IAAA,4DAAK;;;;;IALL,gGAAkC;IAGlC,0DAEA;IAFA,wKAEA;;;IAME,6EAAwD;IACtD,uDACF;IAAA,4DAAS;;;IAF8B,4EAAgB;IACrD,0DACF;IADE,mFACF;;;IAMJ,sEAAkC;IAChC,qEAAI;IAAC,2EAAe;IAAA,4DAAK;IACzB,sEAAK;IACH,wEAAO;IAAA,yEAAQ;IAAC,2EAAe;IAAA,4DAAS;IAAA,4DAAQ;IAC/C,uDACH;IAAA,4DAAM;IACN,sEAAK;IACH,wEAAO;IAAA,0EAAQ;IAAC,4EAAe;IAAA,4DAAS;IAAA,4DAAQ;IAChD,wDACF;IAAA,4DAAM;IACN,uEAAK;IACH,yEAAO;IAAA,0EAAQ;IAAC,2EAAc;IAAA,4DAAS;IAAA,4DAAQ;IAC/C,wDACF;IAAA,4DAAM;IACN,uEAAK;IACD,yEAAO;IAAA,0EAAQ;IAAC,wEAAW;IAAA,4DAAS;IAAA,4DAAQ;IAC5C,wDACF;IAAA,4DAAM;IAER,yEAA0F;IACxF,kEACF;IAAA,4DAAI;IACN,4DAAM;;;IAlBD,0DACH;IADG,oHACH;IAGE,0DACF;IADE,oHACF;IAGE,0DACF;IADE,mHACF;IAGI,0DACF;IADE,iHACF;IAE6B,0DAA0D;IAA1D,0IAA0D;;;IAK3F,sEAAmC;IACjC,gEAAM;IACN,oEAAG;IAAA,kHAAuD;IAAA,4DAAI;IAChE,4DAAM;;;ACjFL,MAAM,+BAA+B;IAY1C,YAAoB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAV9D,mBAAc,GAAoB,EAAE,CAAC;QAErC,iBAAY,GAAG,CAAC,CAAC,CAAC;QAClB,cAAS,GAAG,CAAC,CAAC;QAEd,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE4C,CAAC;IAEnE,QAAQ;QACN,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,gBAAgB,CAAC,SAAiB,EAAE,IAAY,EAAE,QAAgB;QAChE,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,IAAI,SAAS,EAAE;YACb,MAAM,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;SACjC;QAED,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,sBAAsB;QACpB,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE/E,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,MAAM,CAAC;aACvC,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,MAAM,EAAC,cAAc,EAAE,UAAU,EAAC,GAAG,QAAQ,CAAC;YAC9C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,oBAAoB,GAAE,IAAI,CAAC;IAClC,CAAC;IAED,sBAAsB,CAAC,aAA0B,EAAE,KAAK,GAAC,CAAC,CAAC;QACzD,IAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;;8GA9EU,+BAA+B;6HAA/B,+BAA+B;QDR5C,yEAAsB;QACpB,yEAAsB;QACpB,yEAA8B;QAC5B,2EAKE;QADA,sMAAuB;QAJzB,4DAKE;QACF,yEAAgC;QAC9B,4EAIC;QADC,uJAAS,qBAAiB,IAAC;QAE3B,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,yEAAuB;QACrB,yFAKC;QADC,oLAAc,4BAAwB,IAAC;QACxC,4DAAsB;QACzB,4DAAM;QAEJ,yEAAsB;QACpB,sEAAI;QAAA,oFAAwB;QAAA,4DAAK;QACjC,yEAAuB;QACrB,4HAeK;;QACP,4DAAK;QAEL,2EAAkB;QAChB,6EACA;QAAA,8EAAgD;QAAxC,gKAAU,gCAA4B,IAAC;QAC7C,oIAES;QACX,4DAAS;QACX,4DAAM;QAER,4DAAM;QACN,0EAAsB;QACpB,+HAsBM;QAEN,8HAGM;QACR,4DAAM;QACR,4DAAM;;QApFA,0DAAuB;QAAvB,kFAAuB;QAkBzB,0DAAmB;QAAnB,4EAAmB;QAWc,0DAKzB;QALyB,mQAKzB;QAaqB,0DAAY;QAAZ,kFAAY;QAQnC,0DAA0B;QAA1B,0FAA0B;QAwB1B,0DAA2B;QAA3B,2FAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEpD/B,yEAYD;IADC,8aAAsC;IAEpC,uDAEF;IAAA,4DAAK;;;;;IALL,gGAAkC;IAGhC,0DAEF;IAFE,wIAEF;;;IAME,6EAAwD;IACtD,uDACF;IAAA,4DAAS;;;IAF8B,4EAAgB;IACrD,0DACF;IADE,mFACF;;;IAMJ,sEAA4B;IAC1B,qEAAI;IAAC,oEAAQ;IAAA,4DAAK;IAClB,sEAAK;IACH,wEAAO;IAAA,yEAAQ;IAAA,2EAAgB;IAAA,4DAAS;IAAA,4DAAQ;IAAC,uDACnD;IAAA,4DAAM;IACN,sEAAK;IACH,wEAAO;IAAA,0EAAQ;IAAA,yEAAa;IAAA,4DAAS;IAAA,4DAAQ;IAC7C,wDACF;IAAA,4DAAM;IACN,uEAAK;IACH,yEAAO;IAAA,0EAAQ;IAAA,gFAAoB;IAAA,4DAAS;IAAA,4DAAQ;IACpD,wDACF;IAAA,4DAAM;IAEN,yEAA8E;IAC5E,kEACF;IAAA,4DAAI;IACN,4DAAM;;;IAd+C,0DACnD;IADmD,+GACnD;IAGE,0DACF;IADE,6GACF;IAGE,0DACF;IADE,oHACF;IAE+B,0DAA8C;IAA9C,8HAA8C;;;IAK/E,sEAA6B;IAC3B,gEAAM;IACN,oEAAG;IAAA,0GAA+C;IAAA,4DAAI;IACxD,4DAAM;;;AC7EL,MAAM,yBAAyB;IAapC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAXlD,aAAQ,GAAc,EAAE,CAAC;QAEzB,iBAAY,GAAG,CAAC,CAAC,CAAC;QAClB,SAAI,GAAG,EAAE,CAAC;QACV,kBAAa,GAAG,CAAC,CAAC;QAElB,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEgC,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB,CAAC,aAAqB,EAAE,IAAY,EAAE,QAAgB;QACpE,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,IAAI,aAAa,EAAE;YACjB,MAAM,CAAC,eAAe,CAAC,GAAG,aAAa,CAAC;SACzC;QAED,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,gBAAgB;QACd,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnF,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC;aACjC,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,MAAM,EAAC,QAAQ,EAAE,UAAU,EAAC,GAAG,QAAQ,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC;IAC5B,CAAC;IAED,gBAAgB,CAAC,OAAoB,EAAE,KAAK,GAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;;kGA/EU,yBAAyB;uHAAzB,yBAAyB;QDRtC,yEAAsB;QACpB,yEAAsB;QACpB,yEAA8B;QAC5B,2EAKE;QADA,oMAA2B;QAJ7B,4DAKE;QACF,yEAAgC;QAC9B,4EAIC;QADC,iJAAS,yBAAqB,IAAC;QAE/B,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,yEAAuB;QACrB,yFAKC;QADC,8KAAc,4BAAwB,IAAC;QACxC,4DAAsB;QACzB,4DAAM;QAER,yEAAsB;QAClB,0EAAsB;QACpB,sEAAI;QAAC,8EAAiB;QAAA,4DAAK;QAC3B,yEAAuB;QACrB,sHAeK;;QACP,4DAAK;QAEL,2EAAkB;QAChB,6EACA;QAAA,8EAAgD;QAAxC,0JAAU,gCAA4B,IAAC;QAC7C,8HAES;QACX,4DAAS;QACX,4DAAM;QAER,4DAAM;QACN,0EAAsB;QACpB,yHAiBM;QAEN,wHAGM;QACR,4DAAM;QACR,4DAAM;QAvFR,4DAAsB;;QAOd,0DAA2B;QAA3B,sFAA2B;QAkB7B,0DAAmB;QAAnB,4EAAmB;QAYQ,0DAKnB;QALmB,6PAKnB;QAaqB,0DAAY;QAAZ,kFAAY;QAQnC,0DAAoB;QAApB,oFAAoB;QAmBpB,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEjDzB,yEAYD;IADC,sdAA0D;IAE5D,uDAIE;IAAA,4DAAK;;;;;IAPL,gGAAkC;IAGpC,0DAIE;IAJF,6KAIE;;;IAME,6EAAwD;IACtD,uDACF;IAAA,4DAAS;;;IAF8B,4EAAgB;IACrD,0DACF;IADE,mFACF;;;IAMJ,sEAAsC;IACpC,qEAAI;IAAC,+EAAmB;IAAA,4DAAK;IAC7B,sEAAK;IACH,wEAAO;IAAA,yEAAQ;IAAC,sEAAU;IAAA,4DAAS;IAAA,4DAAQ;IAC1C,uDACH;IAAA,4DAAM;IACN,sEAAK;IACH,wEAAO;IAAA,0EAAQ;IAAC,4EAAe;IAAA,4DAAS;IAAA,4DAAQ;IAChD,wDACF;IAAA,4DAAM;IAEN,yEAAkG;IAChG,kEACF;IAAA,4DAAI;IACN,4DAAM;;;IAVD,0DACH;IADG,oHACH;IAGE,0DACF;IADE,4HACF;IAE+B,0DAAkE;IAAlE,kJAAkE;;;IAKnG,sEAAuC;IACrC,gEAAM;IACN,oEAAG;IAAA,sHAA2D;IAAA,4DAAI;IACpE,4DAAM;;;AC3EL,MAAM,mCAAmC;IAY9C,YAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;QAVtE,uBAAkB,GAAwB,EAAE,CAAC;QAE7C,iBAAY,GAAG,CAAC,CAAC,CAAC;QAClB,aAAQ,GAAG,EAAE,CAAC;QAEd,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEoD,CAAC;IAE3E,QAAQ;QACN,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAED,gBAAgB,CAAC,cAAsB,EAAE,IAAY,EAAE,QAAgB;QACrE,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,IAAI,cAAc,EAAE;YAClB,MAAM,CAAC,UAAU,CAAC,GAAG,cAAc,CAAC;SACrC;QAED,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,0BAA0B;QACxB,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,MAAM,CAAC;aAC3C,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,MAAM,EAAE,kBAAkB,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC;YACpD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAC7C,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,wBAAwB,GAAE,IAAI,CAAC;IACtC,CAAC;IAED,0BAA0B,CAAC,iBAA8B,EAAE,KAAK,GAAC,CAAC,CAAC;QACjE,IAAI,CAAC,wBAAwB,GAAG,iBAAiB,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;;sHA7EU,mCAAmC;iIAAnC,mCAAmC;QDRhD,yEAAsB;QACpB,yEAAsB;QACpB,yEAA8B;QAC5B,2EAKE;QADA,yMAAsB;QAJxB,4DAKE;QACF,yEAAgC;QAC9B,4EAIC;QADC,2JAAS,oBAAgB,IAAC;QAE1B,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,yEAAuB;QACrB,yFAKC;QADC,wLAAc,4BAAwB,IAAC;QACxC,4DAAsB;QACzB,4DAAM;QAEJ,yEAAsB;QACpB,sEAAI;QAAA,wFAA4B;QAAA,4DAAK;QACrC,yEAAuB;QACrB,gIAiBK;;QACP,4DAAK;QAEL,2EAAkB;QAChB,6EACA;QAAA,8EAAgD;QAAxC,oKAAU,gCAA4B,IAAC;QAC7C,wIAES;QACX,4DAAS;QACX,4DAAM;QAER,4DAAM;QACN,0EAAsB;QACpB,mIAcM;QAEN,kIAGM;QAER,4DAAM;QACR,4DAAM;;QA/EA,0DAAsB;QAAtB,iFAAsB;QAkBxB,0DAAmB;QAAnB,4EAAmB;QAWkB,0DAK7B;QAL6B,uQAK7B;QAeqB,0DAAY;QAAZ,kFAAY;QAQnC,0DAA8B;QAA9B,8FAA8B;QAgB9B,0DAA+B;QAA/B,+FAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE9CpC,yEAYE;IADC,sbAA0C;IAE1C,uDAIF;IAAA,4DAAK;;;;;IAPH,gGAAkC;IAGlC,0DAIF;IAJE,8HAIF;;;IAME,6EAAwD;IACtD,uDACF;IAAA,4DAAS;;;IAF8B,4EAAgB;IACrD,0DACF;IADE,mFACF;;;IAMJ,sEAA8B;IAC5B,qEAAI;IAAC,4EAAgB;IAAA,4DAAK;IAE1B,sEAAK;IACH,wEAAO;IAAA,yEAAQ;IAAC,wEAAY;IAAA,4DAAS;IAAA,4DAAQ;IAC7C,uDACF;IAAA,4DAAM;IACN,sEAAK;IACH,wEAAO;IAAA,0EAAQ;IAAC,wEAAW;IAAA,4DAAS;IAAA,4DAAQ;IAC5C,wDACF;IAAA,4DAAM;IACN,yEAAkF;IAChF,kEACF;IAAA,4DAAI;IACN,4DAAM;;;IATF,0DACF;IADE,6GACF;IAGE,0DACF;IADE,4GACF;IAC+B,0DAAkD;IAAlD,kIAAkD;;;IAKnF,iEAGM;;;AC7EL,MAAM,2BAA2B;IAUtC,YAAoB,QAA0B;QAA1B,aAAQ,GAAR,QAAQ,CAAkB;QAT9C,eAAU,GAAiB,EAAE,CAAC;QAE9B,iBAAY,GAAG,CAAC,CAAC,CAAC;QAClB,cAAS,GAAG,EAAE,CAAE;QAEhB,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC4B,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,gBAAgB,CAAC,eAAuB,EAAE,IAAY,EAAE,QAAgB;QACtE,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,IAAI,eAAe,EAAE;YACnB,MAAM,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC;SACvC;QAED,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,kBAAkB;QAChB,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;aAC3B,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC;YAC5C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAE,IAAI,CAAC;IAC9B,CAAC;IAED,kBAAkB,CAAC,SAAsB,EAAE,KAAK,GAAC,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;;sGA1EU,2BAA2B;yHAA3B,2BAA2B;QDPxC,yEAAsB;QACpB,yEAAsB;QACpB,yEAA8B;QAC5B,2EAKE;QADA,kMAAuB;QAJzB,4DAKE;QACF,yEAAgC;QAC9B,4EAIC;QADC,mJAAS,qBAAiB,IAAC;QAE3B,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,yEAAsB;QACpB,yFAKC;QADC,gLAAc,4BAAwB,IAAC;QACxC,4DAAsB;QACzB,4DAAM;QAER,yEAAsB;QAClB,0EAAsB;QACpB,sEAAI;QAAC,gFAAmB;QAAA,4DAAK;QAC7B,yEAAuB;QACtB,uHAiBM;;QACP,4DAAK;QAEL,2EAAkB;QAChB,6EACA;QAAA,8EAAgD;QAAxC,4JAAU,gCAA4B,IAAC;QAC7C,gIAES;QACX,4DAAS;QACX,4DAAM;QAER,4DAAM;QACN,0EAAsB;QACpB,2HAcM;QAEN,0HAGM;QACR,4DAAM;QACR,4DAAM;QAtFR,4DAAsB;;QAOd,0DAAuB;QAAvB,kFAAuB;QAkBzB,0DAAmB;QAAnB,4EAAmB;QAYc,0DAKrB;QALqB,+PAKrB;QAeiB,0DAAY;QAAZ,kFAAY;QAQnC,0DAAsB;QAAtB,sFAAsB;QAgBtB,0DAAuB;QAAvB,uFAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IExD5B,yEAYE;IADC,+aAAsC;IAEtC,uDAGF;IAAA,4DAAK;;;;;IANH,gGAAkC;IAGlC,0DAGF;IAHE,0HAGF;;;IAME,6EAAwD;IACtD,uDACF;IAAA,4DAAS;;;IAF8B,4EAAgB;IACrD,0DACF;IADE,mFACF;;;IAMJ,sEAA4B;IAC1B,qEAAI;IAAC,0EAAc;IAAA,4DAAK;IACxB,sEAAK;IACH,wEAAO;IAAA,yEAAQ;IAAA,wEAAa;IAAA,4DAAS;IAAA,4DAAQ;IAAC,uDAChD;IAAA,4DAAM;IACN,sEAAK;IACH,wEAAO;IAAA,0EAAQ;IAAC,yEAAY;IAAA,4DAAS;IAAA,4DAAQ;IAC7C,wDACF;IAAA,4DAAM;IACN,uEAAK;IACH,yEAAO;IAAA,0EAAQ;IAAC,wEAAW;IAAA,4DAAS;IAAA,4DAAQ;IAC5C,wDACF;IAAA,4DAAM;IAEN,yEAA8E;IAC5E,kEACF;IAAA,4DAAI;IACN,4DAAM;;;IAd4C,0DAChD;IADgD,4GAChD;IAGE,0DACF;IADE,2GACF;IAGE,0DACF;IADE,0GACF;IAE+B,0DAA8C;IAA9C,8HAA8C;;;IAK/E,sEAA6B;IAC3B,gEAAM;IACN,oEAAG;IAAA,+FAAoC;IAAA,4DAAI;IAC7C,4DAAM;;;ACrEL,MAAM,0BAA0B;IAYrC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAVlD,aAAQ,GAAe,EAAE,CAAC;QAE1B,iBAAY,GAAG,CAAC,CAAC,CAAC;QAClB,cAAS,GAAG,EAAE,CAAE;QAEhB,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEgC,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB,CAAC,eAAuB,EAAE,IAAY,EAAE,QAAgB;QACtE,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,IAAI,eAAe,EAAE;YACnB,MAAM,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC;SACvC;QAED,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,gBAAgB;QACd,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC;aACjC,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC;YAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC;IAC5B,CAAC;IAED,gBAAgB,CAAC,OAAoB,EAAE,KAAK,GAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;;oGA5EU,0BAA0B;wHAA1B,0BAA0B;QDRvC,yEAAsB;QACpB,yEAAsB;QACpB,yEAA8B;QAC5B,2EAKE;QADA,iMAAuB;QAJzB,4DAKE;QACF,yEAAgC;QAC9B,4EAIC;QADC,kJAAS,qBAAiB,IAAC;QAE3B,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,yEAAsB;QAClB,yEAAsB;QACpB,qEAAI;QAAC,8EAAiB;QAAA,4DAAK;QAC3B,yEAAuB;QACtB,sHAgBM;;QACP,4DAAK;QAEL,0EAAkB;QAChB,6EACA;QAAA,8EAAgD;QAAxC,2JAAU,gCAA4B,IAAC;QAC7C,+HAES;QACX,4DAAS;QACX,4DAAM;QAER,4DAAM;QACN,0EAAsB;QACpB,0HAiBM;QAEN,yHAGM;QAOR,4DAAM;QACR,4DAAM;QArFR,4DAAsB;;QAOd,0DAAuB;QAAvB,kFAAuB;QAqBM,0DAKnB;QALmB,6PAKnB;QAciB,0DAAY;QAAZ,kFAAY;QAQnC,0DAAoB;QAApB,oFAAoB;QAmBpB,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IErCvB,yEAYC;IADC,kaAAgC;IAEhC,uDACF;IAAA,4DAAK;;;;;IAJH,gGAAkC;IAGlC,0DACF;IADE,4FACF;;;IAME,6EAAwD;IACtD,uDACF;IAAA,4DAAS;;;IAF8B,4EAAgB;IACrD,0DACF;IADE,mFACF;;;IAMJ,sEAA0B;IACxB,qEAAI;IAAC,iEAAK;IAAA,4DAAK;IACf,sEAAK;IACH,wEAAO;IAAA,yEAAQ;IAAA,qEAAU;IAAA,4DAAS;IAAA,4DAAQ;IAAC,uDAC7C;IAAA,4DAAM;IACN,sEAAK;IACH,wEAAO;IAAA,0EAAQ;IAAA,qEAAS;IAAA,4DAAS;IAAA,4DAAQ;IACzC,wDACF;IAAA,4DAAM;IAEN,yEAAwE;IACtE,kEACF;IAAA,4DAAI;IACN,4DAAM;;;IAVyC,0DAC7C;IAD6C,uGAC7C;IAGE,0DACF;IADE,uGACF;IAE+B,0DAAwC;IAAxC,wHAAwC;;;IAKzE,sEAA0B;IACxB,gEAAM;IACN,oEAAG;IAAA,uGAA4C;IAAA,4DAAI;IACrD,4DAAM;;;AC3EP,MAAM,sBAAsB;IAYjC,YAAoB,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;QAV7C,UAAK,GAAW,EAAE,CAAC;QAEnB,iBAAY,GAAG,CAAC,CAAC,CAAC;QAClB,aAAQ,GAAG,EAAE,CAAC;QAEd,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAE6B,CAAC;IAElD,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,gBAAgB,CAAC,UAAkB,EAAE,IAAY,EAAE,QAAgB;QACjE,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,IAAI,UAAU,EAAE;YACd,MAAM,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;SACjC;QAED,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAGD,aAAa;QACX,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE9E,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC;aAC9B,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC;IACzB,CAAC;IAED,aAAa,CAAC,IAAiB,EAAE,KAAK,GAAC,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;;4FA9EU,sBAAsB;oHAAtB,sBAAsB;QDRnC,yEAAsB;QAClB,yEAAsB;QACpB,yEAA8B;QAC5B,2EAKE;QADA,4LAAsB;QAJxB,4DAKE;QACF,yEAAgC;QAC9B,4EAIC;QADC,8IAAS,oBAAgB,IAAC;QAE1B,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,yEAAuB;QACrB,yFAKC;QADC,2KAAc,4BAAwB,IAAC;QACxC,4DAAsB;QACzB,4DAAM;QAEN,sEAAK;QACH,wEAAyC;QAAA,wEAAY;QAAA,4DAAI;QAC3D,4DAAM;QAEJ,0EAAsB;QACpB,sEAAI;QAAC,2EAAc;QAAA,4DAAK;QACxB,0EAAuB;QACrB,mHAcK;;QACP,4DAAK;QAEL,2EAAkB;QAChB,6EACA;QAAA,8EAAgD;QAAxC,uJAAU,gCAA4B,IAAC;QAC7C,2HAES;QACX,4DAAS;QACX,4DAAM;QAER,4DAAM;QACN,0EAAsB;QACpB,sHAaM;QAEN,qHAGM;QAER,4DAAM;QACR,4DAAM;;QA/EA,0DAAsB;QAAtB,iFAAsB;QAkBxB,0DAAmB;QAAnB,4EAAmB;QAeW,0DAKhB;QALgB,0PAKhB;QAYe,0DAAY;QAAZ,kFAAY;QAQnC,0DAAmB;QAAnB,iFAAmB;QAenB,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;IEtExB,qEAAqC;IACjC,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,4EAA4F;IAA5B,gYAA2B;IACvF,qEAAmD;IACvD,4DAAS;IAET,6EAAmG;IAAjC,sYAAgC;IAC9F,sEAAoD;IACxD,4DAAS;IACb,4DAAK;IACT,4DAAK;;;IAjBG,0DACJ;IADI,oGACJ;IAEI,0DACJ;IADI,yGACJ;IAEI,0DACJ;IADI,oGACJ;;ACRL,MAAM,qBAAqB;IAKhC,YAAoB,cAA8B,EAAU,MAAe;QAAvD,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAS;QACzE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAChD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,OAAiB;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,aAAa,CAAC,SAAiB;QAC7B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,CACpD,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CACzB,CAAC;IACJ,CAAC;;0FA9BU,qBAAqB;mHAArB,qBAAqB;QDZlC,sEAAK;QACD,qEAAI;QAAC,oEAAQ;QAAA,4DAAK;QACtB,4DAAM;QAEF,2EAAoC;QAChC,qEAAI;QACA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,qEAAI;QAAA,8EAAmB;QAAA,4DAAK;QAC5B,qEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,iEAAS;QACb,4DAAK;QACL,kHAmBK;QACT,4DAAQ;QACR,0EAAmB;QACf,6EAAiF;QAC7E,sEAAmD;QACvD,4DAAS;QACb,4DAAM;;QAzBsB,2DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;IEGnC,qEAAyD;IACrD,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,6EAAsG;IAAtC,+ZAAqC;IACjG,sEAAmD;IACvD,4DAAS;IAET,6EAA6G;IAA3C,oaAA0C;IACxG,sEAAoD;IACxD,4DAAS;IACb,4DAAK;IACT,4DAAK;;;IA1BG,0DACJ;IADI,uGACJ;IAEI,0DACJ;IADI,yGACJ;IAEI,0DACJ;IADI,iHACJ;IAEI,0DACJ;IADI,uGACJ;IAEI,0DACJ;IADI,sHACJ;IAEI,0DACJ;IADI,wHACJ;;ACrBL,MAAM,+BAA+B;IAK1C,YAAoB,wBAAmD,EAAU,MAAe;QAA5E,6BAAwB,GAAxB,wBAAwB,CAA2B;QAAU,WAAM,GAAN,MAAM,CAAS;QAC9F,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,wBAAwB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CACvE,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,QAAQ,CAAC,iBAAoC;QAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,EAAE,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,uBAAuB,CAAC,mBAA2B;QACjD,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAClF,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,CACnC,CAAC;IACJ,CAAC;;8GA9BU,+BAA+B;6HAA/B,+BAA+B;QDX5C,sEAAK;QACD,qEAAI;QAAC,+EAAoB;QAAA,4DAAK;QAClC,4DAAM;QAEF,2EAAoC;QAChC,qEAAI;QACA,qEAAI;QAAC,mEAAO;QAAA,4DAAK;QACjB,qEAAI;QAAC,qEAAS;QAAA,4DAAK;QACnB,qEAAI;QAAC,+EAAkB;QAAA,4DAAK;QAC5B,sEAAI;QAAC,oEAAO;QAAA,4DAAK;QACjB,sEAAI;QAAC,qFAAwB;QAAA,4DAAK;QAClC,sEAAI;QAAC,uFAA0B;QAAA,4DAAK;QACpC,iEAAS;QACb,4DAAK;QACL,4HA4BK;QACT,4DAAQ;QACR,0EAAmB;QACf,6EAAiF;QAC7E,sEAAmD;QACvD,4DAAS;QACb,4DAAM;;QAlCgC,2DAAqB;QAArB,2FAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;IEFvD,qEAAyC;IAErC,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,4EAA8F;IAA9B,sYAA6B;IACzF,qEAAmD;IACvD,4DAAS;IAET,4EAAqG;IAAnC,2YAAkC;IAChG,qEAAoD;IACxD,4DAAS;IACb,4DAAK;IACT,4DAAK;;;IAdG,0DACJ;IADI,kGACJ;IAEI,0DACJ;IADI,iGACJ;;ACRL,MAAM,wBAAwB;IAInC,YAAoB,gBAAkC,EAAU,MAAc;QAA1D,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC5E,IAAI,CAAC,aAAa,EAAE,CAAC;IAAE,CAAC;IAE1B,QAAQ;QACN,IAAI,CAAC,aAAa;IACpB,CAAC;IACD,aAAa;QACX,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CACpD,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,QAAQ,CAAC,SAAqB;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,eAAe,CAAC,WAAoB;QAClC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,SAAS,CAC1D,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAC3B,CAAC;IACJ,CAAC;;gGA1BU,wBAAwB;sHAAxB,wBAAwB;QDVrC,sEAAK;QACD,qEAAI;QAAC,sEAAU;QAAA,4DAAK;QACxB,4DAAM;QAEF,2EAAoC;QAChC,qEAAI;QAEA,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QAEvB,4DAAK;QACL,mHAiBK;QACT,4DAAQ;QACR,0EAAmB;QACf,6EAAiF;QAC7E,sEAAmD;QACvD,4DAAS;QACb,4DAAM;;QAvBwB,0DAAa;QAAb,mFAAa;;;;;;;;;;;;;;;;;;;;;;AEVsC;;;;;;;ICarE,sEAAwC;IAAC,qEAAS;IAAA,4DAAM;;;IACxD,sEAAyC;IACvC,mGACF;IAAA,4DAAM;;;IACN,sEAAyC;IACvC,mGACF;IAAA,4DAAM;;;IAPV,yEAAqE;IACjE,wHAAwD;IACxD,wHAEM;IACN,wHAEM;IACV,4DAAM;;;IAPI,0DAAgC;IAAhC,mGAAgC;IAChC,0DAAiC;IAAjC,oGAAiC;IAGjC,0DAAiC;IAAjC,oGAAiC;;;IAgBvC,sEAAwC;IAAA,qEAAU;IAAA,4DAAM;;;IACxD,sEAAyC;IACvC,6HACF;IAAA,4DAAM;;;IACN,sEAAyC;IACvC,6HACF;IAAA,4DAAM;;;IAPV,yEAAqE;IACjE,yHAAwD;IACxD,yHAEM;IACN,yHAEM;IACV,4DAAM;;;IAPI,0DAAgC;IAAhC,mGAAgC;IAChC,0DAAiC;IAAjC,oGAAiC;IAGjC,0DAAiC;IAAjC,oGAAiC;;;AD1BhD,MAAM,qBAAqB;IAahC,YAAoB,WAAyB,EACnC,WAAwB,EACxB,QAAkB,EAClB,MAAc;QAHJ,gBAAW,GAAX,WAAW,CAAc;QACnC,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QAdxB,SAAI,GAAS;YACX,EAAE,EAAE,CAAC;YACL,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;SAChB,CAAC;QACF,YAAO,GAAG,GAAG,CAAC;QAEd,cAAS,GAAG,KAAK,CAAC;QAClB,aAAQ,GAAG,GAAG,CAAC;QAMX,IAAI,CAAC,IAAI,CAAC;IACd,CAAC;IAED,QAAQ;QACN,iBAAiB;QACjB,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;QAExE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE;gBACR,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;QACH,uBAAuB;IAEzB,CAAC;IAED,OAAO;QACL,oCAAoC;QACpC,oCAAoC;QACpC,qDAAqD;QACnD,kDAAkD;QAClD,0BAA0B;QAC5B,KAAK;IACP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;aAC/C,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAI,gCAAgC,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;0FA9EU,qBAAqB;mHAArB,qBAAqB;QCZlC,yEAAuB;QACnB,0EAAiD;QAAxB,iJAAY,cAAU,IAAC;QAE3C,yEAAwB;QACrB,2EAAsB;QAAC,qEAAS;QAAA,4DAAQ;QACxC,2EAOE;QAJF,gMAA6B;QAH7B,4DAOE;QACF,iHAQM;QACV,4DAAM;QACL,yEAAwB;QACrB,2EAAsB;QAAC,qEAAS;QAAA,4DAAQ;QACxC,4EAOE;QAJF,iMAA6B;QAH7B,4DAOE;QACF,mHAQM;QACV,4DAAM;QAEV,6EAGuB;QAAvB,8IAAS,gBAAY,IAAC;QAAE,sFAAyB;QAAA,4DAAS;QACtD,qEAAG;QAAC,wDAAW;QAAA,4DAAI;QAE3B,4DAAO;QACP,4DAAM;;QAlDI,0DAAkB;QAAlB,+EAAkB;QAOhB,0DAA6B;QAA7B,sFAA6B;QAKvB,0DAAoC;QAApC,wGAAoC;QAe1C,0DAA6B;QAA7B,sFAA6B;QAKvB,0DAAoC;QAApC,wGAAoC;QAe1C,0DAAW;QAAX,sFAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;IC9Bf,qEAAqC;IACjC,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IACA,6EAA4F;IAA5B,iYAA2B;IACvF,sEAAmD;IACvD,4DAAS;IAET,6EAAmG;IAAjC,sYAAgC;IAC9F,sEAAoD;IACxD,4DAAS;IACb,4DAAK;IACT,4DAAK;;;IA5CG,0DACJ;IADI,iGACJ;IAEI,0DACJ;IADI,gGACJ;IAEI,0DACJ;IADI,+FACJ;IAEI,0DACJ;IADI,kGACJ;IAEI,0DACJ;IADI,4FACJ;IAEI,0DACJ;IADI,2FACJ;IAEI,0DACJ;IADI,uGACJ;IAEI,0DACJ;IADI,kGACJ;IAEI,0DACJ;IADI,sGACJ;IAEI,0DACJ;IADI,oGACJ;IAEI,0DACJ;IADI,iGACJ;IAEI,0DACJ;IADI,sGACJ;;AC5CL,MAAM,qBAAqB;IAKhC,YAAoB,cAA8B,EAAU,MAAc;QAAtD,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACxE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAChD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,OAAiB;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,aAAa,CAAC,SAAkB;QAC9B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,CACpD,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CACzB,CAAC;IACJ,CAAC;;0FA9BU,qBAAqB;mHAArB,qBAAqB;QDXlC,sEAAK;QACD,qEAAI;QAAC,oEAAQ;QAAA,4DAAK;QACtB,4DAAM;QAEF,2EAAoC;QAChC,qEAAI;QACA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,qEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAC1B,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC/B,4DAAK;QACL,mHA8CK;QACT,4DAAQ;QACR,0EAAmB;QACf,6EAAiF;QAC7E,sEAAmD;QACvD,4DAAS;QACb,4DAAM;;QApDsB,2DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;AEZpC,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;4GAAd,cAAc;QCP3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICWT,gFAAgF;;;IAChF,8EAA0E;;;IAC1E,kFAAqF;;;IAP7F,sEAAkD;IAE9C,yEAAwB;IACtB,yEAAiB;IACf,wEAAyB;IACzB,4IAAgF;IAChF,wIAA0E;IAC1E,gJAAqF;IACvF,4DAAM;IACR,4DAAM;IACN,yEAAoB;IAClB,2EAEgB;IAClB,4DAAM;IACV,4DAAM;;;IAVuB,0DAAoC;IAApC,uGAAoC;IACtC,0DAAkC;IAAlC,qGAAkC;IAC9B,0DAAqC;IAArC,wGAAqC;;;IAUlE,uEAAuB;;ACdpB,MAAM,YAAY;IAIxB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAF3B,UAAK,GAAW,EAAE,CAAC;IAEW,CAAC;IAEtC,gBAAgB;IAChB,qDAAqD;IAErD,gBAAgB;IAChB,qCAAqC;IACrC,2BAA2B;IAC3B,YAAY;IACZ,KAAK;IAEL,yDAAyD;IACzD,+CAA+C;IAC/C,IAAI;IACJ,QAAQ;QACP,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAExC,CAAC;IACD,cAAc;QACb,IAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC;YACtC,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SAC5C;aACG;YACH,OAAO,KAAK,CAAC;SACb;IAEF,CAAC;;wEA/BW,YAAY;0GAAZ,YAAY;QDJzB,yEAA6B;QAC3B,wGAeM;QACN,oMAEc;QAEhB,4DAAM;;;QApBE,0DAA4B;QAA5B,0FAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AELsB;AACQ;AACxB;AACqC;AACJ;AACtB;AAEN;AACiB;AACjB;AACuC;AACpB;AACT;AACQ;AACuC;AACV;AACF;AACG;AACH;AACN;AACtF,4EAA4E;AACb;AACqC;AACpB;AACgC;AAChC;AACpB;AAC0B;AACf;AACe;AACT;AACY;AAChC;AACH;AAC0B;AACY;AACG;AACE;AACS;AACpB;AACgC;AACpC;AACM;AACjC;AAC+C;AACY;AACT;AACM;AACY;AACT;AACvB;AACY;AACT;AAC6B;AACY;AACT;AACnC;AACY;AACN;AACoD;AACpF;AACL;AACV;AACsC;AACN;AACe;AACH;AACM;AACS;AACH;AACf;AACN;AACe;AAC/C;AAC6B;AACY;AACT;AACgC;AAErC;;;AAuGzE,MAAM,SAAS;;kEAAT,SAAS;uGAAT,SAAS,cAFR,wDAAY;4GApBb;QACT,2EAAgB;QAChB,sEAAc;QACd,4DAAW;QACX,+DAAY;KACb,YAEQ;YACP,qEAAa;YACb,yEAAgB;YAChB,wDAAW;YACb,gEAAmB;YACjB,0FAAuB;YACzB,6DAAoB,EAAE;YACtB,mEAAgB;YACd,+DAAmB;YACnB,kEAAS;YACT,0DAAY;SACb;oIAIU,SAAS,mBAnGlB,wDAAY;QACZ,+FAAuB;QACvB,2EAAiB;QACjB,kEAAc;QACd,0EAAe;QACf,kGAAsB;QACtB,iHAA6B;QAC7B,uGAAwB;QACxB,qGAAyB;QACzB,yGAA0B;QAC1B,sGAAyB;QACzB,gGAAuB;QACvB,sBAAsB;QACtB,yEAAgB;QAChB,8GAA2B;QAC3B,0FAAqB;QACrB,0HAA+B;QAC/B,0FAAqB;QACrB,sEAAe;QACf,gGAAuB;QACvB,iFAAkB;QAClB,gGAAuB;QACvB,uFAAoB;QACpB,mGAAwB;QACxB,mEAAc;QACd,gEAAa;QACb,0FAAqB;QACrB,sGAAyB;QACzB,yGAA0B;QAC1B,4FAAoB;QACpB,2GAA0B;QAC1B,oHAA6B;QAC7B,gGAAuB;QACvB,gIAAiC;QACjC,gHAA2B;QAC3B,4HAA+B;QAC/B,mHAA4B;QAC5B,yHAA8B;QAC9B,qIAAkC;QAClC,4HAA+B;QAC/B,yHAA8B;QAC9B,qIAAkC;QAClC,4HAA+B;QAC/B,qGAAwB;QACxB,iHAA4B;QAC5B,wGAAyB;QACzB,qGAAwB;QACxB,iHAA4B;QAC5B,wGAAyB;QACzB,qGAAwB;QACxB,iHAA4B;QAC5B,2GAA0B;QAC1B,+JAA0C;QAC1C,wIAAmC;QACnC,iJAAsC;QACtC,qIAAkC;QAClC,qGAAwB;QACxB,2GAA0B;QAC1B,uGAAwB;QACxB,iHAA4B;QAC5B,kGAAuB;QACvB,4FAAqB;QACrB,2GAA0B;QAC1B,wGAAyB;QACzB,8GAA2B;QAC3B,uHAA8B;QAC9B,oHAA6B;QAC7B,qGAAwB;QACxB,+FAAsB;QACtB,8GAA2B;QAC3B,4FAAqB;QACrB,wGAAyB;QACzB,+FAAsB;QACtB,+HAAkC;QAClC,0FAAqB,aAWrB,qEAAa;QACb,yEAAgB;QAChB,wDAAW;QACb,gEAAmB;QACjB,0FAAuB,EAAE,uDAE3B,mEAAgB;QACd,+DAAmB;QACnB,kEAAS;QACT,0DAAY;;;;;;;;;;;;;;;;;;AC3KT,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;6GAAf,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;ACGrB,MAAM,oBAAoB;IAE/B,YACU,qBAA4C,EAC9C,MAAqB,EACrB,MAAc;QAFZ,0BAAqB,GAArB,qBAAqB,CAAuB;QAC9C,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;IAClB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7B,KAAK,CAAC,mCAAmC,CAAC;IAC5C,CAAC;;wFAfU,oBAAoB;kHAApB,oBAAoB;QCT/B,sEAAK;QACH,yEAAsD;QACpD,uEAAiC;QAAA,sEAAW;QAAA,4DAAI;QAChD,yEAAgC;QAC9B,wEAAqB;QACnB,uEAAoD;QAAC,gFAAoB;QAAA,4DAAI;QAC/E,4DAAK;QAEL,qEAAI;QACF,uEAA2D;QAAC,wFAA2B;QAAA,4DAAI;QAC7F,4DAAK;QAEL,yEAAqB;QACnB,wEAA6C;QAAA,yEAAa;QAAA,4DAAI;QAChE,4DAAK;QAEL,sEAAI;QACF,wEAA+C;QAAA,+EAAmB;QAAA,4DAAI;QACxE,4DAAK;QAEL,yEAAqB;QACnB,wEAA0C;QAAC,sEAAS;QAAA,4DAAI;QAC1D,4DAAK;QAEL,sEAAI;QACF,wEAAkD;QAAC,6EAAgB;QAAA,4DAAI;QACzE,4DAAK;QAkBL,yEAAqB;QACnB,yEAA4C;QAAA,uEAAW;QAAA,4DAAI;QAC7D,4DAAK;QACL,yEAAqB;QACnB,yEAA8C;QAAC,+EAAkB;QAAA,4DAAI;QACvE,4DAAK;QAEL,yEAAqB;QACnB,yEAAuC;QAAA,kEAAM;QAAA,4DAAI;QACnD,4DAAK;QACJ,yEAAqB;QACpB,yEAA8C;QAAC,yEAAY;QAAA,4DAAI;QACjE,4DAAK;QACL,yEAAqB;QACnB,yEAAyC;QAAA,oEAAQ;QAAA,4DAAI;QACvD,4DAAK;QACJ,yEAAqB;QACpB,yEAAgD;QAAC,4EAAe;QAAA,4DAAI;QACtE,4DAAK;QACL,yEAAqB;QACnB,yEAA8C;QAAC,wEAAW;QAAA,4DAAI;QAChE,4DAAK;QACL,yEAAqB;QACnB,yEAAuC;QAAnB,wIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAI;QACnD,4DAAK;QACP,4DAAM;QACR,4DAAM;QAEN,2EAA4B;QAC1B,4EAA+B;QACjC,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DC,MAAM,wBAAwB;IAEnC,YAAoB,MAAc,EAAS,WAAiC,EAAS,KAAoB,EAAS,QAAiB;QAA/G,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAAS,UAAK,GAAL,KAAK,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAS;IAC/H,CAAC;IAGL,QAAQ;IAER,CAAC;IAED,MAAM;QACN,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAE3B,CAAC;IACA,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;gGAhBU,wBAAwB;sHAAxB,wBAAwB;QCbrC,sEAAK;QACH,yEAA2D;QAC3D,yEAA6B;QAC3B,uEAAwB;QAAA,oEAAS;QAAA,4DAAI;QAGrC,wEAA+B;QAC7B,wEAAqB;QACnB,uEAA0D;QAAA,gEAAK;QAAA,4DAAI;QACrE,4DAAK;QACP,4DAAK;QAEL,wEAA+B;QAC3B,yEAAqB;QACnB,wEAA6D;QAAA,oEAAQ;QAAA,4DAAI;QAC3E,4DAAK;QACP,4DAAK;QAGL,yEAA+B;QAC7B,yEAAqB;QACnB,wEAA4D;QAAA,mEAAO;QAAA,4DAAI;QACzE,4DAAK;QACP,4DAAK;QAIP,yEAA+B;QAC3B,yEAAqB;QACnB,wEAA0D;QAAA,mEAAO;QAAA,4DAAI;QACvE,4DAAK;QACT,4DAAK;QACL,yEAA+B;QAC7B,yEAAqB;QACnB,wEAAuC;QAAnB,4IAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAI;QACnD,4DAAK;QACP,4DAAK;QACP,4DAAM;QACN,4DAAM;QACR,4DAAM;;QA/BsB,0DAAqC;QAArC,6IAAqC;QAMnC,0DAAwC;QAAxC,6IAAwC;QAOxC,0DAAuC;QAAvC,6IAAuC;QAQvC,0DAAqC;QAArC,6IAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB5D,MAAM,sBAAsB;IAEjC,YACQ,qBAA4C,EAC5C,MAAqB,EACrB,MAAc;QAFd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;IACnB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,MAAM;QACL,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;IAErC,CAAC;;4FAdW,sBAAsB;oHAAtB,sBAAsB;QCTnC,yEAA2D;QAEvD,uEAAwB;QAAA,wEAAa;QAAA,4DAAI;QAEzC,wEAA+B;QAC7B,wEAAqB;QACnB,uEAAuD;QAAA,yEAAc;QAAA,4DAAI;QAC3E,4DAAK;QACL,wEAAqB;QACnB,uEAAgD;QAAA,iFAAsB;QAAA,4DAAI;QAC5E,4DAAK;QACL,yEAAqB;QACnB,wEAAgD;QAAA,kFAAsB;QAAA,4DAAI;QAC5E,4DAAK;QACL,yEAAqB;QACnB,wEAA0D;QAAA,wEAAY;QAAA,4DAAI;QAC5E,4DAAK;QACL,yEAAqB;QACnB,wEAA4D;QAAA,uEAAW;QAAA,4DAAI;QAC7E,4DAAK;QACL,yEAAqB;QACnB,wEAAqD;QAAA,iEAAK;QAAA,4DAAI;QAChE,4DAAK;QACL,yEAAqB;QACnB,wEAAwD;QAAA,mEAAO;QAAA,4DAAI;QACrE,4DAAK;QACP,4DAAK;QAEL,yEAA+B;QAC7B,yEAAqB;QACnB,wEAAuC;QAAnB,0IAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAI;QACnD,4DAAK;QACP,4DAAK;QACP,4DAAM;;QA3BoB,0DAAiC;QAAjC,6IAAiC;QAGjC,0DAA2B;QAA3B,6IAA2B;QAG3B,0DAA2B;QAA3B,6IAA2B;QAG3B,0DAAoC;QAApC,8IAAoC;QAGpC,0DAAsC;QAAtC,8IAAsC;QAGtC,0DAAgC;QAAhC,8IAAgC;QAGhC,0DAAmC;QAAnC,8IAAmC;;;;;;;;;;;;;;;;;;;;;ACzBc;AAElC;;;;AAI3C,MAAM,OAAO,GAAG,4CAA4C,CAAC;AAKtD,MAAM,cAAc;IAIzB,YAAoB,IAAgB,EAAS,WAAiC;QAA1D,SAAI,GAAJ,IAAI,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAFtE,SAAI,GAAC,aAAa;QA+BhB,mBAAc,GAAG,IAAI,yCAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IA/B2B,CAAC;IAGjF,MAAM,CAAC,MAAW;QAChB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAChI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,EAAE,MAAM,EAAG,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAEhE,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAChI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC9D,CAAC;IAEC,MAAM,CAAC,IAAS;QACd,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACzD,CAAC;IAEF,MAAM,CAAC,EAAU,EAAE,IAAS;QAC1B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAEA,MAAM,CAAC,EAAU;QACf,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAChI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAChE,CAAC;IAMA,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IACD,SAAS,CAAC,MAAc;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC1E,CAAC;IACD,UAAU,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACzE,CAAC;IACD,YAAY,CAAC,EAAW;QACtB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;IACD,UAAU;QAER,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACrE,CAAC;;4EArDU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACNuB;AAEO;;;;;;AAQ3C,MAAM,0BAA0B;IAWrC,YAAoB,iBAAoC,EAAU,KAAqB,EAAU,QAAkB,EAAU,MAAe;QAAxH,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAS;QAT5I,eAAU,GAAe,IAAI,0DAAU,CAAC;YACtC,IAAI,EAAE,EAAE;YACR,SAAS,EAAG,EAAE;YACd,OAAO,EAAE,EAAE;YACX,aAAa,EAAG,CAAC;SAClB,CAAC,CAAC;QAEH,SAAI,GAAW,KAAK,CAAC;IAE2H,CAAC;IAEjJ,QAAQ;QACN,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACpC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,yDAAS,CAAC,CAAC,MAAe,EAAE,EAAE,CACrD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACpD,SAAS,CAAC,GAAG,CAAC,EAAE;gBACf,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAEO,GAAG;QACT,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC;aACpD,SAAS,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;YACxC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC;aACrD,SAAS,CAAC,UAAU,CAAC,EAAE;YACtB,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;YACxC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;;oGA7CU,0BAA0B;wHAA1B,0BAA0B;QCbvC,sEAAK;QACD,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACxB,4DAAM;QAEN,sEAAK;QACD,uEAAM;QACF,yEAAwB;QACpB,2EAAgD;QAAC,kEAAM;QAAA,4DAAQ;QAC/D,2EAAoH;QAAjG,uMAA6B;QAAhD,4DAAoH;QACxH,4DAAM;QACN,gEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,yEAAY;QAAA,4DAAQ;QACrE,4EAA+H;QAA5G,6MAAkC;QAArD,4DAA+H;QACnI,4DAAM;QACN,iEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,uEAAU;QAAA,4DAAQ;QACnE,4EAA2H;QAAxG,2MAAgC;QAAnD,4DAA2H;QAC/H,4DAAM;QACN,iEAAK;QACT,4DAAO;QACX,4DAAM;QACN,uEAAK;QACD,6EAAiD;QAAjB,mJAAS,UAAM,IAAC;QAAC,8DAAE;QAAA,4DAAS;QAC5D,6EAAmD;QAAnB,mJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QAlBuB,0DAA6B;QAA7B,wFAA6B;QAK7B,0DAAkC;QAAlC,6FAAkC;QAKlC,0DAAgC;QAAhC,2FAAgC;;;;;;;;;;;;;;;;;;;;;ACjBc;AAClC;;;;AAI3C,MAAM,OAAO,GAAG,wCAAwC,CAAC;AAMlD,MAAM,iBAAiB;IAE5B,YAAoB,IAAgB,EAAS,WAAkC;QAA3D,SAAI,GAAJ,IAAI,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAuB;QAqCvE,mBAAc,GAAG,IAAI,yCAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAvC8B,CAAC;IAEpF,MAAM,CAAC,MAAW;QAChB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,EAAE,MAAM,EAAE,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,CAAC,IAAS;QACd,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,IAAS;QAC1B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC7H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,SAAS;QACP,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACtD,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,SAAS,IAAI,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAMD,cAAc;QACZ,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,OAAO,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACrE,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,EAAE,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC/D,CAAC;IAED,aAAa,CAAC,UAAsB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAa,OAAO,EAAE,UAAU,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAChF,CAAC;IAED,cAAc,CAAC,UAAsB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,OAAO,EAAE,UAAU,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC/E,CAAC;IAED,gBAAgB,CAAC,EAAU,EAAE,IAAS;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,gBAAgB,CAAC,EAAW;QAC1B,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,EAAE,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;;kFAvEU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB,mBAHhB,MAAM;;;;;;;;;;;;;;;;;;;;ACRuB;AACkC;;;;AAE7E,MAAM,OAAO,GAAG,wCAAwC,CAAC;AACzD,MAAM,QAAQ,GAAC,kCAAkC,CAAC;AAE3C,MAAM,WAAW;IAItB,YAAoB,IAAgB,EAAS,WAAiC;QAA1D,SAAI,GAAJ,IAAI,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAFtE,SAAI,GAAC,WAAW;QAId,mBAAc,GAAG,IAAI,yCAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJ2B,CAAC;IAMjF,MAAM,CAAC,MAAW;QAChB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,EAAE,MAAM,EAAG,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACnE,CAAC;IAEA,GAAG,CAAC,EAAU;QACZ,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,IAAS;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,IAAS;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IACD,OAAO,CAAC,IAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACtE,CAAC;IACD,QAAQ,CAAC,IAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACrE,CAAC;IACD,UAAU,CAAC,EAAW;QACpB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;IACD,QAAQ;QAEN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACnE,CAAC;;sEAjDU,WAAW;4GAAX,WAAW,WAAX,WAAW;;;;;;;;;;;;;;;;;;;;;;;ACJmB;AAEa;;;;;;AAOjD,MAAM,6BAA6B;IAUxC,YAAoB,oBAA2C,EAAU,KAAqB,EAAU,QAAkB,EAAU,MAAe;QAA/H,yBAAoB,GAApB,oBAAoB,CAAuB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAS;QARnJ,kBAAa,GAAkB,IAAI,gEAAa,CAAC;YAC/C,YAAY,EAAG,CAAC;YAChB,YAAY,EAAG,CAAC;YAChB,WAAW,EAAE,CAAC;YACd,SAAS,EAAG,CAAC;SAAG,CAAC,CAAC;QAEpB,SAAI,GAAW,KAAK,CAAC;IAEkI,CAAC;IAExJ,QAAQ;QACN,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,yDAAS,CAAC,CAAC,MAAe,EAAE,EAAE,CACrD,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC1D,SAAS,CAAC,GAAG,CAAC,EAAE;gBACf,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;YAChC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAEO,GAAG;QACT,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC;aAC7D,SAAS,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE,CAAC;YAC3C,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC;IACJ,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC;aAC9D,SAAS,CAAC,aAAa,CAAC,EAAE;YACzB,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE,CAAC;YAC3C,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;0GA5CU,6BAA6B;2HAA7B,6BAA6B;QCZ1C,sEAAK;QACD,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QAC3B,4DAAM;QAEN,sEAAK;QACD,uEAAM;QACF,yEAAwB;QACpB,2EAAgD;QAAC,2EAAe;QAAA,4DAAQ;QACxE,2EAAwI;QAArH,qNAAwC;QAA3D,4DAAwI;QAC5I,4DAAM;QACN,gEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,4EAAe;QAAA,4DAAQ;QACxE,4EAAwI;QAArH,sNAAwC;QAA3D,4DAAwI;QAC5I,4DAAM;QACN,iEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,2EAAc;QAAA,4DAAQ;QACvE,4EAAsI;QAAnH,qNAAuC;QAA1D,4DAAsI;QAC1I,4DAAM;QACN,0EAAwB;QACpB,4EAAgD;QAAC,yEAAY;QAAA,4DAAQ;QACrE,4EAAkI;QAA/G,mNAAqC;QAAxD,4DAAkI;QACtI,4DAAM;QACN,iEAAK;QACT,4DAAO;QACX,4DAAM;QACN,uEAAK;QACD,6EAAiD;QAAjB,sJAAS,UAAM,IAAC;QAAC,8DAAE;QAAA,4DAAS;QAC5D,6EAAmD;QAAnB,sJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QAtBuB,0DAAwC;QAAxC,mGAAwC;QAKxC,0DAAwC;QAAxC,mGAAwC;QAKxC,0DAAuC;QAAvC,kGAAuC;QAIvC,0DAAqC;QAArC,gGAAqC;;;;;;;;;;;;;;;;;;;;;ACpBS;AACpC;;;;AAIzC,MAAM,OAAO,GAAG,2CAA2C,CAAC;AAKrD,MAAM,oBAAoB;IAI/B,YAAoB,IAAgB,EAAU,WAAkC;QAA5D,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAuB;QAFxE,qBAAgB,GAAG,mBAAmB,CAAC;QA6BvC,mBAAc,GAAG,IAAI,yCAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IA7B+B,CAAC;IAErF,MAAM,CAAC,MAAW;QAChB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAChE,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,CAAC,IAAS;QACd,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,IAAS;QAC1B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC7H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACjE,CAAC;IAMD,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,gBAAgB,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACtF,CAAC;IAED,gBAAgB,CAAC,EAAU;QACzB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,gBAAgB,QAAQ,CAAC;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAClE,CAAC;IAED,gBAAgB,CAAC,aAA4B;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAgB,IAAI,CAAC,gBAAgB,EAAE,aAAa,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACpG,CAAC;IAED,iBAAiB,CAAC,aAA4B;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,gBAAgB,EAAE,aAAa,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACnG,CAAC;IAED,mBAAmB,CAAC,EAAU;QAC5B,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,gBAAgB,IAAI,EAAE,EAAE,CAAC;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;;wFA3DU,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,MAAM,6BAA6B;IA2CvC,YAAoB,cAA8B,EAAU,KAAqB,EAAS,WAAiC,EAAS,MAAa,EAAS,QAAiB;QAAvJ,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAAS,WAAM,GAAN,MAAM,CAAO;QAAS,aAAQ,GAAR,QAAQ,CAAS;QAzC5K,MAAM;QACN,WAAW;QACX,mBAAmB;QACnB,oBAAoB;QACpB,cAAc;QACd,aAAa;QACb,wBAAwB;QACxB,mBAAmB;QACnB,0BAA0B;QAC1B,kBAAkB;QAClB,sBAAsB;QACtB,YAAY;QACZ,eAAe;QACf,cAAc;QACd,OAAO;QACP,kBAAkB;QAClB,oBAAoB;QACpB,qBAAqB;QACrB,YAAY;QACZ,sBAAsB;QACtB,sBAAsB;QACtB,qBAAqB;QACrB,kBAAkB;QAElB,OAAO;QACP,uBAAuB;QACvB,YAAY;QACZ,oBAAoB;QACpB,mBAAmB;QACnB,MAAM;QACN,KAAK;QACL,kBAAa,GAAiB;YAC5B,YAAY,EAAG,CAAC;YAChB,YAAY,EAAG,CAAC;YAChB,WAAW,EAAE,CAAC;YACd,SAAS,EAAG,CAAC;YACb,iBAAiB;SAClB,CAAC;IAMD,CAAC;IAEF,iBAAiB;IACjB,2EAA2E;IAC3E,+BAA+B;IAC/B,IAAI;IAGJ,QAAQ;QACN,iBAAiB;QACjB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAAC,CAAE,IAAI,CAAC,OAAO,GAAC,GAAG,CAAC;YAErE,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE,KAAI,CAAC,aAAa,GAAC,GAAG,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;QACD,2BAA2B;IAC3B,CAAC;IACH,sBAAsB;IACtB,sGAAsG;IACtG,qCAAqC;IACrC,IAAI;IAEJ,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;0GApEU,6BAA6B;2HAA7B,6BAA6B;QCd1C,sEAAK;QACH,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACzB,4DAAM;QAEN,sEAAK;QACH,uEAAM;QACF,yEAAwB;QACpB,2EAAgD;QAAC,2EAAe;QAAA,4DAAQ;QACxE,2EAA0I;QAArH,qNAAwC;QAA7D,4DAA0I;QAC9I,4DAAM;QACN,gEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,4EAAe;QAAA,4DAAQ;QACxE,4EAA0I;QAArH,sNAAwC;QAA7D,4DAA0I;QAC9I,4DAAM;QACN,iEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,2EAAc;QAAA,4DAAQ;QACvE,4EAAwI;QAAnH,qNAAuC;QAA5D,4DAAwI;QAC5I,4DAAM;QACN,0EAAwB;QACpB,4EAAgD;QAAC,yEAAY;QAAA,4DAAQ;QACrE,4EAAoI;QAA/G,mNAAqC;QAA1D,4DAAoI;QACxI,4DAAM;QACN,iEAAK;QACT,4DAAO;QACT,4DAAM;QACN,uEAAK;QACH,6EAAmD;QAAnB,sJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QArByB,0DAAwC;QAAxC,mGAAwC;QAKxC,0DAAwC;QAAxC,mGAAwC;QAKxC,0DAAuC;QAAvC,kGAAuC;QAIvC,0DAAqC;QAArC,gGAAqC;;;;;;;;;;;;;;;;;;;ACjB7D,MAAM,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ,CAAC,KAAY;QACnB,IAAI,OAAO,GAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,kBAAkB,GAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,cAAc,GAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAElD,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAEhC,CAAC;IACD,WAAW,CAAC,KAAY;QAEpB,IAAI,OAAO,GAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,kBAAkB,GAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,cAAc,GAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAElD,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAEhC,CAAC;;4FApBU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;;;;;;;;;;ACHyD;AAIvB;AAEjB;;;;;AAO9B,MAAM,qBAAqB;IAGjC,YACS,IAAgB,EAChB,eAAsC,EACtC,MAAc;QAFd,SAAI,GAAJ,IAAI,CAAY;QAChB,oBAAe,GAAf,eAAe,CAAuB;QACtC,WAAM,GAAN,MAAM,CAAQ;QALN,cAAS,GAAG,YAAY,CAAC;IAMtC,CAAC;IAEL,KAAK,CAAC,QAAe,EAAC,QAAe;QACpC,IAAI,OAAO,GAAe,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAEhF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,QAAQ,EAAC,QAAQ,EAAC,CAAC,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC;aAChH,IAAI,CAAC,mDAAG,CAAC,CAAC,GAAO,EAAC,EAAE;YACpB,IAAI,KAAK,GAAC,GAAG,CAAC;YACd,IAAI,KAAK,EAAC;gBACT,YAAY,CAAC,OAAO,CAAC,aAAa,EAAC,IAAI,CAAC,SAAS,CAAC;oBACjD,QAAQ,EAAC,QAAQ;oBACjB,KAAK,EAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC1C,KAAK,EAAC,KAAK;iBACX,CAAC,CAAC,CAAC;gBACJ,OAAO,IAAI,CAAC;aACZ;iBAAI;gBACJ,OAAO,KAAK,CAAC;aACb;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ;QACP,IAAI,WAAW,GAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,CAAC;QACxE,IAAI,KAAK,GAAE,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC;QAC5C,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,EAAC,CAAC,EAAE,CAAC;IAC1B,CAAC;IAED,MAAM;QACL,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,UAAU;QACT,IAAG,IAAI,CAAC,QAAQ,EAAE,IAAG,EAAE;YAAE,OAAO,IAAI,CAAC;;YAChC,OAAO,KAAK,CAAC;IACnB,CAAC;IAED,cAAc;QACb,IAAG,YAAY,CAAC,WAAW,EAAC;YAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SAC5C;aACG;YACH,OAAO,SAAS,CAAC;SACjB;IACF,CAAC;IAED,OAAO;QACN,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,EAAE;YACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,OAAO,EAAE,CAAC;SACV;QAED,IAAI,GAAG,GAAsB,IAAI,gEAAgB,EAAE,CAAC;QACpD,IAAI,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,OAAO,UAAU,CAAC;IACnB,CAAC;;0FA/DW,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBAFrB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;ACGZ,MAAM,cAAc;IAE1B,YAAoB,qBAA4C,EAAS,MAAc;QAAnE,0BAAqB,GAArB,qBAAqB,CAAuB;QAAS,WAAM,GAAN,MAAM,CAAQ;IACrF,CAAC;IAEH,QAAQ;IACR,CAAC;IAED,KAAK,CAAC,IAAW;QAChB,IAAI,QAAQ,GAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxC,IAAI,QAAQ,GAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,QAAgB,EAAE,EAAE;YACpB,IAAG,QAAQ,EAAC;gBACX,4EAA4E;gBAC5E,6BAA6B;gBAC7B,IAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,KAAG,cAAc,EAAE;oBACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC3B;qBAAM,IAAI,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,KAAG,YAAY,EAAE;oBAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC3B;aACD;QACF,CAAC,CAED;IAAA,CAAC;;4EA1BS,cAAc;4GAAd,cAAc;;QCd3B,yEAAqE;QACnE,6EAAgF;QAA/B,sRAAY,cAAiB,IAAC;QAC7E,2EAAU;QACR,yEAAQ;QAAA,gEAAK;QAAA,4DAAS;QAEtB,yEAA4B;QAC1B,2EAAqD;QAAA,oEAAG;QAAA,oEAAS;QAAA,4DAAI;QAAA,4DAAQ;QAC7E,0EAAsB;QACpB,uEAAiF;QACnF,4DAAM;QACR,4DAAM;QAEN,0EAA4B;QAC1B,4EAAqD;QAAA,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAAA,4DAAQ;QAC7E,0EAAsB;QACpB,uEAAoF;QACtF,4DAAM;QACR,4DAAM;QAEN,0EAAiB;QACf,sEAA4B;QAC5B,2EAAsB;QACpB,8EAA8C;QAAA,iEAAK;QAAA,4DAAS;QAC9D,4DAAM;QACR,4DAAM;QAER,4DAAW;QACb,4DAAO;QACT,4DAAM;;;;;;;;;;;;;;;;;;;;;;ACzBgD;;;;;AAS/C,MAAM,SAAS;IAIrB,YACQ,IAA2B,EAC3B,MAAc,EACb,IAAgB;QAFjB,SAAI,GAAJ,IAAI,CAAuB;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAY;QALjB,YAAO,GAAG,WAAW,CAAC;IAM1B,CAAC;IAEL,WAAW,CAAC,KAA6B;QACxC,MAAM,aAAa,GAAW,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;QACvD,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,GAAG,GAAqB,IAAI,gEAAgB,EAAE,CAAC;QAErD,IAAI,CAAC,KAAK,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACb;QAED,MAAM,IAAI,GAAG,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACpC,MAAM,KAAK,GAAa,aAAa,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAEpD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;YACjD,2CAA2C;YAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,OAAO,KAAK,CAAC;SACb;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,wBAAwB,CAAC,QAAgB;QACxC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,QAAQ,yBAAyB,CAAC;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC/D,CAAC;IAED,OAAO,CAAC,IAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACxE,CAAC;;kEAtCW,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFT,MAAM;;;;;;;;;;;;;;;;;;ACAZ,MAAM,aAAa;;0EAAb,aAAa;2GAAb,aAAa;;;;;;;;;;;;;;;;ACRnB,MAAM,MAAM;IAUf,YAAY,SAAyB;QACjC,IAAI,CAAC,EAAE,GAAE,SAAS,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAE,SAAS,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAE,SAAS,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,SAAS,GAAE,SAAS,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,OAAO,GAAE,SAAS,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,IAAI,GAAE,SAAS,CAAC,IAAI,CAAC;IAC9B,CAAC;CAGJ;;;;;;;;;;;;;;;;ACrBM,MAAM,UAAU;IAQnB,YAAY,aAAkC;QAC1C,IAAI,CAAC,EAAE,GAAE,aAAa,CAAC,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAE,aAAa,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAE,aAAa,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,OAAO,GAAE,aAAa,CAAC,OAAO,CAAC;QACpC,IAAI,CAAC,aAAa,GAAE,aAAa,CAAC,aAAa,CAAC;IACpD,CAAC;CACJ;;;;;;;;;;;;;;;;ACbM,MAAM,IAAI;IAab,YAAY,QAAsB;QAE9B,IAAI,CAAC,EAAE,GAAC,QAAQ,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAC,QAAQ,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAC,QAAQ,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAC,QAAQ,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC,QAAQ,CAAC;QACtC,4CAA4C;QACxC,wCAAwC;IAG1C,CAAC;CACJ;;;;;;;;;;;;;;;;ACzBM,MAAM,aAAa;IAQtB,yBAAyB;IAC7B;;;;;;;;;MASE;IACE,YAAY,iBAAwC;QAChD,IAAI,CAAC,YAAY,GAAC,iBAAiB,CAAC,YAAY,CAAC;QACjD,IAAI,CAAC,YAAY,GAAC,iBAAiB,CAAC,YAAY,CAAC;QACjD,IAAI,CAAC,WAAW,GAAC,iBAAiB,CAAC,WAAW,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAC,iBAAiB,CAAC,SAAS,CAAC;IAC/C,CAAC;CACJ;;;;;;;;;;;;;;;;AC1BM,MAAM,OAAO;IAOhB,YAAY,WAA4B;QACpC,IAAI,CAAC,EAAE,GAAC,WAAW,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAC,WAAW,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,kBAAkB,GAAC,WAAW,CAAC,kBAAkB,CAAC;QACvD,IAAI,CAAC,aAAa,GAAC,WAAW,CAAC,aAAa,CAAC;IAC7C,CAAC;CACR;;;;;;;;;;;;;;;;ACVM,MAAM,iBAAiB;IAW7B,YAAY,oBAA+C;QACpD,IAAI,CAAC,EAAE,GAAE,oBAAoB,CAAC,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,GAAE,oBAAoB,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAE,oBAAoB,CAAC,QAAQ,CAAC;QACnD,IAAI,CAAC,gBAAgB,GAAE,oBAAoB,CAAC,gBAAgB,CAAC;QAC9D,4CAA4C;QAC5C,wCAAwC;QACxC,0EAA0E;QAC1E,8EAA8E;IAE3E,CAAC;CACJ;;;;;;;;;;;;;;;;ACxBM,MAAM,SAAS;IAOlB,YAAY,YAA+B;QACvC,IAAI,CAAC,EAAE,GAAE,YAAY,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAE,YAAY,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAE,YAAY,CAAC,QAAQ,CAAC;QACrC,IAAI,CAAC,IAAI,GAAC,YAAY,CAAC,IAAI,CAAC;IAChC,CAAC;CAEJ;;;;;;;;;;;;;;;;ACXM,MAAM,OAAO;IAmBhB,YAAY,UAA2B;QAEzC,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,KAAK,GAAC,UAAU,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAC,UAAU,CAAC,WAAW,CAAC;QACxC,IAAI,CAAC,WAAW,GAAC,UAAU,CAAC,WAAW,CAAC;QACxC,IAAI,CAAC,cAAc,GAAC,UAAU,CAAC,cAAc,CAAC;QAC9C,IAAI,CAAC,eAAe,GAAC,UAAU,CAAC,eAAe,CAAC;QAChD,IAAI,CAAC,eAAe,GAAC,UAAU,CAAC,eAAe,CAAC;QAChD,IAAI,CAAC,IAAI,GAAC,UAAU,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAC,UAAU,CAAC,gBAAgB,CAAC;QAClD,IAAI,CAAC,UAAU,GAAC,UAAU,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,aAAa,GAAC,UAAU,CAAC,aAAa,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAC,UAAU,CAAC,IAAI,CAAC;IACjC,CAAC;CAED;;;;;;;;;;;;;;;;AC1CM,MAAM,IAAI;IAOT,YAAY,QAAsB;QAC9B,IAAI,CAAC,EAAE,GAAE,QAAQ,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAE,QAAQ,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;IAC5C,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;ACZsC;AACA;;;;;;AAQpC,MAAM,uBAAuB;IAWlC,YAAoB,cAA+B,EAAU,KAAqB,EAAU,QAAkB,EAAU,MAAe;QAAnH,mBAAc,GAAd,cAAc,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAS;QATvI,YAAO,GAAY,IAAI,mDAAO,CAAC;YAC7B,aAAa,EAAG,IAAI;YACpB,aAAa,EAAG,CAAC;YACjB,kBAAkB,EAAG,EAAE;YACvB,uBAAuB;SACxB,CAAC,CAAC;QAEH,SAAI,GAAY,KAAK,CAAC;IAEqH,CAAC;IAE5I,QAAQ;QACN,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,yDAAS,CAAC,CAAC,MAAc,EAAE,EAAE,CACpD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC9C,SAAS,CAAC,GAAG,CAAC,EAAE;gBACf,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;YAC1B,CAAC,CAAC;SACH;IACH,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;aAC5C,SAAS,CAAC,OAAO,CAAC,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEO,GAAG;QACT,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;aAC3C,SAAS,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI;QACF,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;;8FA7CU,uBAAuB;qHAAvB,uBAAuB;QCZpC,sEAAK;QACD,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QACpB,4DAAM;QAEN,sEAAK;QACD,uEAAM;QACF,yEAAwB;QACpB,2EAAgD;QAAC,6EAAiB;QAAA,4DAAQ;QAC1E,2EAAqI;QAAlH,0MAAmC;QAAtD,4DAAqI;QACzI,4DAAM;QACN,gEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,6EAAgB;QAAA,4DAAQ;QACzE,4EAAoI;QAAjH,2MAAmC;QAAtD,4DAAoI;QACxI,4DAAM;QACN,iEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,kFAAqB;QAAA,4DAAQ;QAC9E,4EAA8I;QAA3H,gNAAwC;QAA3D,4DAA8I;QAClJ,4DAAM;QACN,iEAAK;QACT,4DAAO;QACX,4DAAM;QACN,uEAAK;QACD,6EAAiD;QAAjB,gJAAS,UAAM,IAAC;QAAC,8DAAE;QAAA,4DAAS;QAC5D,6EAAmD;QAAnB,gJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;QAEN,yJAGoB;;QAvBS,0DAAmC;QAAnC,8FAAmC;QAKnC,0DAAmC;QAAnC,8FAAmC;QAKnC,0DAAwC;QAAxC,mGAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICVjE,qEAAqC;IACnC,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAA8B;IAAA,4DAAK;IACvC,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IACpC,4DAAK;;;IAHC,0DAAyB;IAAzB,yFAAyB;IACzB,0DAA8B;IAA9B,8FAA8B;IAC9B,0DAAyB;IAAzB,yFAAyB;;ACE9B,MAAM,gBAAgB;IAqC3B,YAAoB,cAA8B,EAAU,MAAc,EAAS,WAAiC,EAAS,QAAiB;QAA1H,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAAS,aAAQ,GAAR,QAAQ,CAAS;QApC9I,YAAO,GAAW;YAChB,EAAE,EAAE,CAAC;YACL,SAAS,EAAE,EAAE;YACb,WAAW,EAAC,EAAE;YACd,KAAK,EAAC,EAAE;YACR,IAAI,EAAC,EAAE;YACP,gBAAgB,EAAC,CAAC;YAClB,WAAW,EAAC,CAAC;YACb,eAAe,EAAC,IAAI;YACpB,UAAU,EAAC,CAAC;YACZ,eAAe,EAAC;gBACd,EAAE,EAAC,CAAC;gBACJ,IAAI,EAAC,EAAE;gBACP,IAAI,EAAC,EAAE;aACR;YACD,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,cAAc,EAAC;gBACb,EAAE,EAAC,CAAC;gBACJ,YAAY,EAAC,CAAC;gBACd,YAAY,EAAC,CAAC;gBACd,WAAW,EAAC,CAAC;gBACb,SAAS,EAAC,CAAC;aAEZ;YACD,aAAa,EAAE,EAAE;YACjB,IAAI,EAAE;gBACJ,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,WAAW,EAAE,EAAE;aAChB;SACF,CAAC;IAOD,CAAC;IACF,iBAAiB;IACjB,gFAAgF;IAChF,+BAA+B;IAC/B,IAAI;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACvE,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAC,GAAG,CAAC,CAAC;QAErF,CAAC,CAAC,CAAC;QAED,iCAAiC;IACnC,CAAC;IAED,+BAA+B;IAC/B,2FAA2F;IAC3F,gCAAgC;IAChC,IAAI;IACJ,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;gFA5DU,gBAAgB;8GAAhB,gBAAgB;QDb7B,2EAAwC;QACpC,wEAAO;QACL,qEAAI;QACF,qEAAI;QAAA,2EAAgB;QAAA,4EAA6B;QAAA,qEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAChG,qEAAI;QAAA,+EAAoB;QAAA,4EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACpG,sEAAI;QAAA,2EAAe;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAAM,4DAAK;QAC9G,4DAAQ;QACR,yEAAO;QACL,4GAIK;QACP,4DAAQ;QACV,4DAAQ;QACR,uEAAK;QACH,6EAAmD;QAAnB,yIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACjE,4DAAM;;QATmB,2DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;;AERoC;AAElC;;;;AAI3C,MAAM,OAAO,GAAG,qCAAqC,CAAC;AAK/C,MAAM,cAAc;IAIzB,YAAoB,IAAgB,EAAU,WAAkC;QAA5D,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAuB;QAFxE,eAAU,GAAG,aAAa,CAAC;QAkC3B,mBAAc,GAAG,IAAI,yCAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAlC+B,CAAC;IAErF,MAAM,CAAC,MAAW;QAChB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,EAAE,MAAM,EAAE,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,CAAC,IAAS;QACd,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,IAAS;QAC1B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC7H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,SAAS;QACP,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACtD,CAAC;IAMD,cAAc;QACZ,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,UAAU,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC1E,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC5D,CAAC;IAED,UAAU,CAAC,OAAgB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAClF,CAAC;IAED,WAAW,CAAC,OAAgB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACjF,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;;4EAhEU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ICAZ,qEAAmC;IACjC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAA8B;IAAA,4DAAK;IACvC,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IACpC,4DAAK;;;IAHC,0DAAuB;IAAvB,uFAAuB;IACvB,0DAA8B;IAA9B,8FAA8B;IAC9B,0DAAyB;IAAzB,yFAAyB;;ACChC,MAAM,eAAe;IAkC1B,YAAoB,cAA8B,EAAU,MAAc,EAAS,WAAiC,EAAS,QAAiB;QAA1H,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAAS,aAAQ,GAAR,QAAQ,CAAS;QAjC9I,YAAO,GAAW;YAChB,EAAE,EAAE,CAAC;YACL,SAAS,EAAE,EAAE;YACb,WAAW,EAAC,EAAE;YACd,KAAK,EAAC,EAAE;YACR,IAAI,EAAC,EAAE;YACP,gBAAgB,EAAC,CAAC;YAClB,WAAW,EAAC,CAAC;YACb,eAAe,EAAC,IAAI;YACpB,UAAU,EAAC,CAAC;YACZ,eAAe,EAAC;gBACd,EAAE,EAAC,CAAC;gBACJ,IAAI,EAAC,EAAE;gBACP,IAAI,EAAC,EAAE;aACR;YACD,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,cAAc,EAAC;gBACb,EAAE,EAAC,CAAC;gBACJ,YAAY,EAAC,CAAC;gBACd,YAAY,EAAC,CAAC;gBACd,WAAW,EAAC,CAAC;gBACb,SAAS,EAAC,CAAC;aAEZ;YACD,aAAa,EAAE,EAAE;YACjB,IAAI,EAAE;gBACJ,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,WAAW,EAAE,EAAE;aAChB;SACF,CAAC;IAIF,CAAC;IACD,gBAAgB;IAChB,gFAAgF;IAChF,+BAA+B;IAC/B,IAAI;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAC,GAAG,CAAC,CAAC;QAE/E,CAAC,CAAC,CAAC;IAGL,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;8EApDU,eAAe;6GAAf,eAAe;QDZvB,2EAAwC;QACvC,wEAAO;QACL,qEAAI;QACF,qEAAI;QAAA,0EAAe;QAAA,4EAA6B;QAAA,qEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAC/F,qEAAI;QAAA,8EAAmB;QAAA,4EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACnG,sEAAI;QAAA,0EAAc;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAAM,4DAAK;QAC7G,4DAAQ;QACR,yEAAO;QACL,2GAIK;QACP,4DAAQ;QACV,4DAAQ;QACR,uEAAK;QACH,6EAAmD;QAAnB,wIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACjE,4DAAM;;QATkB,2DAAU;QAAV,gFAAU;;;;;;;;;;;;;;;;;;;;;;;;AENE;AACqB;;;;;;AAQzD,MAAM,iCAAiC;IAc5C,YAAoB,wBAAmD,EAAS,KAAqB,EAAU,QAAkB,EAAU,MAAe;QAAtI,6BAAwB,GAAxB,wBAAwB,CAA2B;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAS;QAZ1J,sBAAiB,GAAsB,IAAI,wEAAiB,CAAC;YAC3D,MAAM,EAAG,CAAC;YACV,QAAQ,EAAG,EAAE;YACb,gBAAgB,EAAG,EAAE;YACrB,kBAAkB;YAClB,kCAAkC;YAClC,+BAA+B;YAChC,cAAc;SACd,CAAC,CAAC;QAEH,SAAI,GAAY,KAAK,CAAC;IAEwI,CAAC;IAE/J,QAAQ;QACN,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,yDAAS,CAAC,CAAC,MAAe,EAAE,EAAE,CACrD,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAClE,SAAS,CAAC,GAAG,CAAC,EAAE;gBACf,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,IAAI,CAAC;YACpC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAEO,GAAG;QACT,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC;aACzE,SAAS,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC;YAC/C,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC;IACJ,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC;aAC1E,SAAS,CAAC,iBAAiB,CAAC,EAAE;YAC7B,IAAI,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC;YAC/C,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;kHAhDU,iCAAiC;+HAAjC,iCAAiC;QCZ9C,sEAAK;QACD,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAC/B,4DAAM;QAEN,sEAAK;QACD,uEAAM;QACF,yEAAwB;QACpB,2EAAgD;QAAC,oEAAQ;QAAA,4DAAQ;QACjE,2EAA+H;QAA5G,uNAAsC;QAAzD,4DAA+H;QACnI,4DAAM;QACN,gEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,uEAAU;QAAA,4DAAQ;QACnE,4EAAmI;QAAhH,0NAAwC;QAA3D,4DAAmI;QACvI,4DAAM;QACN,iEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,iFAAoB;QAAA,4DAAQ;QAC7E,4EAAqJ;QAAlI,kOAAgD;QAAnE,4DAAqJ;QACzJ,4DAAM;QACN,iEAAI;QACJ,0EAAwB;QACpB,4EAAgD;QAAC,qEAAQ;QAAA,4DAAQ;QACjE,6EAAiG;QAAzF,yNAAsC;QAC1C,6EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,6EAAsB;QAAC,mEAAM;QAAA,4DAAS;QAC1C,4DAAS;QACb,4DAAM;QACN,iEAAK;QACT,4DAAO;QACX,4DAAM;QACN,uEAAK;QACD,6EAAiD;QAAjB,0JAAS,UAAM,IAAC;QAAC,8DAAE;QAAA,4DAAS;QAC5D,6EAAmD;QAAnB,0JAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QA1BuB,0DAAsC;QAAtC,iGAAsC;QAKtC,0DAAwC;QAAxC,mGAAwC;QAKxC,0DAAgD;QAAhD,2GAAgD;QAK3D,0DAAsC;QAAtC,iGAAsC;;;;;;;;;;;;;;;;;;;;;ACtBf;AACkC;;;;AAI7E,MAAM,OAAO,GAAG,+CAA+C,CAAC;AAKzD,MAAM,wBAAwB;IAInC,YAAoB,IAAgB,EAAU,WAAkC;QAA5D,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAuB;QAFxE,SAAI,GAAC,uBAAuB,CAAC;QAoCrC,2DAA2D;QAEjD,mBAAc,GAAG,IAAI,yCAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAtC6B,CAAC;IAErF,OAAO;IACP,2DAA2D;IAC3D,MAAM,CAAC,MAAW;QAChB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,EAAE,MAAM,EAAE,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,CAAC,IAAS;QACd,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,IAAS;QAC1B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC7H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,SAAS;QACP,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACtD,CAAC;IAQC,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,oBAAoB,CAAC,EAAU;QAC3B,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACxE,CAAC;IAED,wBAAwB;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAChF,CAAC;IAED,oBAAoB,CAAC,iBAAoC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoB,IAAI,CAAC,IAAI,EAAE,iBAAiB,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAClG,CAAC;IAED,qBAAqB,CAAC,iBAAoC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,IAAI,EAAE,iBAAiB,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACjG,CAAC;IAED,uBAAuB,CAAC,EAAU;QAC9B,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC;IAC5D,CAAC;;gGApEQ,wBAAwB;yHAAxB,wBAAwB,WAAxB,wBAAwB,mBAFxB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ACKZ,MAAM,yBAAyB;IAcpC,YAAoB,gBAAkC,EAAU,MAAc,EAAS,WAAiC,EAAU,KAAoB,EAAU,QAAiB;QAA7J,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAAU,UAAK,GAAL,KAAK,CAAe;QAAU,aAAQ,GAAR,QAAQ,CAAS;QAZjL,cAAS,GAAW;YAClB,EAAE,EAAC,CAAC;YACJ,SAAS,EAAC,EAAE;YACZ,QAAQ,EAAC,EAAE;YACX,IAAI,EAAC;gBACH,EAAE,EAAC,CAAC;gBACJ,QAAQ,EAAC,EAAE;gBACX,QAAQ,EAAC,EAAE;gBACX,WAAW,EAAE,EAAE;aAChB;SACF;IAEqL,CAAC;IAGvL,gBAAgB;IAChB,0EAA0E;IAC1E,iCAAiC;IACjC,IAAI;IACJ,4CAA4C;IAC5C,gGAAgG;IAChG,IAAI;IACJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAAC,CAAE,IAAI,CAAC,SAAS,GAAC,GAAG,CAAC;YAClE,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE,KAAI,CAAC,MAAM,GAAC,GAAG,CAAC;QAGjF,CAAC,CAAC,CAAC;QAEH,4CAA4C;IAE9C,CAAC;IAGD,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;kGAtCU,yBAAyB;uHAAzB,yBAAyB;QCQpC,sEAAK;QACH,qEAAI;QAAC,oEAAQ;QAAA,4DAAK;QACtB,4DAAM;QAEN,2EAAoC;QAChC,qEAAI;QACA,qEAAI;QAAC,kEAAM;QAAA,4DAAK;QAChB,qEAAI;QAAC,iEAAK;QAAA,4DAAK;QACf,qEAAI;QAAC,iEAAI;QAAA,4DAAK;QACd,sEAAI;QAAC,uEAAU;QAAA,4DAAK;QACpB,sEAAI;QAAC,sEAAS;QAAA,4DAAK;QACvB,4DAAK;QAEH,sEAAI;QACJ,sEAAI;QAAA,wDAAgB;QAAA,4DAAK;QACzB,sEAAI;QAAA,wDAAqB;QAAA,4DAAK;QAC9B,sEAAI;QAAA,wDAAe;QAAA,4DAAK;QACxB,sEAAI;QAAA,wDAAoB;QAAA,4DAAK;QAC7B,sEAAI;QAAA,wDAAkB;QAAA,4DAAK;QAC7B,4DAAK;QACT,4DAAQ;QACR,uEAAK;QACD,6EAAmD;QAAnB,kJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QATE,2DAAgB;QAAhB,iFAAgB;QAChB,0DAAqB;QAArB,sFAAqB;QACrB,0DAAe;QAAf,gFAAe;QACf,0DAAoB;QAApB,qFAAoB;QACpB,0DAAkB;QAAlB,mFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;IC7BxB,qEAA+B;IAC3B,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACT,4DAAK;;;IAXG,0DACJ;IADI,yFACJ;IAEI,0DACJ;IADI,0FACJ;IAEI,0DACJ;IADI,4FACJ;IAEI,0DACJ;IADI,0FACJ;;ACTD,MAAM,uBAAuB;IAalC,YAAoB,gBAAkC,EAAU,MAAc,EAAS,QAAiB;QAApF,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAS;QAXxG,cAAS,GAAW;YAClB,SAAS,EAAC,EAAE;YACZ,QAAQ,EAAC,EAAE;YACX,IAAI,EAAC;gBACH,EAAE,EAAC,CAAC;gBACJ,QAAQ,EAAC,EAAE;gBACX,QAAQ,EAAC,EAAE;gBACX,WAAW,EAAE,EAAE;aAChB;SACF;IAID,CAAC;IACD,gBAAgB;IAChB,0EAA0E;IAC1E,iCAAiC;IACjC,IAAI;IACJ,0CAA0C;IAC1C,2FAA2F;IAC3F,IAAI;IACJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAAC,CAAE,IAAI,CAAC,SAAS,GAAC,GAAG,CAAC;YAClE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE,KAAI,CAAC,KAAK,GAAC,GAAG,CAAC;QAExF,CAAC,CAAC,CAAC;QAEH,0CAA0C;IAE5C,CAAC;IACH,6CAA6C;IAC7C,6FAA6F;IAC7F,MAAM;IAEJ,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;8FAtCU,uBAAuB;qHAAvB,uBAAuB;QDdpC,sEAAK;QACD,qEAAI;QAAC,kEAAM;QAAA,4DAAK;QACpB,4DAAM;QAEN,2EAAoC;QAChC,qEAAI;QACA,qEAAI;QAAC,kEAAM;QAAA,4DAAK;QAChB,qEAAI;QAAC,kEAAM;QAAA,4DAAK;QAChB,qEAAI;QAAC,sEAAS;QAAA,4DAAK;QACnB,sEAAI;QAAC,oEAAO;QAAA,4DAAK;QACrB,4DAAK;QACL,mHAaK;QACT,4DAAQ;QACR,uEAAK;QACD,6EAAmD;QAAnB,gJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QAjBiB,2DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;;;;;;;;;;AEPc;;;;;;AAQxC,MAAM,yBAAyB;IAYpC,YAAoB,QAAiB,EAAS,gBAAkC,EAAU,KAAqB;QAA3F,aAAQ,GAAR,QAAQ,CAAS;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAX/G,cAAS,GAAE,IAAI,uDAAS,CAAC;YACvB,SAAS,EAAC,EAAE;YACZ,QAAQ,EAAC,EAAE;YACX,IAAI,EAAC;gBACH,EAAE,EAAC,CAAC;gBACJ,QAAQ,EAAC,EAAE;gBACX,QAAQ,EAAC,EAAE;gBACX,WAAW,EAAE,EAAE;aAChB;SACF,CAAC;IAEiH,CAAC;IAEpH,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,SAAS,CAAE,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;kGApBU,yBAAyB;uHAAzB,yBAAyB;QCZtC,sEAAK;QACD,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QACpB,4DAAM;QAEN,sEAAK;QAEH,uEAAO;QACD,yEAAwB;QACtB,2EAAgD;QAAA,qEAAU;QAAA,4DAAQ;QAClE,2EACmD;QADhC,0MAAiC;QAApD,4DACmD;QACrD,4DAAM;QAEN,yEAAwB;QACtB,4EAAgD;QAAA,qEAAS;QAAA,4DAAQ;QACjE,4EACmD;QADhC,0MAAgC;QAAnD,4DACmD;QACrD,4DAAM;QAGX,4DAAO;QACP,4DAAM;QAEN,uEAAK;QACJ,6EAAmD;QAAnB,kJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QAhBqB,0DAAiC;QAAjC,4FAAiC;QAMjC,0DAAgC;QAAhC,2FAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;ICDzD,qEAAqC;IACnC,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAC1B,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IAC3B,4DAAK;;;IANC,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAqB;IAArB,qFAAqB;IACrB,0DAAoB;IAApB,oFAAoB;IACpB,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAgB;IAAhB,gFAAgB;;ACRrB,MAAM,0BAA0B;IAYrC,YAAoB,gBAAiC,EAAS,QAAiB,EAAS,MAAa;QAAjF,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAS,aAAQ,GAAR,QAAQ,CAAS;QAAS,WAAM,GAAN,MAAM,CAAO;QAVrG,cAAS,GAAW;YAClB,SAAS,EAAC,EAAE;YACZ,QAAQ,EAAC,EAAE;YACX,IAAI,EAAC;gBACH,EAAE,EAAC,CAAC;gBACJ,QAAQ,EAAC,EAAE;gBACX,QAAQ,EAAC,EAAE;gBACX,WAAW,EAAE,EAAE;aAChB;SACF;IACwG,CAAC;IAG1G,gBAAgB;IAChB,0EAA0E;IAC1E,iCAAiC;IACjC,IAAI;IAEJ,6CAA6C;IAC7C,iGAAiG;IACjG,IAAI;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAAC,CAAE,IAAI,CAAC,SAAS,GAAC,GAAG,CAAC;YAClE,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE,KAAI,CAAC,QAAQ,GAAC,GAAG,CAAC;QAEnF,CAAC,CAAC,CAAC;QAEH,6CAA6C;IAC/C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;oGAnCU,0BAA0B;wHAA1B,0BAA0B;QDVvC,2EAAwC;QACpC,wEAAO;QACL,qEAAI;QACF,qEAAI;QAAA,uEAAY;QAAA,4EAA6B;QAAA,qEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAC5F,qEAAI;QAAA,qEAAU;QAAA,4EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAC1F,sEAAI;QAAA,qEAAS;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACzF,sEAAI;QAAA,yEAAa;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAC7F,sEAAI;QAAA,iEAAK;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACrF,sEAAI;QAAA,gEAAI;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAAM,4DAAK;QAEnG,4DAAQ;QACR,yEAAO;QACL,uHAOK;QACP,4DAAQ;QACV,4DAAQ;QACR,uEAAK;QACH,6EAAmD;QAAnB,mJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QAZsB,2DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;;AEbE;AACkC;;;;AAM7E,MAAM,IAAI,GAAG,wCAAwC,CAAC;AACtD,MAAM,KAAK,GAAC,kDAAkD;AAMvD,MAAM,gBAAgB;IAG3B,YAAoB,IAAgB,EAAU,WAAiC;QAA3D,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAsB;QAErE,mBAAc,GAAG,IAAI,yCAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJ4B,CAAC;IAOlF,MAAM,CAAC,MAAW;QAChB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,KAAK,EAAE,EAAE,MAAM,EAAC,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,CAAC,IAAS;QACd,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAChI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,IAAS;QAC1B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACpE,CAAC;IAEC,MAAM,CAAC,EAAU;QACf,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAChE,CAAC;IACA,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IACD,YAAY,CAAC,SAAoB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,IAAI,EAAE,SAAS,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3E,CAAC;IAEH,aAAa,CAAC,SAAoB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,EAAE,SAAS,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC1E,CAAC;IAEH,eAAe,CAAC,WAAmB;QAC/B,MAAM,GAAG,GAAG,GAAG,IAAI,IAAI,WAAW,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,YAAY,CAAC,EAAS;QACpB,MAAM,GAAG,GAAC,GAAG,IAAI,OAAO,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAChE,CAAC;IAED,KAAK;QAEH,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,GAAC,KAAK,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAElE,CAAC;IACD,oBAAoB,CAAC,SAAmB;QACtC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,MAAM,GAAG,GAAG,GAAG,IAAI,IAAI,SAAS,CAAC,EAAE,oBAAoB,CAAC;QAExD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACvD,CAAC;IAEL,oBAAoB,CAAC,SAAmB;QACtC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,MAAM,GAAG,GAAG,GAAG,IAAI,IAAI,SAAS,CAAC,EAAE,mBAAmB,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACvD,CAAC;IACF,iBAAiB,CAAC,SAAmB;QACnC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,MAAM,GAAG,GAAG,GAAG,IAAI,IAAI,SAAS,CAAC,EAAE,iBAAiB,CAAC;QAErD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACpD,CAAC;;gFApFI,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZmC;AACgD;AACS;AACpB;AACgC;AAChC;AACH;AACN;AACe;AACH;AACM;AACS;AACK;AACS;AACpB;AACgC;AAChC;AAClB;AACM;AACS;AACK;AACS;AACpB;AACgC;AAC7B;AACH;AACU;AAC/C;AACH;AACgC;AACvB;AACH;AACgC;AACN;AACM;AACG;AACT;AACM;AACG;AACf;AACM;AACf;AACc;AACH;AACY;AAEuB;AACrC;;;AAGjF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,wIAAmC,EAAC;IAC7E,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,iJAAsC,EAAC;IACpF,EAAE,IAAI,EAAE,2BAA2B,EAAE,SAAS,EAAE,oIAAkC,EAAC;IACnF,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,kHAA6B,EAAE;IACnE,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,+HAAkC,EAAE;IAE/E,EAAE,IAAI,EAAE,mCAAmC,EAAE,SAAS,EAAE,+HAAkC,EAAE;IAC5F,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,gGAAuB,EAAE;IAC9D,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,yEAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sEAAe,EAAE;IAC/C,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,sGAAyB,EAAE;IACrE,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,yGAA0B,EAAE;IACrE,EAAE,IAAI,EAAE,WAAW,EAAC,SAAS,EAAC,iFAAkB,EAAC;IACjD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAqB,EAAE;IAC1D,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAC,sGAAyB,EAAC;IAChE,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,sGAAyB,EAAC;IACjE,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,yGAA0B,EAAC;IACtE,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,gGAAuB,EAAC;IAChE,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,yGAA0B,EAAC;IACtE,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,gGAAuB,EAAC;IAChE,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,yEAAgB,EAAE;IACvD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,sEAAe,EAAE;IACrD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,gEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+FAAsB,EAAE;IACpD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uGAAyB,EAAE;IAC3D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,2FAAqB,EAAE;IAC1D,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,qGAAwB,EAAE;IACxD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,6GAA2B,EAAE;IAC/D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,iGAAuB,EAAE;IAC9D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,8GAA2B,EAAE;IAC9D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,uHAA8B,EAAE;IACrE,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0GAA0B,EAAE;IAC/D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,mHAA4B,EAAE;IAChE,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,4HAA+B,EAAE;IACvE,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,+GAA2B,EAAE;IACjE,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2GAA0B,EAAE;IAC3D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,iHAA4B,EAAE;IACjE,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,oGAAwB,EAAE;IACjE,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,4HAA+B,EAAC;IACrE,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,qIAAkC,EAAC;IAC5E,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,wHAA8B,EAAC;IAC3E,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,wGAAyB,EAAC;IACzD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,iHAA4B,EAAC;IAChE,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,oGAAwB,EAAC;IAC/D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,gGAAuB,EAAC;IACzD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,gGAAuB,EAAC;IAC9D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,gGAAuB,EAAC;IACzD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,gGAAuB,EAAC;IAC9D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+FAAsB,EAAC;IACnD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4FAAqB,EAAC;IACpD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wGAAyB,EAAC;IAC1D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAqB,EAAC;IACzD,8EAA8E;IAC9E,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,mEAAc,EAAE;IACzC,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAC,wGAAwB,EAAC;CAChE,CAAC;AAOK,MAAM,gBAAgB;;gFAAhB,gBAAgB;8GAAhB,gBAAgB;mHAFhB,EAAE,YAFJ,CAAC,kEAAoB,CAAC,MAAM,EAAC,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC,EAC9C,0DAAY;oIAGX,gBAAgB,qFAHjB,0DAAY;;;;;;;;;;;;;;;;;;;;;;;AC5GmB;AACA;;;;;;AASpC,MAAM,uBAAuB;IAsBlC,YAAoB,cAA8B,EAAU,KAAqB,EAAU,QAAkB,EAAU,MAAe;QAAlH,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAS;QApBtI,YAAO,GAAY,IAAI,mDAAO,CAAC;YAC7B,IAAI,EAAE,IAAI;YACV,UAAU,EAAG,EAAE;YACf,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,gBAAgB,EAAG,CAAC;YACpB,WAAW,EAAE,CAAC;YACd,eAAe,EAAE,EAAE;YACnB,aAAa,EAAG,EAAE;YAClB,UAAU,EAAG,CAAC;YACd,QAAQ;YACR,eAAe,EAAE,IAAI;YACrB,cAAc,EAAG,IAAI;SACtB,CAAC,CAAC;QAEH,SAAI,GAAW,KAAK,CAAC;IAEqH,CAAC;IAE3I,QAAQ;QACN,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,yDAAS,CAAC,CAAC,MAAc,EAAE,EAAE,CACpD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC9C,SAAS,CAAC,GAAG,CAAC,EAAE;gBACf,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;YAC1B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAEO,GAAG;QACT,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;aAC3C,SAAS,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;aAC5C,SAAS,CAAC,OAAO,CAAC,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;8FAxDU,uBAAuB;qHAAvB,uBAAuB;QCbpC,sEAAK;QACD,qEAAI;QAAC,0EAAc;QAAA,4DAAK;QAC5B,4DAAM;QAEN,sEAAK;QACD,uEAAM;QACF,yEAAwB;QACpB,2EAAgD;QAAC,yEAAa;QAAA,4DAAQ;QACtE,2EAA8H;QAA3G,uMAAgC;QAAnD,4DAA8H;QAClI,4DAAM;QACN,gEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,yEAAY;QAAA,4DAAQ;QACrE,4EAA4H;QAAzG,uMAA+B;QAAlD,4DAA4H;QAChI,4DAAM;QACN,iEAAK;QACL,0EAAwB;QACpB,4EAAgD;QAAC,wEAAW;QAAA,4DAAQ;QACpE,4EAA0H;QAAvG,sMAA8B;QAAjD,4DAA0H;QAC9H,4DAAM;QACN,iEAAI;QACJ,0EAAwB;QACpB,4EAAgD;QAAC,2EAAc;QAAA,4DAAQ;QACvE,4EAA0H;QAAvG,sMAA8B;QAAjD,4DAA0H;QAC9H,4DAAM;QACN,iEAAK;QACL,iEAAI;QACJ,0EAAwB;QACpB,4EAAgD;QAAC,oEAAQ;QAAA,4DAAQ;QACjE,4EAA0H;QAAvG,sMAA8B;QAAjD,4DAA0H;QAC9H,4DAAM;QACN,iEAAK;QACL,iEAAI;QACJ,0EAAwB;QACpB,4EAAgD;QAAC,mEAAO;QAAA,4DAAQ;QAChE,4EAA0H;QAAvG,sMAA8B;QAAjD,4DAA0H;QAC9H,4DAAM;QACN,iEAAK;QACL,iEAAI;QACJ,0EAAwB;QACpB,4EAAgD;QAAC,iFAAqB;QAAA,4DAAQ;QAC9E,4EAA0H;QAAvG,sMAA8B;QAAjD,4DAA0H;QAC9H,4DAAM;QACN,iEAAK;QACL,iEAAI;QACJ,0EAAwB;QACpB,4EAAgD;QAAC,2EAAc;QAAA,4DAAQ;QACvE,4EAA0H;QAAvG,sMAA8B;QAAjD,4DAA0H;QAC9H,4DAAM;QACN,iEAAK;QACL,iEAAI;QACJ,0EAAwB;QACpB,4EAAgD;QAAC,+EAAmB;QAAA,4DAAQ;QAC5E,4EAA0H;QAAvG,sMAA8B;QAAjD,4DAA0H;QAC9H,4DAAM;QACN,iEAAK;QACL,iEAAI;QACJ,0EAAwB;QACpB,4EAAgD;QAAC,6EAAgB;QAAA,4DAAQ;QACzE,4EAA0H;QAAvG,sMAA8B;QAAjD,4DAA0H;QAC9H,4DAAM;QACN,iEAAK;QACL,iEAAI;QACJ,0EAAwB;QACpB,4EAAgD;QAAC,0EAAa;QAAA,4DAAQ;QACtE,4EAA0H;QAAvG,sMAA8B;QAAjD,4DAA0H;QAC9H,4DAAM;QACN,iEAAK;QACL,iEAAI;QASJ,iEAAK;QACT,4DAAO;QACX,4DAAM;QACN,uEAAK;QACD,6EAAiD;QAAjB,gJAAS,UAAM,IAAC;QAAC,8DAAE;QAAA,4DAAS;QAC5D,6EAAmD;QAAnB,gJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QA3EuB,0DAAgC;QAAhC,2FAAgC;QAKhC,0DAA+B;QAA/B,0FAA+B;QAK/B,0DAA8B;QAA9B,yFAA8B;QAK9B,0DAA8B;QAA9B,yFAA8B;QAM9B,0DAA8B;QAA9B,yFAA8B;QAM9B,0DAA8B;QAA9B,yFAA8B;QAM9B,0DAA8B;QAA9B,yFAA8B;QAM9B,0DAA8B;QAA9B,yFAA8B;QAM9B,0DAA8B;QAA9B,yFAA8B;QAM9B,0DAA8B;QAA9B,yFAA8B;QAM9B,0DAA8B;QAA9B,yFAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;IClDvD,qEAAuC;IAErC,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,yEAAQ;IAAA,uDAAqB;IAAA,4DAAS;IAAA,4DAAK;IAEnD,4DAAK;;;IALG,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAyB;IAAzB,yFAAyB;IACjB,0DAAqB;IAArB,qFAAqB;;ACLlC,MAAM,yBAAyB;IAGpC,KAAK;IACL,WAAW;IACX,mBAAmB;IACnB,oBAAoB;IACpB,cAAc;IACd,aAAa;IACb,wBAAwB;IACxB,mBAAmB;IACnB,0BAA0B;IAC1B,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;IACZ,eAAe;IACf,cAAc;IACd,OAAO;IACP,kBAAkB;IAClB,oBAAoB;IACpB,qBAAqB;IACrB,YAAY;IACZ,sBAAsB;IACtB,sBAAsB;IACtB,qBAAqB;IACrB,kBAAkB;IAElB,OAAO;IACP,uBAAuB;IACvB,YAAY;IACZ,oBAAoB;IACpB,mBAAmB;IACnB,MAAM;IACN,KAAK;IAGL,YAAoB,cAA8B,EAAU,MAAc,EAAS,WAAiC,EAAS,KAAoB,EAAS,QAAiB;QAAvJ,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAAS,UAAK,GAAL,KAAK,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAS;IAE3K,CAAC;IAED,gBAAgB;IAChB,wFAAwF;IAExF,IAAI;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAAE,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACxE,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE,KAAI,CAAC,SAAS,GAAC,GAAG,CAAC;QAEhF,CAAC,CAAC,CAAC;IAGL,CAAC;IACD,iCAAiC;IACjC,uGAAuG;IAEvG,IAAI;IAIJ,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;kGA9DU,yBAAyB;uHAAzB,yBAAyB;QDftC,sEAAK;QACD,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAClB,4DAAM;QAEN,2EAAwC;QACtC,wEAAO;QACL,qEAAI;QACF,qEAAI;QAAA,iEAAM;QAAA,4EAA6B;QAAA,qEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACpF,sEAAI;QAAA,gEAAI;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACtF,sEAAI;QAAA,iEAAK;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACrF,sEAAI;QAAA,qEAAS;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAJ3F,4DAAI;QAMN,4DAAQ;QACR,yEAAO;QAEL,sHAOG;QACL,4DAAQ;QACV,4DAAQ;QACR,uEAAK;QACH,6EAAmD;QAAnB,kJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QAZuB,2DAAY;QAAZ,kFAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEPrC,qEAA2C;IACzC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IACpC,4DAAK;;;IAHC,0DAAwB;IAAxB,wFAAwB;IACxB,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAyB;IAAzB,yFAAyB;;ACI9B,MAAM,0BAA0B;IAoCpC,YAAoB,cAA8B,EAAU,MAAc,EAAS,WAAiC,EAAS,KAAoB,EAAS,QAAiB;QAAvJ,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAAS,UAAK,GAAL,KAAK,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAS;QAjC5K,YAAO,GAAW;YAChB,EAAE,EAAE,CAAC;YACL,SAAS,EAAE,EAAE;YACb,WAAW,EAAC,EAAE;YACd,KAAK,EAAC,EAAE;YACR,IAAI,EAAC,EAAE;YACP,gBAAgB,EAAC,CAAC;YAClB,WAAW,EAAC,CAAC;YACb,eAAe,EAAC,IAAI;YACpB,UAAU,EAAC,CAAC;YACZ,eAAe,EAAC;gBACd,EAAE,EAAC,CAAC;gBACJ,IAAI,EAAC,EAAE;gBACP,IAAI,EAAC,EAAE;aACR;YACD,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,cAAc,EAAC;gBACb,EAAE,EAAC,CAAC;gBACJ,YAAY,EAAC,CAAC;gBACd,YAAY,EAAC,CAAC;gBACd,WAAW,EAAC,CAAC;gBACb,SAAS,EAAC,CAAC;aAEZ;YACD,aAAa,EAAE,EAAE;YACjB,IAAI,EAAE;gBACJ,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,WAAW,EAAE,EAAE;aAChB;SACF,CAAC;IAIF,CAAC;IACD,gBAAgB;IAChB,2EAA2E;IAC3E,+BAA+B;IAC/B,IAAI;IACJ,yCAAyC;IACzC,iGAAiG;IACjG,IAAI;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAAC,CAAE,IAAI,CAAC,OAAO,GAAC,GAAG,CAAC;YACnE,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE,KAAI,CAAC,WAAW,GAAC,GAAG,CAAC,CAAC;QAErF,CAAC,CAAC,CAAC;QAEH,2CAA2C;IAC7C,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;oGAzDU,0BAA0B;wHAA1B,0BAA0B;QDfvC,2EAAwC;QACpC,wEAAO;QACL,qEAAI;QACF,qEAAI;QAAA,sEAAW;QAAA,4EAA6B;QAAA,qEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAC3F,qEAAI;QAAA,oEAAS;QAAA,4EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACzF,sEAAI;QAAA,wEAAY;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAH9F,4DAAI;QAIF,4DAAQ;QACZ,yEAAO;QACL,sHAIK;QACP,4DAAQ;QACV,4DAAQ;QACR,uEAAK;QACH,6EAAmD;QAAnB,mJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACjE,4DAAM;;QATsB,2DAAc;QAAd,oFAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEKzC,qEAA+B;IAC7B,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,6EAA0F;IAC5F,oEAAO;IAAA,4DAAS;IAAA,4DAAK;IACrB,sEAAK;IAAA,6EAAkE;IAA5B,8XAA2B;IACpE,0EAAa;IAAA,4DAAS;IAAA,4DAAK;IAGjC,4DAAK;;;IAXC,0DAAc;IAAd,8EAAc;IACd,0DAAe;IAAf,+EAAe;IACf,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAe;IAAf,+EAAe;IACf,0DAAmB;IAAnB,mFAAmB;IACiB,0DAAqD;IAArD,iIAAqD;;ACN9F,MAAM,qBAAqB;IAQhC,YAAoB,cAA8B,EAAU,KAAqB,EAAU,MAAc,EAAS,WAAiC,EAAS,QAAiB;QAC3K,sEAAsE;QACtE,yCAAyC;QAFvB,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAAS,aAAQ,GAAR,QAAQ,CAAS;QAI3K,MAAM;IACR,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAAC,CAAE,IAAI,CAAC,OAAO,GAAC,GAAG,CAAC;YACnE,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE,KAAI,CAAC,KAAK,GAAC,GAAG,CAAC,CAAC;QAE3E,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,qBAAqB;IACrB,0FAA0F;IAC1F,IAAI;IAEJ,qCAAqC;IACrC,2DAA2D;IAE3D,IAAI;IAGJ,QAAQ,CAAC,MAAa;QACpB,sEAAsE;QACrE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAC,MAAM,CAAC,CAAC;QAEvD,OAAO,CAAC,GAAG,CAAC,SAAS,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAC,MAAM,CAAE;IAChC,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;0FA5CU,qBAAqB;mHAArB,qBAAqB;QDblC,2EAAwC;QACpC,wEAAO;QACL,qEAAI;QACF,qEAAI;QAAA,iEAAM;QAAA,4EAA6B;QAAA,qEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACtF,qEAAI;QAAA,kEAAO;QAAA,4EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACvF,sEAAI;QAAA,sEAAU;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAC1F,sEAAI;QAAA,mEAAO;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QACvF,sEAAI;QAAA,wEAAY;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAC5F,sEAAI;QAAA,yFAA6B;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAC7G,sEAAI;QAAA,0EAAc;QAAA,6EAA6B;QAAA,sEAAgC;QAAA,4DAAS;QAAC,4DAAK;QAPhG,4DAAI;QASJ,4DAAQ;QACV,yEAAO;QACL,kHAYK;QACP,4DAAQ;QACV,4DAAQ;QACR,uEAAK;QACH,6EAAmD;QAAnB,8IAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACjE,4DAAM;;QAjBgB,2DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;AEA5B,MAAM,uBAAuB;IAiClC,YAAoB,QAAiB,EAAS,cAA8B,EAAU,KAAqB;QAAvF,aAAQ,GAAR,QAAQ,CAAS;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAhC3G,YAAO,GAAW;YAChB,EAAE,EAAE,CAAC;YACL,SAAS,EAAE,EAAE;YACb,WAAW,EAAC,EAAE;YACd,KAAK,EAAC,EAAE;YACR,IAAI,EAAC,EAAE;YACP,gBAAgB,EAAC,CAAC;YAClB,WAAW,EAAC,CAAC;YACb,eAAe,EAAC,IAAI;YACpB,UAAU,EAAC,CAAC;YACZ,eAAe,EAAC;gBACd,EAAE,EAAC,CAAC;gBACJ,IAAI,EAAC,EAAE;gBACP,IAAI,EAAC,EAAE;aACR;YACD,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,cAAc,EAAC;gBACb,EAAE,EAAC,CAAC;gBACJ,YAAY,EAAC,CAAC;gBACd,YAAY,EAAC,CAAC;gBACd,WAAW,EAAC,CAAC;gBACb,SAAS,EAAC,CAAC;aAEZ;YACD,aAAa,EAAE,EAAE;YACjB,IAAI,EAAE;gBACJ,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,WAAW,EAAE,EAAE;aAChB;SACF,CAAC;IAC4G,CAAC;IAE/G,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAE,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;IACrF,CAAC;;8FAzCU,uBAAuB;qHAAvB,uBAAuB;QCbpC,sEAAK;QACD,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAClB,4DAAM;QAEN,sEAAK;QAEH,uEAAO;QACD,yEAAwB;QACtB,2EAAgD;QAAA,sEAAW;QAAA,4DAAQ;QACnE,2EACmD;QADhC,uMAAgC;QAAnD,4DACmD;QACrD,4DAAM;QAEN,yEAAwB;QACtB,4EAAgD;QAAA,sEAAU;QAAA,4DAAQ;QAClE,4EACmD;QADhC,uMAA+B;QAAlD,4DACmD;QACrD,4DAAM;QAEN,0EAAwB;QACtB,4EAAgD;QAAA,qEAAS;QAAA,4DAAQ;QACjE,4EACmD;QADhC,sMAA8B;QAAjD,4DACmD;QACrD,4DAAM;QACN,0EAAwB;QACtB,4EAAgD;QAAA,wEAAY;QAAA,4DAAQ;QACpE,4EACmD;QADhC,yMAAiC;QAApD,4DACmD;QACrD,4DAAM;QACN,0EAAwB;QACtB,4EAAgD;QAAA,iEAAK;QAAA,4DAAQ;QAC7D,6EACmD;QADhC,mMAA2B;QAA9C,4DACmD;QACrD,4DAAM;QAEN,0EAAwB;QACtB,6EAAgD;QAAA,gEAAI;QAAA,4DAAQ;QAC5D,6EACmD;QADhC,kMAA0B;QAA7C,4DACmD;QACrD,4DAAM;QAEN,0EAAwB;QACtB,6EAAgD;QAAA,8EAAkB;QAAA,4DAAQ;QAC1E,6EACmD;QAD9B,8MAAsC;QAA3D,4DACmD;QACrD,4DAAM;QACN,0EAAwB;QACtB,6EAAgD;QAAA,wEAAY;QAAA,4DAAQ;QACpE,6EACmD;QAD9B,yMAAiC;QAAtD,4DACmD;QACrD,4DAAM;QACN,0EAAwB;QACtB,6EAAgD;QAAA,4EAAgB;QAAA,4DAAQ;QACxE,6EACmD;QADhC,6MAAqC;QAAxD,4DACmD;QACrD,4DAAM;QACN,0EAAwB;QACtB,6EAAgD;QAAA,0EAAc;QAAA,4DAAQ;QACtE,6EACmD;QADhC,2MAAmC;QAAtD,4DACmD;QACrD,4DAAM;QACX,4DAAO;QAEV,4DAAM;QACN,uEAAK;QACH,8EAAmD;QAAnB,gJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACjE,4DAAM;;QAzDoB,0DAAgC;QAAhC,2FAAgC;QAMhC,0DAA+B;QAA/B,0FAA+B;QAM/B,0DAA8B;QAA9B,yFAA8B;QAK9B,0DAAiC;QAAjC,4FAAiC;QAKjC,0DAA2B;QAA3B,sFAA2B;QAM3B,0DAA0B;QAA1B,qFAA0B;QAMxB,0DAAsC;QAAtC,iGAAsC;QAKtC,0DAAiC;QAAjC,4FAAiC;QAKnC,0DAAqC;QAArC,gGAAqC;QAKrC,0DAAmC;QAAnC,8FAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC/C9D,qEAAyD;IACrD,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACT,4DAAK;;;IAXG,0DACJ;IADI,uGACJ;IAEI,0DACJ;IADI,yGACJ;IAEI,0DACJ;IADI,iHACJ;IAEI,0DACJ;IADI,uGACJ;;ACTD,MAAM,kCAAkC;IAM7C,YAAoB,cAA8B,EAAU,KAAqB,EAAS,MAAc,EAAS,WAAiC,EAAS,QAAiB;QAAxJ,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAAS,aAAQ,GAAR,QAAQ,CAAS;IAAI,CAAC;IAEjL,QAAQ;QACN,IAAI,CAAC,MAAM,GAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEzB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAAC,CAAE,IAAI,CAAC,OAAO,GAAC,GAAG,CAAC;YACnE,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,GAAG,EAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE,KAAI,CAAC,kBAAkB,GAAC,GAAG,CAAC;QAG9I,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,6EAA6E;IAC7E,8CAA8C;IAC9C,yDAAyD;IACzD,8DAA8D;IAC9D,+GAA+G;IAC/G,8BAA8B;IAC9B,8CAA8C;IAC9C,gBAAgB;IAChB,cAAc;IACd,IAAI;IAIF,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;;oHAlCC,kCAAkC;gIAAlC,kCAAkC;QDd/C,sEAAK;QACD,qEAAI;QAAC,kEAAM;QAAA,4DAAK;QACpB,4DAAM;QAEN,2EAAoC;QAChC,qEAAI;QACA,qEAAI;QAAC,mEAAO;QAAA,4DAAK;QACjB,qEAAI;QAAC,oEAAQ;QAAA,4DAAK;QAClB,qEAAI;QAAC,+EAAkB;QAAA,4DAAK;QAC5B,sEAAI;QAAC,oEAAO;QAAA,4DAAK;QACrB,4DAAK;QACL,8HAaK;QACT,4DAAQ;QACR,uEAAK;QACD,6EAAmD;QAAnB,2JAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpE,4DAAM;;QAjB8B,2DAAqB;QAArB,2FAAqB;;;;;;;;;;;;;;;;;;;;;AEVhB;AACkC;;;;AAW7E,MAAM,OAAO,GAAG,6CAA6C,CAAC;AAC9D,MAAM,QAAQ,GAAC,oCAAoC,CAAC;AAI7C,MAAM,cAAc;IAKzB,YAAoB,IAAgB,EAAS,WAAiC;QAA1D,SAAI,GAAJ,IAAI,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAsB;QAItE,mBAAc,GAAG,IAAI,yCAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJpD,CAAC;IAMF,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,OAAO;IACP,0DAA0D;IAE1D,MAAM,CAAC,MAAW;QAChB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,EAAE,MAAM,EAAG,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAClE,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,CAAC,IAAS;QACd,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,IAAS;QAC1B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC7H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACjE,CAAC;IAEF,8DAA8D;IAG7D,WAAW;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,OAAO,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAClE,CAAC;IAEH,UAAU,CAAC,EAAS;QAChB,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,EAAE,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC5D,CAAC;IAEH,UAAU,CAAC,OAAgB;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,OAAO,EAAE,OAAO,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC1E,CAAC;IAEH,WAAW,CAAC,OAAgB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,OAAO,EAAE,OAAO,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACzE,CAAC;IAEH,aAAa,CAAC,EAAU;QACpB,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,EAAE,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;IAED,gBAAgB,CAAC,OAAe;QAE9B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,MAAM,GAAG,GAAG,GAAG,QAAQ,IAAI,OAAO,CAAC,EAAE,QAAQ,CAAC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,EAAC,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAEvD,CAAC;IAED,YAAY;QAGR,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,QAAQ,GAAG,cAAc,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAGrF,CAAC;IACD,UAAU;QAGR,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,QAAQ,GAAC,WAAW,GAAG,KAAK,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAGlF,CAAC;IAEE,uBAAuB,CAAC,OAAe;QACtC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,MAAM,GAAG,GAAG,GAAG,QAAQ,IAAI,OAAO,CAAC,EAAE,iBAAiB,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,GAAG,EAAC,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAE5D,CAAC;IACD,iBAAiB,CAAC,OAAe;QAC/B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,MAAM,GAAG,GAAG,GAAG,QAAQ,IAAI,OAAO,CAAC,EAAE,oBAAoB,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAC,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAE5D,CAAC;IAED,gBAAgB,CAAC,OAAe;QAC9B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,MAAM,GAAG,GAAG,GAAG,QAAQ,IAAI,OAAO,CAAC,EAAE,mBAAmB,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,EAAC,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAE1D,CAAC;IACD,2BAA2B,CAAC,OAAe,EAAC,MAAa;QACxD,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,MAAM,GAAG,GAAG,GAAG,QAAQ,IAAI,OAAO,CAAC,EAAE,uBAAuB,MAAM,EAAE,CAAC;QACrE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,GAAG,EAAC,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAEpE,CAAC;IAED,kBAAkB,CAAC,OAAe;QAEhC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,MAAM,GAAG,GAAG,GAAG,QAAQ,IAAI,OAAO,CAAC,EAAE,YAAY,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,EAAC,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAE3D,CAAC;IACD,oBAAoB,CAAC,OAAe;QAClC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,MAAM,GAAG,GAAG,GAAG,QAAQ,IAAI,OAAO,CAAC,EAAE,cAAc,CAAC;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,GAAG,EAAC,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAE7D,CAAC;IACD,YAAY,CAAC,OAAe,EAAC,MAAa;QACxC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAE9H,MAAM,GAAG,GAAG,GAAG,QAAQ,IAAI,OAAO,CAAC,EAAE,kBAAkB,MAAM,EAAE,CAAC;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAC,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAExD,CAAC;;4EArJY,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;ACTb,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;+GAAjB,iBAAiB;;;;;;;;;;;;;;;;;;;ACP+C;;;;AAO7E,MAAM,OAAO,GAAG,kCAAkC,CAAC;AAK5C,MAAM,YAAY;IAEvB,YAAoB,IAAgB,EAC1B,WAAkC;QADxB,SAAI,GAAJ,IAAI,CAAY;QAC1B,gBAAW,GAAX,WAAW,CAAuB;IAAI,CAAC;IAEjD,MAAM,CAAC,MAAW;QAChB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,EAAE,MAAM,EAAG,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAClE,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAE,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,IAAS;QACd,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,IAAS;QAC1B,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC7H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAED,QAAQ,CAAC,IAAU;QACjB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,OAAO,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACrF,CAAC;IAED,MAAM,CAAC,EAAU;QACf,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAClE,CAAC;IAED,SAAS;QACP,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACtD,CAAC;IAED,wBAAwB,CAAC,QAAgB;QACvC,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,QAAQ,yBAAyB,CAAC;QAC5D,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;IACnF,CAAC;IAED,aAAa;QACX,sCAAsC;QACtC,kCAAkC;QAClC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,OAAO,GAAG,aAAa,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAE1E,CAAC;;wEApDY,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;ACVpB,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,IAAI,EAAG,wBAAwB;CAChC,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;AChBvB;AAGF;AACY;AAIzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAGlB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\r\nimport { Course } from '../model/course';\r\nimport { CoursesService } from '../courses/courses.service';\r\n\r\n\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-admin-add-course',\r\n  templateUrl: './admin-add-course.component.html',\r\n  styleUrls: ['./admin-add-course.component.css']\r\n})\r\nexport class AdminAddCourseComponent implements OnInit {\r\n\r\n\r\n  course: Course = new Course({\r\n    title: '',\r\n    courseCode: '',\r\n    startDate : new Date(), \r\n    endDate: new Date(),\r\n    ects : 0\r\n  });\r\n\r\n  form!: FormGroup;\r\n  submitted = false; \r\n  constructor(private courseService: CoursesService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      title: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(5),\r\n          Validators.maxLength(20)\r\n        ] \r\n      ],\r\n      courseCode:['',Validators.required],\r\n      startDate: ['', Validators.required], \r\n      endDate: ['', Validators.required],\r\n      ects: [0, Validators.required]\r\n    });\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl} { return this.form.controls;}\r\n\r\n  saveCourse() {\r\n    const data = {\r\n      title : this.course.title,\r\n      courseCode : this.course.courseCode,\r\n      startDate : this.course.startDate,\r\n      endDate : this.course.endDate, \r\n      ects: this.course.ects\r\n    }; \r\n\r\n    this.courseService.create(data)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.submitted = true; \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  newCourse(){\r\n    this.submitted = false; \r\n    this.course = {\r\n      title: '', \r\n      courseCode:'',\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      ects: 4\r\n    };\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n  }\r\n\r\n\r\n","<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n       <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"title\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"course.title\" \r\n          id = \"title\"\r\n          name=\"title\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.title.errors.required\">title of course period is required</div>\r\n          <div *ngIf=\"f.title.errors.minlength\">\r\n            title must be at least 5 characters\r\n          </div>\r\n          <div *ngIf=\"f.title.errors.maxlength\">\r\n            title must not exceed 20 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n       <div class=\"form-group\">\r\n        <label>Course code</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"courseCode\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"course.courseCode\" \r\n          id = \"courseCode\"\r\n          name=\"courseCode\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.courseCode.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.courseCode.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.courseCode.errors.required\">Course code is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Start date</label>\r\n        <input\r\n          type=\"date\"\r\n          formControlName=\"startDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"course.startDate\" \r\n          id = \"startDate\"\r\n          name=\"startDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.startDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.startDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.startDate.errors.required\">Start date is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>End date</label>\r\n        <input\r\n          type=\"date\"\r\n          formControlName=\"endDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"course.endDate\" \r\n          id = \"endDate\"\r\n          name=\"endDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.endDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.endDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.endDate.errors.required\">End date is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>ECTS</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"ects\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"course.ects\" \r\n          id = \"ects\"\r\n          name=\"ects\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.ects.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.ects.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.ects.errors.required\">ECTS is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"submitted\">\r\n        <h4> The course period was added successfully!</h4>\r\n        <button class=\"btn btn-success\" (click)=\"newCourse()\"> Add new course period </button>\r\n    </div>\r\n\r\n      <div class=\"form-group\">\r\n       <button (click)=\"saveCourse()\" class=\"btn btn-success\"> Submit </button>\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"onReset()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ExamPeriodService } from '../exam-period/exam-period.service';\r\nimport { ExamPeriod } from '../model/exam-period';\r\n\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-admin-add-exam-period',\r\n  templateUrl: './admin-add-exam-period.component.html',\r\n  styleUrls: ['./admin-add-exam-period.component.css']\r\n})\r\nexport class AdminAddExamPeriodComponent implements OnInit {\r\n\r\n  examPeriod: ExamPeriod = new ExamPeriod({\r\n    name: '',\r\n    startDate : '', \r\n    endDate: '',\r\n    paymentAmount : 0\r\n  });\r\n\r\n  form!: FormGroup;\r\n  submitted = false; \r\n\r\n  constructor(private examPeriodService: ExamPeriodService, \r\n    private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      name: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      startDate: ['', Validators.required], \r\n      endDate: ['', Validators.required],\r\n      paymentAmount: [0, Validators.required]\r\n    });\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl} { return this.form.controls;}\r\n\r\n  saveExamPeriod() {\r\n    const data = {\r\n      name : this.examPeriod.name,\r\n      startDate : this.examPeriod.startDate,\r\n      endDate : this.examPeriod.endDate, \r\n      paymentAmount: this.examPeriod.paymentAmount\r\n    }; \r\n\r\n    this.examPeriodService.create(data)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.submitted = true; \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  newExamPeriod(){\r\n    this.submitted = false; \r\n    this.examPeriod = {\r\n      name: '', \r\n      startDate: '',\r\n      endDate: '',\r\n      paymentAmount: 445\r\n    };\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"name\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"examPeriod.name\" \r\n          id = \"name\"\r\n          name=\"name\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.name.errors.required\">Name of exam period is required</div>\r\n          <div *ngIf=\"f.name.errors.minlength\">\r\n            Name must be at least 3 characters\r\n          </div>\r\n          <div *ngIf=\"f.name.errors.maxlength\">\r\n            Name must not exceed 13 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label>Start date</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"startDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"examPeriod.startDate\" \r\n          id = \"startDate\"\r\n          name=\"startDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.startDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.startDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.startDate.errors.required\">Start date is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>End date</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"endDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"examPeriod.endDate\" \r\n          id = \"endDate\"\r\n          name=\"endDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.endDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.endDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.endDate.errors.required\">End date is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Payment amount</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"paymentAmount\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"examPeriod.paymentAmount\" \r\n          id = \"paymentAmount\"\r\n          name=\"paymentAmount\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.paymentAmount.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.paymentAmount.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.paymentAmount.errors.required\">Payment is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"submitted\">\r\n        <h4> The exam period was added successfully!</h4>\r\n        <button class=\"btn btn-success\" (click)=\"newExamPeriod()\"> Add new exam period </button>\r\n    </div>\r\n\r\n      <div class=\"form-group\">\r\n       <button (click)=\"saveExamPeriod()\" class=\"btn btn-success\"> Submit </button>\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"onReset()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ExamService } from '../exam/exam.service';\r\nimport { Exam } from '../model/exam';\r\n\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Enrollment } from '../model/enrollment';\r\nimport { ExamPeriod } from '../model/exam-period';\r\n\r\n@Component({\r\n  selector: 'app-admin-add-exam',\r\n  templateUrl: './admin-add-exam.component.html',\r\n  styleUrls: ['./admin-add-exam.component.css']\r\n})\r\nexport class AdminAddExamComponent implements OnInit {\r\n\r\n  exam: Exam = new Exam({\r\n    grade: 5,\r\n    points:0,\r\n    examDate : new Date(), \r\n    status : true,\r\n\r\n    examPeriod:null,\r\n    enrollment:null\r\n\r\n\r\n\r\n  });\r\n  form!: FormGroup;\r\n  submitted = false; \r\n\r\n  constructor(private examService: ExamService, private formBuilder: FormBuilder){ }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      \r\n      grade: [5, Validators.required],\r\n      points: [0, Validators.required],\r\n      examDate: ['', Validators.required], \r\n      status: [true, Validators.required]\r\n    });\r\n  } get f(): { [key: string]: AbstractControl} { return this.form.controls;}\r\n\r\n  saveExam() {\r\n    const data = {\r\n      grade : this.exam.grade,\r\n      points : this.exam.points,\r\n      examDate : this.exam.examDate, \r\n      status: this.exam.status\r\n    }; \r\n\r\n    this.examService.create(data)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.submitted = true; \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  newExam(){\r\n    this.submitted = false; \r\n    this.exam = {\r\n      grade: 5, \r\n      points: 0,\r\n      examDate: new Date(),\r\n      status: true,\r\n      enrollment: null,\r\n      examPeriod:null\r\n    };\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n\r\n}}\r\n","<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n      <label>Grade</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"grade\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"exam.grade\" \r\n          id = \"grade\"\r\n          name=\"grade\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.grade.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.grade.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.grade.errors.required\">ECTS is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n      <label>Points</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"points\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"exam.points\" \r\n          id = \"points\"\r\n          name=\"points\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.points.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.points.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.points.errors.required\">ECTS is required</div>\r\n        </div>\r\n      </div>\r\n       <div class=\"form-group\">\r\n      <label>Exam date</label>\r\n        <input\r\n          type=\"date\"\r\n          formControlName=\"examDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"exam.examDate\" \r\n          id = \"examDate\"\r\n          name=\"examDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.examDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.examDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.examDate.errors.required\">ECTS is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Status</label>\r\n        <input type=\"checkbox\"\r\n         formControlName=\"status\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"exam.status\" \r\n          id = \"status\"\r\n          name=\"status\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.status.errors }\"\r\n        >\r\n        <div *ngIf=\"submitted && f.status.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.status.errors.required\">Status is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"submitted\">\r\n        <h4> The exam  was added successfully!</h4>\r\n        <button class=\"btn btn-success\" (click)=\"newExam()\"> Add new exam  </button>\r\n    </div>\r\n\r\n      <div class=\"form-group\">\r\n       <button (click)=\"saveExam()\" class=\"btn btn-success\"> Submit </button>\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"onReset()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          Reset\r\n      </button>\r\n      \r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n\r\n      \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FinancialcardService } from '../financial-card/financialcard.service';\r\nimport { FinancialCard } from '../model/financial-card';\r\n\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-admin-add-financial-card',\r\n  templateUrl: './admin-add-financial-card.component.html',\r\n  styleUrls: ['./admin-add-financial-card.component.css']\r\n})\r\nexport class AdminAddFinancialCardComponent implements OnInit {\r\n\r\n  financialCard: FinancialCard = new FinancialCard({\r\n    initialState: 0, \r\n    totalPayment : 0, \r\n    totalPayout : 0, \r\n    totalCost : 0\r\n  });\r\n\r\n  form! : FormGroup; \r\n  submitted = false; \r\n\r\n  constructor(private financialCardService : FinancialcardService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      initialState: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(9)\r\n        ] \r\n      ],\r\n      totalPayment: [\r\n        '',\r\n       [\r\n        Validators.required, \r\n        Validators.minLength(3),\r\n        Validators.maxLength(9)\r\n       ]\r\n      ],\r\n      totalPayout: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(9)\r\n        ] \r\n      ],\r\n      totalCost: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(9)\r\n        ] \r\n      ],\r\n    });\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl} {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit() : void {\r\n    this.submitted = true; \r\n\r\n    if(this.form.invalid) {\r\n      return; \r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset() : void {\r\n    this.submitted = false; \r\n    this.form.reset();\r\n  }\r\n\r\n  saveFinancialCard() {\r\n    const data = {\r\n      initialState: this.financialCard.initialState, \r\n      totalPayment : this.financialCard.totalPayment, \r\n      totalPayout : this.financialCard.totalPayout, \r\n      totalCost : this.financialCard.totalCost\r\n    }; \r\n\r\n    this.financialCardService.create(data)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.submitted = true; \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  newFinancialCard(){\r\n    this.submitted = false; \r\n    this.financialCard = {\r\n      initialState: 0, \r\n      totalPayment : 0, \r\n      totalPayout : 0, \r\n      totalCost : 0\r\n    };\r\n  }\r\n\r\n}\r\n","<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label>Initial state</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"initialState\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"financialCard.initialState\" \r\n          id = \"initialState\"\r\n          name=\"initialState\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.initialState.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.initialState.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.initialState.errors.required\"> Initial state is required! </div>\r\n          <div *ngIf=\"f.initialState.errors.minlength\">\r\n            Initial state must have at least 3 digits! \r\n          </div>\r\n          <div *ngIf=\"f.initialState.errors.maxlength\">\r\n            Initial state must not exceed 9 digits\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label>Total payment</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"totalPayment\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"financialCard.totalPayment\" \r\n          id = \"totalPayment\"\r\n          name=\"totalPayment\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.totalPayment.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.totalPayment.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.totalPayment.errors.required\">Total payment is required</div>\r\n          <div *ngIf=\"f.totalPayment.errors.minlength\">\r\n            Initial state must have at least 3 digits! \r\n          </div>\r\n          <div *ngIf=\"f.totalPayment.errors.maxlength\">\r\n            Initial state must not exceed 9 digits\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Total payout</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"totalPayout\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"financialCard.totalPayout\" \r\n          id = \"totalPayout\"\r\n          name=\"totalPayout\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.totalPayout.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.totalPayout.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.totalPayout.errors.required\">Total payout is required</div>\r\n          <div *ngIf=\"f.totalPayout.errors.minlength\">\r\n            Initial state must have at least 3 digits! \r\n          </div>\r\n          <div *ngIf=\"f.totalPayout.errors.maxlength\">\r\n            Initial state must not exceed 9 digits\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Total cost</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"totalCost\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"financialCard.totalCost\" \r\n          id = \"totalCost\"\r\n          name=\"totalCost\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.totalCost.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.totalCost.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.totalCost.errors.required\">Total cost is required</div>\r\n          <div *ngIf=\"f.totalCost.errors.minlength\">\r\n            Initial state must have at least 3 digits! \r\n          </div>\r\n          <div *ngIf=\"f.totalCost.errors.maxlength\">\r\n            Initial state must not exceed 9 digits\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"submitted\">\r\n        <h4> The initial financial card is created! Good luck..</h4>\r\n        <button class=\"btn btn-success\" (click)=\"newFinancialCard()\"> Add new financial card </button>\r\n    </div>\r\n\r\n      <div class=\"form-group\">\r\n       <button (click)=\"saveFinancialCard()\" class=\"btn btn-success\"> Submit </button>\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"onReset()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, AbstractControl, Validators } from '@angular/forms';\r\nimport { Payment } from '../model/payment';\r\nimport { PaymentService } from '../payment/payment.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-add-payment',\r\n  templateUrl: './admin-add-payment.component.html',\r\n  styleUrls: ['./admin-add-payment.component.css']\r\n})\r\nexport class AdminAddPaymentComponent implements OnInit {\r\n\r\n  payment: Payment = new Payment({\r\n    dateOfPayment: null,\r\n    paymentDescription : '', \r\n    paymentAmount: 0\r\n    });\r\n\r\n  form! : FormGroup; \r\n  submitted = false;\r\n\r\n  constructor(private paymentService: PaymentService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      dateOfPayment: [\r\n        '',\r\n        [\r\n          Validators.required\r\n        ] \r\n      ],\r\n      paymentDescription: [\r\n        '',\r\n       [\r\n        Validators.required, \r\n       ]\r\n      ],\r\n      paymentAmount: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(9)\r\n        ] \r\n      ],\r\n    });\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl} {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit() : void {\r\n    this.submitted = true; \r\n\r\n    if(this.form.invalid) {\r\n      return; \r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset() : void {\r\n    this.submitted = false; \r\n    this.form.reset();\r\n  }\r\n\r\n  savePayment() {\r\n    const data = {\r\n      dateOfPayment: this.payment.dateOfPayment,\r\n      paymentDescription : this.payment.paymentDescription, \r\n      paymentAmount: this.payment.paymentAmount,\r\n    }; \r\n\r\n    this.paymentService.create(data)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.submitted = true; \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  newPayment(){\r\n    this.submitted = false; \r\n    this.payment = {\r\n      dateOfPayment: null,\r\n      paymentDescription : '', \r\n      paymentAmount: 0\r\n    };\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <div class=\"form-group\">\r\n        <label>Date of payment</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"dateOfPayment\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"payment.dateOfPayment\" \r\n          id = \"dateOfPayment\"\r\n          name=\"dateOfPayment\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.dateOfPayment.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.dateOfPayment.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.dateOfPayment.errors.required\"> You must enter date of payment! </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label>Payment description</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"paymentDescription\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"payment.paymentDescription\" \r\n          id = \"paymentDescription\"\r\n          name=\"paymentDescription\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.paymentDescription.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.paymentDescription.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.paymentDescription.errors.required\">Payment description is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Payment amount</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"paymentAmount\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"payment.paymentAmount\" \r\n          id = \"paymentAmount\"\r\n          name=\"paymentAmount\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.paymentAmount.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.paymentAmount.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.paymentAmount.errors.required\">Payment is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"submitted\">\r\n        <h4> Payment is created! </h4>\r\n    </div>\r\n\r\n      <div class=\"form-group\">\r\n       <button (click)=\"savePayment()\" class=\"btn btn-success\"> Submit </button>\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"onReset()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Exam } from '../model/exam';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\nimport { PreexamObligationService } from '../preexam-obligation/preexam-obligation.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-add-preexam-obligation',\r\n  templateUrl: './admin-add-preexam-obligation.component.html',\r\n  styleUrls: ['./admin-add-preexam-obligation.component.css']\r\n})\r\nexport class AdminAddPreexamObligationComponent implements OnInit {\r\n\r\n  preexamObligation: PreexamObligation = new PreexamObligation({\r\n    dateOfObligation: null, \r\n    location : '',\r\n    points: 0\r\n  });\r\n  submitted = false;\r\n  form!: FormGroup;\r\n\r\n  constructor(private preexamObligationService: PreexamObligationService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      dateOfObligation: [\r\n        '',\r\n        [\r\n          Validators.required\r\n        ] \r\n      ],\r\n      location: ['', Validators.required], \r\n    });\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl} { return this.form.controls;}\r\n\r\n  savePreexamObligation(): void {\r\n    const data = {\r\n      dateOfObligation: this.preexamObligation.dateOfObligation,\r\n      location: this.preexamObligation.location\r\n    };\r\n\r\n    this.preexamObligationService.create(data)\r\n      .subscribe(\r\n        response => {\r\n          console.log(response);\r\n          this.submitted = true;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  newPreexamObligation(): void {\r\n    this.submitted = false;\r\n    this.preexamObligation = {\r\n     dateOfObligation: '',\r\n     location: '',\r\n     points: 0,\r\n     passed: false, \r\n     exam: null,\r\n     preexamObligationStatus: null, \r\n     preexamObligationType: null\r\n    };\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"text\">Date of obligation</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"dateOfObligation\"\r\n          required\r\n          [(ngModel)]=\"preexamObligation.dateOfObligation\"\r\n          name=\"dateOfObligation\"\r\n          formControlName=\"dateOfObligation\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.dateOfObligation.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.dateOfObligation.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.dateOfObligation.errors.required\">Date of obligation is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"location\">Location</label>\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"location\"\r\n          required\r\n          [(ngModel)]=\"preexamObligation.location\"\r\n          name=\"location\"\r\n          formControlName=\"location\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.location.errors.required\">Location is required! </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"submitted\">\r\n        <h4> The preexam obligation was added successfully!</h4>\r\n        <button class=\"btn btn-success\" (click)=\"newPreexamObligation()\"> Add new preexam obligation </button>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n       <button (click)=\"savePreexamObligation()\" class=\"btn btn-success\"> Submit </button>\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"onReset()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Professor } from '../model/professor';\r\nimport {  ProfessorService } from '../professor/professor.service';\r\n@Component({\r\n  selector: 'app-admin-add-professor',\r\n  templateUrl: './admin-add-professor.component.html',\r\n  styleUrls: ['./admin-add-professor.component.css']\r\n})\r\nexport class AdminAddProfessorComponent implements OnInit {\r\n\r\n  professor : Professor = new Professor({\r\n    user: null,\r\n\r\n    firstName: '', \r\n    lastName: ''\r\n\r\n  });\r\n\r\n  form!: FormGroup;\r\n  submitted = false; \r\n\r\n  constructor(private pService: ProfessorService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      firstName: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      lastName: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ]  });\r\n\r\n    }get f(): { [key: string]: AbstractControl} { return this.form.controls;}\r\n\r\n    saveProfessor() {\r\n      const data = {\r\n      \r\n       firstName: this.professor.firstName, \r\n       lastName: this.professor.lastName, \r\n       \r\n      }; \r\n  \r\n      this.pService.create(data)\r\n      .subscribe(\r\n        response => {\r\n          console.log(response); \r\n          this.submitted = true; \r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  \r\n    newProfessor(){\r\n      this.submitted = false; \r\n      this.professor = {\r\n        user: null,\r\n       \r\n        firstName: '', \r\n        lastName: '' \r\n      };\r\n    }\r\n  \r\n    onSubmit(): void {\r\n      this.submitted = true;\r\n  \r\n      if (this.form.invalid) {\r\n        return;\r\n      }\r\n  \r\n      console.log(JSON.stringify(this.form.value, null, 2));\r\n    }\r\n  \r\n    onReset(): void {\r\n      this.submitted = false;\r\n      this.form.reset();\r\n    }\r\n  \r\n\r\n}\r\n","<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n        <label>First name</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"firstName\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"professor.firstName\" \r\n          id = \"firstName\"\r\n          name=\"firstName\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.firstName.errors.required\">first name is required</div>\r\n          <div *ngIf=\"f.firstName.errors.minlength\">\r\n         \r\n                  First must be at least 5 characters\r\n                </div>\r\n                <div *ngIf=\"f.firstName.errors.maxlength\">\r\n                  First must not exceed 20 characters\r\n                </div>\r\n            </div>\r\n        \r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"lastName\"> Last name </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"lastName\"\r\n            [(ngModel)] = \"professor.lastName\"\r\n            name=\"lastName\"\r\n            formControlName=\"lastName\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">First name</div>\r\n                <div *ngIf=\"f.lastName.errors.minlength\">\r\n                  Last name must be at least 5 characters\r\n                </div>\r\n                <div *ngIf=\"f.firstName.errors.maxlength\">\r\n                  Last name must not exceed 20 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n<div *ngIf=\"submitted\">\r\n            <h4> The professor was added successfully!</h4>\r\n            <button class=\"btn btn-success\" (click)=\"newProfessor()\"> Add new professor </button>\r\n        </div>\r\n    \r\n          <div class=\"form-group\">\r\n           <button (click)=\"saveProfessor()\" class=\"btn btn-success\"> Submit </button>\r\n            <button\r\n              type=\"button\"\r\n              (click)=\"onReset()\"\r\n              class=\"btn btn-warning float-right\"\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n    \r\n</div>\r\n</form>","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { JwtserviceutilsService } from '../jwtservice/jwtserviceutils.service';\r\nimport { RoleGuard } from '../login/role.service';\r\nimport { Authority } from '../model/authority';\r\nimport { Student } from '../model/student';\r\nimport { User } from '../model/user';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-add-student',\r\n  templateUrl: './admin-add-student.component.html',\r\n  styleUrls: ['./admin-add-student.component.css']\r\n})\r\nexport class AdminAddStudentComponent implements OnInit {\r\n\r\n  student : Student = new Student({\r\n    user: null,\r\n    cardNumber : '',\r\n    firstName: '', \r\n    lastName: '', \r\n    phoneNumber: '', \r\n    email: '', \r\n    umnc: '', \r\n    startedCollegeIn: 1999, \r\n    modelNumber: 2, \r\n    referenceNumber :'', \r\n    accountNumber : '', \r\n    cardAmount : 124223,\r\n    typeOfFinancing : null, \r\n    financialCards: null\r\n\r\n  });\r\n\r\n  /*\r\n  user: User; \r\n  authorityName: string = '';\r\n  unassignedAuthorities: Authority[] = [];\r\n  password = '';\r\n*/\r\n\r\n  form!: FormGroup;\r\n  submitted = false; \r\n\r\n  constructor(private studentService: StudentService,\r\n     private formBuilder: FormBuilder,\r\n     private roleService: RoleGuard,\r\n     private location : Location) { \r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      firstName: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      lastName: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      cardNumber: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      phoneNumber: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n        ] \r\n      ],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      umnc: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(9),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      startedCollegeIn: [0, Validators.required], \r\n      modelNumber: [0, Validators.required],\r\n      referenceNumber: ['', Validators.required],\r\n      accountNumber: ['', Validators.required],\r\n      cardAmount: [0, Validators.required] \r\n    });\r\n\r\n    /*\r\n    this.roleService.getUnassignedAuthorities('newUser').\r\n        subscribe(res => {\r\n          this.unassignedAuthorities = []; \r\n          this.unassignedAuthorities = res.body == null ? []:res.body;\r\n        })\r\n        */\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl} { return this.form.controls;}\r\n\r\n  saveStudent() {\r\n    const data = {\r\n     cardNumber : this.student.cardNumber,\r\n     firstName: this.student.firstName, \r\n     lastName: this.student.lastName, \r\n     phoneNumber: this.student.phoneNumber, \r\n     email: this.student.email, \r\n     umnc: this.student.umnc, \r\n     startedCollegeIn: this.student.startedCollegeIn, \r\n     modelNumber: this.student.modelNumber,  \r\n     referenceNumber : this.student.referenceNumber, \r\n     accountNumber : this.student.accountNumber, \r\n     cardAmount : this.student.cardAmount,\r\n     typeOfFinancing : this.student.typeOfFinancing, \r\n     financialCards: this.student.financialCards\r\n    }; \r\n\r\n    this.studentService.create(data)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.submitted = true; \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n  saveUser() {\r\n    this.user.password = this.password; \r\n    this.roleService.addUser(this.user)\r\n    .subscribe(res => {\r\n      this.goBack();\r\n    });\r\n }\r\n */\r\n\r\n goBack() : void {\r\n   this.location.back();\r\n }\r\n\r\n  newStudent(){\r\n    this.submitted = false; \r\n    this.student = {\r\n      user: null,\r\n      cardNumber : '',\r\n      firstName: '', \r\n      lastName: '', \r\n      phoneNumber: '', \r\n      email: '', \r\n      umnc: '', \r\n      startedCollegeIn: 1999, \r\n      modelNumber: 2, \r\n      referenceNumber :'', \r\n      accountNumber : '', \r\n      cardAmount : 124223,\r\n      typeOfFinancing : null, \r\n      financialCards: null\r\n    };\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n  /*\r\n  assignAuthority() {\r\n    console.log(\"Authority: \" + this.authorityName); \r\n    const a = this.unassignedAuthorities.filter(a => a.name === this.authorityName)[0];\r\n    if(a!== undefined) {\r\n      this.user.authorities.push(a);\r\n      this.unassignedAuthorities = this.unassignedAuthorities.filter( a => a.name!==this.authorityName);\r\n      console.log(JSON.stringify(this.unassignedAuthorities));\r\n    }else {\r\n      alert(\"Select authority for user!\");\r\n    }\r\n  }\r\n\r\n  removeAuthority(name: string) {\r\n    var a:Authority[] = this.user.authorities.filter(a => a.name===name)\r\n    this.user.authorities=this.user.authorities.filter(a => a.name!==name);\r\n    this.unassignedAuthorities.push(a[0]);\r\n    console.log(JSON.stringify(this.unassignedAuthorities));\r\n  } \r\n  */\r\n}\r\n","\r\n<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      \r\n        <div class=\"form-group\">\r\n            <label for=\"cardNumber\"> Card number </label>\r\n            <input type=\"text\" \r\n            class=\"form-control\"\r\n            id=\"cardNumber\"\r\n            [(ngModel)]=\"student.cardNumber\" \r\n            name=\"cardNumber\"\r\n            formControlName=\"cardNumber\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.cardNumber.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.cardNumber.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.cardNumber.errors.required\">Card number</div>\r\n                <div *ngIf=\"f.name.errors.minlength\">\r\n                  Card number must be at least 3 characters!\r\n                </div>\r\n                <div *ngIf=\"f.name.errors.maxlength\">\r\n                  Card number must not exceed 13 characters!\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"firstName\"> First name </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"firstName\"\r\n            [(ngModel)] = \"student.firstName\"\r\n            name=\"firstName\"\r\n            formControlName=\"firstName\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.firstName.errors.required\">First name</div>\r\n                <div *ngIf=\"f.firstName.errors.minlength\">\r\n                  First must be at least 3 characters\r\n                </div>\r\n                <div *ngIf=\"f.firstName.errors.maxlength\">\r\n                  First must not exceed 13 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"lastName\"> Last name </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"lastName\"\r\n            [(ngModel)] = \"student.lastName\"\r\n            name=\"lastName\"\r\n            formControlName=\"lastName\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">First name</div>\r\n                <div *ngIf=\"f.lastName.errors.minlength\">\r\n                  Last name must be at least 3 characters\r\n                </div>\r\n                <div *ngIf=\"f.firstName.errors.maxlength\">\r\n                  Last name must not exceed 13 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"umnc\"> UMNC </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"umnc\"\r\n            [(ngModel)] = \"student.umnc\"\r\n            name=\"umnc\"\r\n            formControlName=\"umnc\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.umnc.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.umnc.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.umnc.errors.required\"> UMNC </div>\r\n                <div *ngIf=\"f.umnc.errors.minlength\">\r\n                  UMNC must be at least 9 characters\r\n                </div>\r\n                <div *ngIf=\"f.umnc.errors.maxlength\">\r\n                 UMNC must not exceed 13 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"email\"> Email </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"email\"\r\n            [(ngModel)] = \"student.email\"\r\n            name=\"email\"\r\n            formControlName=\"email\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\r\n            >\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.email.errors.email\">Invalid email format</div>\r\n            </div>\r\n         </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"phoneNumber\"> Phone number </label>\r\n            <input type=\"string\"\r\n            class=\"form-control\"\r\n            id=\"phoneNumber\"\r\n            [(ngModel)] = \"student.phoneNumber\"\r\n            name=\"phoneNumber\"\r\n            formControlName=\"phoneNumber\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.phoneNumber.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.phoneNumber.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.phoneNumber.errors.required\">Phone number is required</div>\r\n            </div>\r\n        </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"startedCollegeIn\"> Started college in </label>\r\n                <input type=\"number\"\r\n                class=\"form-control\"\r\n                id=\"startedCollegeIn\"\r\n                [(ngModel)] = \"student.startedCollegeIn\"\r\n                name=\"startedCollegeIn\"\r\n                formControlName=\"startedCollegeIn\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.startedCollegeIn.errors }\"\r\n                />\r\n                <div *ngIf=\"submitted && f.startedCollegeIn.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.startedCollegeIn.errors.required\"> The year of the start of college is mandatory</div>\r\n                </div>\r\n            </div>\r\n\r\n        <div class=\"form-group\">\r\n                <label for=\"modelNumber\"> Model number </label>\r\n                <input type=\"number\"\r\n                class=\"form-control\"\r\n                id=\"modelNumber\"\r\n                [(ngModel)] = \"student.modelNumber\"\r\n                name=\"modelNumber\"\r\n                formControlName=\"modelNumber\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.modelNumber.errors }\"\r\n                />\r\n                <div *ngIf=\"submitted && f.modelNumber.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.modelNumber.errors.required\"> Model number is required! </div>\r\n                </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n                <label for=\"referenceNumber\"> Reference number </label>\r\n                <input type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"referenceNumber\"\r\n                [(ngModel)] = \"student.referenceNumber\"\r\n                name=\"referenceNumber\"\r\n                formControlName=\"referenceNumber\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.referenceNumber.errors }\"\r\n                />\r\n                <div *ngIf=\"submitted && f.referenceNumber.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.referenceNumber.errors.required\"> Reference number is required! </div>\r\n                </div>    \r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n                <label for=\"accountNumber\"> Account number </label>\r\n                <input type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"accountNumber\"\r\n                [(ngModel)] = \"student.accountNumber\"\r\n                name=\"accountNumber\"\r\n                formControlName=\"accountNumber\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.accountNumber.errors }\"\r\n                />\r\n                <div *ngIf=\"submitted && f.accountNumber.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.accountNumber.errors.required\"> Account number is required! </div>\r\n                </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"cardAmount\"> Card amount </label>\r\n          <input type=\"number\"\r\n          class=\"form-control\"\r\n          id=\"cardAmount\"\r\n          [(ngModel)] = \"student.cardAmount\"\r\n          name=\"cardAmount\"\r\n          formControlName=\"cardAmount\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.cardAmount.errors }\"\r\n          />\r\n          <div *ngIf=\"submitted && f.cardAmount.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.cardAmount.errors.required\"> Card amount is required! </div>\r\n          </div>\r\n         </div>\r\n<!--\r\n\r\n  <div class=\"row w-50\">\r\n          <div class=\"col-md-8 pr-md-1 ml-5\">\r\n            <h4>Roles</h4>\r\n            <div *ngIf=\"user.authorities.length > 0\">\r\n              <table class=\"table\">\r\n                <tr *ngFor=\"let authority of user.authorities\">\r\n                  <td class=\"color_text\">\r\n                    {{authority.name}}\r\n                    <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"removeAuthority(role.name)\">X</button>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>  \r\n          </div>\r\n          <div *ngIf=\"unassignedAuthorities.length > 0\" class=\"col-md-7 pr-md-1 btn-group ml-5\">\r\n            <select class='form-control' [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone: true}\">\r\n              <option *ngFor=\"let authortiy of unassignedAuthorities\" class=\"black_text_color\" value=\"{{role.name}}\">{{role.name}}</option>\r\n            </select>\r\n            <div class=\"text-right\">\r\n              <button type=\"button\" class=\"btn btn-primary btn-sm ml-1\" (click)=\"assignRole()\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n-->\r\n       \r\n        <div *ngIf=\"submitted\">\r\n            <h4> The student was added successfully!</h4>\r\n            <button class=\"btn btn-success\" (click)=\"newStudent()\"> Add new student </button>\r\n        </div>\r\n    \r\n          <div class=\"form-group\">\r\n           <button (click)=\"saveStudent()\" class=\"btn btn-success\"> ✓ </button>\r\n            <button\r\n              type=\"button\"\r\n              (click)=\"onReset()\"\r\n              class=\"btn btn-warning float-right\"\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n\r\n          <!--\r\n\r\n<div class=\"text-right mt-2\">\r\n            <button type=\"button\" class=\" btn btn-fill btn-danger\" (click)=\"saveUser()\"></button>\r\n            <button type=\"button\" class=\" btn btn-fill btn-danger ml-1\" (click)=\"goBack()\">X</button>\r\n          </div>\r\n\r\n          -->\r\n          \r\n    </form>\r\n</div>\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Authority } from '../model/authority';\r\nimport { User } from '../model/user';\r\nimport { UsersService } from '../users/users.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-add-user',\r\n  templateUrl: './admin-add-user.component.html',\r\n  styleUrls: ['./admin-add-user.component.css']\r\n})\r\nexport class AdminAddUserComponent implements OnInit {\r\n\r\n  user: User = new User({\r\n    username: '', \r\n    password: '', \r\n    authorities: []\r\n  });\r\n\r\n  authorityName: string = '';\r\n  unassignedAuthorities : Authority[] = [];\r\n\r\n  form!: FormGroup;\r\n  submitted = false; \r\n\r\n  constructor(private userService: UsersService,\r\n    private formBuilder: FormBuilder) {\r\n    \r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      username: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl} { return this.form.controls;}\r\n\r\n  saveUser() {\r\n    const data = {\r\n      username : this.user.username,\r\n      password : this.user.password\r\n    }; \r\n\r\n    this.userService.create(data)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.submitted = true; \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  newUser(){\r\n    this.submitted = false; \r\n    this.user = {\r\n      username: '', \r\n      password: '',\r\n      authorities: []\r\n    };\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n  removeAuthority(name:string) {\r\n    var a:Authority[] = this.user.authorities.filter(a => a.name===name)\r\n    this.user.authorities=this.user.authorities.filter(a => a.name!==name);\r\n    this.unassignedAuthorities.push(a[0]);\r\n    console.log(JSON.stringify(this.unassignedAuthorities));\r\n  }\r\n\r\n  assignAuthority() {\r\n    const a = this.unassignedAuthorities.filter(a => a.name===this.authorityName)[0];\r\n    if(a!==undefined){\r\n      this.user.authorities.push(a);\r\n      this.unassignedAuthorities=this.unassignedAuthorities.filter(a => a.name!==this.authorityName);\r\n        }else{\r\n      alert(\"Please select one of the roles!\")\r\n    }\r\n  }\r\n}\r\n","\r\n<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"username\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.username\" \r\n          id = \"username\"\r\n          name=\"username\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n          <div *ngIf=\"f.username.errors.minlength\">\r\n            Username must be at least 3 characters long\r\n          </div>\r\n          <div *ngIf=\"f.username.errors.maxlength\">\r\n            Username must not exceed 13 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.password\" \r\n          id = \"password\"\r\n          name=\"password\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    \r\n      <div *ngIf=\"submitted\">\r\n        <h4> The user was added successfully!</h4>\r\n        <button class=\"btn btn-success\" (click)=\"newUser()\"> Add new user </button>\r\n    </div>\r\n\r\n      <div class=\"form-group\">\r\n       <button (click)=\"saveUser()\" class=\"btn btn-success\"> Submit </button>\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"onReset()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n\r\n    <!--\r\n      <div>\r\n      <h4>Authorities</h4>\r\n        <table class=\"table\">\r\n          <tr *ngFor=\"let authority of user.authorities\">\r\n            <td class=\"color_text\">\r\n              {{authority.name}}\r\n              <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"removeAuthority(authority.name)\">X</button>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n       \r\n  <div *ngIf=\"unassignedAuthorities.length > 0\" class=\"col-md-7 pr-md-1 btn-group ml-5\">\r\n      <select class='form-control' [(ngModel)]=\"authorityName\" [ngModelOptions]=\"{standalone: true}\">\r\n        <option *ngFor=\"let authority of unassignedAuthorities\" class=\"black_text_color\" value=\"{{authority.name}}\">{{authority.name}}</option>\r\n      </select>\r\n      <div class=\"text-right\">\r\n        <button type=\"button\" class=\"btn btn-primary btn-sm ml-1\" (click)=\"assignAuthority()\">+</button>\r\n      </div>\r\n    </div>\r\n  -->\r\n  </div>\r\n","<!-- start date, end date, name-->\r\n<div>\r\n    <h3> Course </h3>\r\n</div>\r\n\r\n<table class=\"table table-bordered\">\r\n    <tr>\r\n        <th>Title</th>\r\n        <th>Start date</th>\r\n        <th>End date</th>\r\n        <th>Course code</th>\r\n        <th>ECTS</th>\r\n        <th>Enrollments</th>\r\n        <th>Teachings</th>\r\n    </tr>\r\n    <tr *ngFor=\"let course of courses\">\r\n        <td>\r\n            {{course.title}}\r\n        </td>\r\n        <td>\r\n            {{course.startDate}}\r\n        </td>\r\n        <td>\r\n            {{course.endDate}}\r\n        </td>\r\n        <td>\r\n            {{course.courseCode}}\r\n        </td>\r\n        <td>\r\n            {{course.ECTS}}\r\n        </td>\r\n        <td>\r\n            {{course.enrollments}}\r\n        </td>\r\n        <td>\r\n            {{course.teachings}}\r\n        </td>\r\n        <td>\r\n            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(course)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(course.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n        </td>\r\n    </tr>\r\n</table>\r\n<div class=\"right\">\r\n    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CoursesService } from '../courses/courses.service';\r\nimport { Course } from '../model/course';\r\n\r\n@Component({\r\n  selector: 'app-admin-course',\r\n  templateUrl: './admin-course.component.html',\r\n  styleUrls: ['./admin-course.component.css']\r\n})\r\nexport class AdminCourseComponent implements OnInit {\r\n\r\n  courses : Course[];\r\n  subscription : Subscription;\r\n\r\n  constructor(private courseService: CoursesService, private router: Router) {\r\n    this.getCourses();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourses();\r\n  }\r\n  getCourses(){\r\n    this.courseService.getCourses().subscribe(res =>\r\n      this.courses = res.body);\r\n  }\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addCourse\"]);\r\n  }\r\n  gotoEdit(course : Course) : void {\r\n    this.router.navigate(['/editCourse', course.id]);\r\n  } \r\n  deleteCourse(courseId : number) : void {\r\n    this.courseService.deleteCourse(courseId).subscribe(\r\n      () => this.getCourses()\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CoursesService } from '../courses/courses.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Course } from '../model/course';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-course',\r\n  templateUrl: './admin-details-course.component.html',\r\n  styleUrls: ['./admin-details-course.component.css']\r\n})\r\nexport class AdminDetailsCourseComponent implements OnInit {\r\n  \r\n  currentCourse : Course = {} as Course; \r\n  message = '';\r\n  form!: FormGroup;\r\n  submitted=false;\r\n\r\n  constructor(private coursesService: CoursesService, private route : ActivatedRoute, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getCourse(this.route.snapshot.paramMap.get('id'));\r\n    this.form = this.formBuilder.group({\r\n      title: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(4),\r\n          Validators.maxLength(25)\r\n        ] \r\n      ],\r\n      courseCode:['', Validators.required],\r\n      startDate: ['', Validators.required], \r\n      endDate: ['', Validators.required],\r\n      ects: [0, Validators.required]\r\n    });\r\n  }\r\n\r\n  getCourse(id: any) : void {\r\n    this.coursesService.get(id)\r\n    .subscribe(\r\n      data => {\r\n        this.currentCourse = data; \r\n        console.log(data); \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updateCourse(): void {\r\n    this.coursesService.update(this.currentCourse.id, this.currentCourse)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        ;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteCourse() : void {\r\n    this.coursesService.delete(this.currentCourse.id)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.router.navigate(['/courses']);\r\n      }, \r\n      error => {\r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"edit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n        <label for=\"text\"> Title </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"title\"\r\n            [(ngModel)] = \"currentCourse.title\"\r\n            name=\"title\"\r\n            formControlName=\"title\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.title.errors.required\">Title</div>\r\n                <div *ngIf=\"f.title.errors.minlength\">\r\n                  Title must be at least 4 characters\r\n                </div>\r\n                <div *ngIf=\"f.title.errors.maxlength\">\r\n                  Title must not exceed 25 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n        <label>Course code</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"courseCode\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentCourse.courseCode\" \r\n          id = \"courseCode\"\r\n          name=\"courseCode\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.courseCode.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.courseCode.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.courseCode.errors.required\">Course code is required</div>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n        <label>Start date</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"startDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentCourse.startDate\" \r\n          id = \"startDate\"\r\n          name=\"startDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.startDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.startDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.startDate.errors.required\">Start date is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>End date</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"endDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentCourse.endDate\" \r\n          id = \"endDate\"\r\n          name=\"endDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.endDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.endDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.endDate.errors.required\">End date is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>ECTS</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"ects\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentCourse.ects\" \r\n          id = \"ects\"\r\n          name=\"ects\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.ects.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.ects.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.ects.errors.required\">ECTS is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n      class=\"badge badge-primary mr-2\"\r\n      (click)=\"deleteCourse()\"        \r\n      > Delete course </button>\r\n\r\n      <button\r\n      type=\"submit\"\r\n      class=\"badge badge-success\"\r\n      (click)=\"updateCourse()\"\r\n      > Edit selected course </button>\r\n      <p> {{message}}</p>\r\n\r\n\r\n  <div *ngIf=\"!currentCourse\">\r\n      <br/>\r\n      <p>Course is unavailable!</p>\r\n  </div>\r\n</form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-document',\r\n  templateUrl: './admin-details-document.component.html',\r\n  styleUrls: ['./admin-details-document.component.css']\r\n})\r\nexport class AdminDetailsDocumentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"edit-form\">\r\n\r\n</div>","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExamPeriodService } from '../exam-period/exam-period.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ExamPeriod } from '../model/exam-period';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-details-exam-period',\r\n  templateUrl: './admin-details-exam-period.component.html',\r\n  styleUrls: ['./admin-details-exam-period.component.css']\r\n})\r\nexport class AdminDetailsExamPeriodComponent implements OnInit {\r\n\r\n  currentExamPeriod : ExamPeriod = {} as ExamPeriod;  \r\n  message = '';\r\n  form!: FormGroup;\r\n  submitted=false;\r\n\r\n  constructor(private examPeriodService: ExamPeriodService,\r\n    private route : ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getExamPeriod(this.route.snapshot.paramMap.get('id'));\r\n    this.form = this.formBuilder.group({\r\n      name: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      startDate: ['', Validators.required], \r\n      endDate: ['', Validators.required],\r\n      paymentAmount: [0, Validators.required]\r\n    });\r\n  }\r\n\r\n  getExamPeriod(id: any) : void {\r\n    this.examPeriodService.get(id)\r\n    .subscribe(\r\n      data => {\r\n        this.currentExamPeriod = data; \r\n        console.log(data); \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updateExamPeriod(): void {\r\n    this.examPeriodService.update(this.currentExamPeriod.id, this.currentExamPeriod)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.message =  \"You successfully updated exam period!\";\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteExamPeriod() : void {\r\n    this.examPeriodService.delete(this.currentExamPeriod.id)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.message =  \"You successfully deleted exam period!\";\r\n        this.router.navigate(['/examPeriods']);\r\n      }, \r\n      error => {\r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n}\r\n","\r\n\r\n<div class=\"edit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"name\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentExamPeriod.name\" \r\n          id = \"name\"\r\n          name=\"name\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.name.errors.required\">Name of exam period is required</div>\r\n          <div *ngIf=\"f.name.errors.minlength\">\r\n            Name must be at least 3 characters\r\n          </div>\r\n          <div *ngIf=\"f.name.errors.maxlength\">\r\n            Name must not exceed 13 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label>Start date</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"startDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentExamPeriod.startDate\" \r\n          id = \"startDate\"\r\n          name=\"startDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.startDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.startDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.startDate.errors.required\">Start date is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>End date</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"endDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentExamPeriod.endDate\" \r\n          id = \"endDate\"\r\n          name=\"endDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.endDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.endDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.endDate.errors.required\">End date is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Payment amount</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"paymentAmount\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentExamPeriod.paymentAmount\" \r\n          id = \"paymentAmount\"\r\n          name=\"paymentAmount\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.paymentAmount.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.paymentAmount.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.paymentAmount.errors.required\">Payment is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n      class=\"badge badge-primary mr-2\"\r\n      (click)=\"deleteExamPeriod()\"        \r\n      > Delete exam period </button>\r\n\r\n      <button\r\n      type=\"submit\"\r\n      class=\"badge badge-success\"\r\n      (click)=\"updateExamPeriod()\"\r\n      > Edit selected exam period </button>\r\n      <p> {{message}}</p>\r\n\r\n\r\n  <div *ngIf=\"!currentExamPeriod\">\r\n      <br/>\r\n      <p>Exam period is unavailable!</p>\r\n  </div>\r\n</form>\r\n</div>\r\n\r\n  \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExamService } from '../exam/exam.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-exam',\r\n  templateUrl: './admin-details-exam.component.html',\r\n  styleUrls: ['./admin-details-exam.component.css']\r\n})\r\nexport class AdminDetailsExamComponent implements OnInit {\r\n\r\n  constructor(private examService: ExamService, private route : ActivatedRoute, private router: Router, private formBuilder: FormBuilder) { }\r\n  currentExam : any | null; \r\n  message = '';\r\n  form!: FormGroup;\r\n  submitted=false;\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getExam(this.route.snapshot.paramMap.get('id'));\r\n    this.form = this.formBuilder.group({\r\n      \r\n      points:[0, Validators.required],\r\n      examDate: ['', Validators.required], \r\n      grade: [0, Validators.required]\r\n    });\r\n  }\r\n\r\n  getExam(id: any) : void {\r\n    this.examService.get(id)\r\n    .subscribe(\r\n      data => {\r\n        this.currentExam = data; \r\n        console.log(data); \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updateExam(): void {\r\n    this.examService.update(this.currentExam.id, this.currentExam)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        //this.message =  \"You successfully updated exam period!\";\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteExam() : void {\r\n    this.examService.delete(this.currentExam.id)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.router.navigate(['/exams']);\r\n      }, \r\n      error => {\r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n","<div class=\"edit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n        <label for=\"grade\"> Grade </label>\r\n            <input type=\"number\"\r\n            class=\"form-control\"\r\n            id=\"grade\"\r\n            [(ngModel)] = \"currentExam.grade\"\r\n            name=\"grade\"\r\n            formControlName=\"grade\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.grade.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.grade.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.grade.errors.required\">Grade is required</div>\r\n                \r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n        <label>Points</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"points\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentExam.points\" \r\n          id = \"points\"\r\n          name=\"points\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.points.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.points.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.points.errors.required\">Points are required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Exam date</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"examDate\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentExam.examDate\" \r\n          id = \"examDate\"\r\n          name=\"examDate\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.examDate.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.examDate.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.examDate.errors.required\">Exam date is required</div>\r\n        </div>\r\n      </div><div class=\"form-group\">\r\n        <label>Status</label>\r\n        <input type=\"checkbox\"\r\n         formControlName=\"status\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentExam.status\" \r\n          id = \"status\"\r\n          name=\"status\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.status.errors }\"\r\n        >\r\n        <div *ngIf=\"submitted && f.status.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.status.errors.required\">Status is required</div>\r\n        </div>\r\n      </div>\r\n\r\n           <button\r\n      class=\"badge badge-primary mr-2\"\r\n      (click)=\"deleteExam()\"        \r\n      > Delete exam </button>\r\n\r\n      <button\r\n      type=\"submit\"\r\n      class=\"badge badge-success\"\r\n      (click)=\"updateExam()\"\r\n      > Edit selected exam </button>\r\n      <p> {{message}}</p>\r\n\r\n\r\n  <div *ngIf=\"!currentExam\">\r\n      <br/>\r\n      <p>Exam is unavailable!</p>\r\n  </div>\r\n</form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FinancialcardService } from '../financial-card/financialcard.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-financial-card',\r\n  templateUrl: './admin-details-financial-card.component.html',\r\n  styleUrls: ['./admin-details-financial-card.component.css']\r\n})\r\nexport class AdminDetailsFinancialCardComponent implements OnInit {\r\n\r\n  currentFinancialCard: any | null; \r\n  message = '';\r\n  form!: FormGroup;\r\n  submitted=false;\r\n\r\n  constructor(private financialCardService: FinancialcardService, private route : ActivatedRoute, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getFinancialCard(this.route.snapshot.paramMap.get('id'));\r\n    this.form = this.formBuilder.group({\r\n      initialState: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(9)\r\n        ] \r\n      ],\r\n      totalPayment: [\r\n        '',\r\n       [\r\n        Validators.required, \r\n        Validators.minLength(3),\r\n        Validators.maxLength(9)\r\n       ]\r\n      ],\r\n      totalPayout: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(9)\r\n        ] \r\n      ],\r\n      totalCost: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(9)\r\n        ] \r\n      ],\r\n    });\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n  getFinancialCard(id: any) : void {\r\n    this.financialCardService.get(id)\r\n    .subscribe(\r\n      data => {\r\n        this.currentFinancialCard = data; \r\n        console.log(data); \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updateFinancialCard(): void {\r\n    this.financialCardService.update(this.currentFinancialCard.id, this.currentFinancialCard)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.router.navigate(['/financialCards']);\r\n        //this.message =  \"You successfully updated financial card!\";\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteFinancialCard() : void {\r\n    this.financialCardService.delete(this.currentFinancialCard.id)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.router.navigate(['/financialCards']);\r\n      }, \r\n      error => {\r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"submit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label>Initial state</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"initialState\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentFinancialCard.initialState\" \r\n          id = \"initialState\"\r\n          name=\"initialState\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.initialState.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.initialState.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.initialState.errors.required\"> Initial state is required! </div>\r\n          <div *ngIf=\"f.initialState.errors.minlength\">\r\n            Initial state must have at least 3 digits! \r\n          </div>\r\n          <div *ngIf=\"f.initialState.errors.maxlength\">\r\n            Initial state must not exceed 9 digits\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label>Total payment</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"totalPayment\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentFinancialCard.totalPayment\" \r\n          id = \"totalPayment\"\r\n          name=\"totalPayment\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.totalPayment.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.totalPayment.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.totalPayment.errors.required\">Total payment is required</div>\r\n          <div *ngIf=\"f.totalPayment.errors.minlength\">\r\n            Initial state must have at least 3 digits! \r\n          </div>\r\n          <div *ngIf=\"f.totalPayment.errors.maxlength\">\r\n            Initial state must not exceed 9 digits\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Total payout</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"totalPayout\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentFinancialCard.totalPayout\" \r\n          id = \"totalPayout\"\r\n          name=\"totalPayout\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.totalPayout.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.totalPayout.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.totalPayout.errors.required\">Total payout is required</div>\r\n          <div *ngIf=\"f.totalPayout.errors.minlength\">\r\n            Initial state must have at least 3 digits! \r\n          </div>\r\n          <div *ngIf=\"f.totalPayout.errors.maxlength\">\r\n            Initial state must not exceed 9 digits\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Total cost</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"totalCost\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentFinancialCard.totalCost\" \r\n          id = \"totalCost\"\r\n          name=\"totalCost\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.totalCost.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.totalCost.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.totalCost.errors.required\">Total cost is required</div>\r\n          <div *ngIf=\"f.totalCost.errors.minlength\">\r\n            Initial state must have at least 3 digits! \r\n          </div>\r\n          <div *ngIf=\"f.totalCost.errors.maxlength\">\r\n            Initial state must not exceed 9 digits\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n      class=\"badge badge-primary mr-2\"\r\n      (click)=\"deleteFinancialCard()\"        \r\n      > Delete financial card </button>\r\n\r\n      <button\r\n      type=\"submit\"\r\n      class=\"badge badge-success\"\r\n      (click)=\"updateFinancialCard()\"\r\n      > Update selected financial card </button>\r\n      <p> {{message}}</p>\r\n\r\n    <div *ngIf=\"!currentFinancialCard\">\r\n      <br/>\r\n      <p> Unavailable financial card!</p>\r\n    </div>\r\n    </form>\r\n  </div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PaymentService } from '../payment/payment.service';\r\nimport { FormBuilder, FormGroup, AbstractControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-payment',\r\n  templateUrl: './admin-details-payment.component.html',\r\n  styleUrls: ['./admin-details-payment.component.css']\r\n})\r\nexport class AdminDetailsPaymentComponent implements OnInit {\r\n\r\n  currentPayment: any | null; \r\n  message = '';\r\n  form! : FormGroup; \r\n  submitted = false; \r\n\r\n  constructor(private paymentService: PaymentService, private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = ''; \r\n    this.getPayment(this.route.snapshot.paramMap.get('id'));\r\n    this.form = this.formBuilder.group({\r\n      dateOfPayment: [\r\n        '',\r\n        [\r\n          Validators.required\r\n        ] \r\n      ],\r\n      paymentDescription: [\r\n        '',\r\n       [\r\n        Validators.required, \r\n       ]\r\n      ],\r\n      paymentAmount: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(9)\r\n        ] \r\n      ],\r\n    });\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl} {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit() : void {\r\n    this.submitted = true; \r\n\r\n    if(this.form.invalid) {\r\n      return; \r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset() : void {\r\n    this.submitted = false; \r\n    this.form.reset();\r\n  }\r\n\r\n  getPayment(id: any) : void {\r\n    this.paymentService.get(id)\r\n    .subscribe(\r\n      data => {\r\n        this.currentPayment = data; \r\n        console.log(data); \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updatePayment(): void {\r\n    this.paymentService.update(this.currentPayment.id, this.currentPayment)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.router.navigate(['/payments']);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deletePayment() : void {\r\n    this.paymentService.delete(this.currentPayment.id)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.router.navigate(['/payments']);\r\n      }, \r\n      error => {\r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"edit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label>Date of payment</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"dateOfPayment\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentPayment.dateOfPayment\" \r\n          id = \"dateOfPayment\"\r\n          name=\"dateOfPayment\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.dateOfPayment.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.dateOfPayment.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.dateOfPayment.errors.required\"> You must enter date of payment! </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label>Payment description</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"paymentDescription\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentPayment.paymentDescription\" \r\n          id = \"paymentDescription\"\r\n          name=\"paymentDescription\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.paymentDescription.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.paymentDescription.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.paymentDescription.errors.required\">Payment description is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Payment amount</label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"number\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentPayment.paymentAmount\" \r\n          id = \"paymentAmount\"\r\n          name=\"paymentAmount\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.paymentAmount.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.paymentAmount.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.paymentAmount.errors.required\">Payment amount is required</div>\r\n          <div *ngIf=\"f.paymentAmount.errors.minlength\">\r\n            Payment amount must have at least 3 digits! \r\n          </div>\r\n          <div *ngIf=\"f.paymentAmount.errors.maxlength\">\r\n            Payment amount must not exceed 9 digits!\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n      class=\"badge badge-primary mr-2\"\r\n      (click)=\"deletePayment()\"        \r\n      > Delete payment </button>\r\n\r\n      <button\r\n      type=\"submit\"\r\n      class=\"badge badge-success\"\r\n      (click)=\"updatePayment()\"\r\n      > Edit selected payment </button>\r\n      <p> {{message}}</p>\r\n    \r\n\r\n    <div *ngIf=\"!currentPayment\">\r\n      <br/>\r\n      <p>This payment is unavailable!</p>\r\n    </div>\r\n    </form>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-preexam-obligation-type',\r\n  templateUrl: './admin-details-preexam-obligation-type.component.html',\r\n  styleUrls: ['./admin-details-preexam-obligation-type.component.css']\r\n})\r\nexport class AdminDetailsPreexamObligationTypeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin-details-preexam-obligation-type works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\nimport { PreexamObligationService } from '../preexam-obligation/preexam-obligation.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-preexam-obligation',\r\n  templateUrl: './admin-details-preexam-obligation.component.html',\r\n  styleUrls: ['./admin-details-preexam-obligation.component.css']\r\n})\r\nexport class AdminDetailsPreexamObligationComponent implements OnInit {\r\n\r\n  currentPreexamobligation : PreexamObligation = {} as PreexamObligation; \r\n  message = '';\r\n  form!: FormGroup; \r\n  submitted = false; \r\n\r\n  constructor(private preexamObligationService: PreexamObligationService, private route : ActivatedRoute, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getPreexamObligation(this.route.snapshot.paramMap.get('id'));\r\n    this.form = this.formBuilder.group({\r\n      dateOfObligation: [\r\n        '',\r\n        [\r\n          Validators.required\r\n        ] \r\n      ],\r\n      location: ['', Validators.required], \r\n    });\r\n  }\r\n\r\n  getPreexamObligation(id: any) : void {\r\n    this.preexamObligationService.get(id)\r\n    .subscribe(\r\n      data => {\r\n        this.currentPreexamobligation = data; \r\n        console.log(data); \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updatePreexamObligation(): void {\r\n    this.preexamObligationService.update(this.currentPreexamobligation.id, this.currentPreexamobligation)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.message =  \"You successfully updated preexam obligation!\";\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deletePreexamObligation() : void {\r\n    this.preexamObligationService.delete(this.currentPreexamobligation.id)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.router.navigate(['/preexamObligations']);\r\n      }, \r\n      error => {\r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"edit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n            <label for=\"text\">Date of obligation</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"dateOfObligation\"\r\n              required\r\n              [(ngModel)]=\"currentPreexamobligation.dateOfObligation\"\r\n              name=\"dateOfObligation\"\r\n              formControlName=\"dateOfObligation\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && f.dateOfObligation.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.dateOfObligation.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.dateOfObligation.errors.required\">Date of obligation is required</div>\r\n            </div>\r\n          </div>\r\n    \r\n          <div class=\"form-group\">\r\n            <label for=\"location\">Location</label>\r\n            <input\r\n              class=\"form-control\"\r\n              id=\"location\"\r\n              required\r\n              [(ngModel)]=\"currentPreexamobligation.location\"\r\n              name=\"location\"\r\n              formControlName=\"location\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.location.errors.required\">Location is required! </div>\r\n            </div>\r\n          </div>\r\n \r\n        <button\r\n        class=\"badge badge-primary mr-2\"\r\n        (click)=\"deletePreexamObligation()\"        \r\n        > Delete preexam obligation </button>\r\n\r\n        <button\r\n        type=\"submit\"\r\n        class=\"badge badge-success\"\r\n        (click)=\"updatePreexamObligation()\"\r\n        > Edit selected preexam obligation </button>\r\n        <p> {{message}}</p>\r\n\r\n    <div *ngIf=\"!currentPreexamobligation\">\r\n        <br/>\r\n        <p>Preexam obligation is unavailable!</p>\r\n    </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Professor} from '../model/professor';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n@Component({\r\n  selector: 'app-admin-details-professor',\r\n  templateUrl: './admin-details-professor.component.html',\r\n  styleUrls: ['./admin-details-professor.component.css']\r\n})\r\nexport class AdminDetailsProfessorComponent implements OnInit {\r\n  currentProfessor: Professor = {} as Professor;\r\n  message = ''; \r\n  form!: FormGroup; \r\n  submitted=false; \r\n\r\n  constructor(private pService: ProfessorService, private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getProfessor(this.route.snapshot.paramMap.get('id'));\r\n    this.form = this.formBuilder.group({\r\n      firstName: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(20)\r\n        ] \r\n      ],\r\n      lastName: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(20)\r\n        ] \r\n      ]});\r\n    }\r\n      getProfessor(id: any) : void {\r\n        this.pService.get(id)\r\n        .subscribe(\r\n          data => {\r\n            this.currentProfessor = data; \r\n            console.log(data); \r\n          }, \r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      }\r\n      \r\n      updateProfessor(): void {\r\n        this.pService.update(this.currentProfessor.id, this.currentProfessor)\r\n        .subscribe(\r\n          response => {\r\n            this.message= 'profesor updated! ';\r\n            console.log(response); \r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      }\r\n    \r\n      deleteProfessor() : void {\r\n        this.pService.delete(this.currentProfessor.id)\r\n        .subscribe(\r\n          response => {\r\n            console.log(response); \r\n            this.router.navigate(['/professors']);\r\n          }, \r\n          error => {\r\n            console.log(error); \r\n          }\r\n        );\r\n      }\r\n    \r\n      get f(): { [key: string]: AbstractControl } {\r\n        return this.form.controls;\r\n      }\r\n    \r\n      onSubmit(): void {\r\n        this.submitted = true;\r\n    \r\n        if (this.form.invalid) {\r\n          return;\r\n        }\r\n    \r\n        console.log(JSON.stringify(this.form.value, null, 2));\r\n      }\r\n    \r\n      onReset(): void {\r\n        this.submitted = false;\r\n        this.form.reset();\r\n      }\r\n    \r\n  \r\n\r\n}\r\n","<div class=\"edit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        \r\n         <div class=\"form-group\">\r\n            <label for=\"firstName\"> First name </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"firstName\"\r\n            [(ngModel)] = \"currentProfessor.firstName\"\r\n            name=\"firstName\"\r\n            formControlName=\"firstName\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.firstName.errors.required\">First name</div>\r\n                <div *ngIf=\"f.firstName.errors.minlength\">\r\n                  First must be at least 3 characters\r\n                </div>\r\n                <div *ngIf=\"f.firstName.errors.maxlength\">\r\n                  First must not exceed 20 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n         <div class=\"form-group\">\r\n            <label for=\"lastName\"> Last name </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"lastName\"\r\n            [(ngModel)] = \"currentProfessor.lastName\"\r\n            name=\"lastName\"\r\n            formControlName=\"lastName\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">First name</div>\r\n                <div *ngIf=\"f.lastName.errors.minlength\">\r\n                  Last name must be at least 3 characters\r\n                </div>\r\n                <div *ngIf=\"f.firstName.errors.maxlength\">\r\n                  Last name must not exceed 20 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n           <button\r\n        class=\"badge badge-primary mr-2\"\r\n        (click)=\"deleteProfessor()\"        \r\n        > Delete professor </button>\r\n\r\n    <button\r\n     type=\"submit\"\r\n    class=\"badge badge-success\"\r\n    (click)=\"updateProfessor()\"> Edit selected professor </button>\r\n        <p> {{message}}</p>\r\n\r\n    <div *ngIf=\"!currentProfessor\">\r\n        <br/>\r\n        <p>Professor is unavailable!</p>\r\n    </div>\r\n\r\n</form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Student } from '../model/student';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-student',\r\n  templateUrl: './admin-details-student.component.html',\r\n  styleUrls: ['./admin-details-student.component.css']\r\n})\r\nexport class AdminDetailsStudentComponent implements OnInit {\r\n\r\n  currentStudent: Student = {} as Student;\r\n  message = ''; \r\n  form!: FormGroup; \r\n  submitted=false; \r\n\r\n  constructor(private studentService: StudentService, private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getStudent(this.route.snapshot.paramMap.get('id'));\r\n    this.form = this.formBuilder.group({\r\n      firstName: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      lastName: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      cardNumber: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      phoneNumber: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n        ] \r\n      ],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      umnc: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(9),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      startedCollegeIn: [0, Validators.required], \r\n      modelNumber: [0, Validators.required],\r\n      referenceNumber: ['', Validators.required],\r\n      accountNumber: ['', Validators.required],\r\n      cardAmount: [0, Validators.required] \r\n    });\r\n  }\r\n\r\n  getStudent(id: any) : void {\r\n    this.studentService.get(id)\r\n    .subscribe(\r\n      data => {\r\n        this.currentStudent = data; \r\n        console.log(data); \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updateStudent(): void {\r\n    this.studentService.update(this.currentStudent.id, this.currentStudent)\r\n    .subscribe(\r\n      response => {\r\n        this.message= 'Student updated! ';\r\n        console.log(response); \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteStudent() : void {\r\n    this.studentService.delete(this.currentStudent.id)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.router.navigate(['/students']);\r\n      }, \r\n      error => {\r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"edit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n            <label for=\"cardNumber\"> Card number </label>\r\n            <input \r\n            type=\"text\" \r\n            class=\"form-control\"\r\n            [(ngModel)]=\"currentStudent.cardNumber\" \r\n            id=\"cardNumber\"\r\n            name=\"cardNumber\"\r\n            formControlName=\"cardNumber\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.cardNumber.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.cardNumber.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.cardNumber.errors.required\">Card number</div>\r\n                <div *ngIf=\"f.name.errors.minlength\">\r\n                  Card number must be at least 3 characters!\r\n                </div>\r\n                <div *ngIf=\"f.name.errors.maxlength\">\r\n                  Card number must not exceed 13 characters!\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"firstName\"> First name </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"firstName\"\r\n            [(ngModel)] = \"currentStudent.firstName\"\r\n            name=\"firstName\"\r\n            formControlName=\"firstName\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.firstName.errors.required\">First name</div>\r\n                <div *ngIf=\"f.firstName.errors.minlength\">\r\n                  First must be at least 3 characters\r\n                </div>\r\n                <div *ngIf=\"f.firstName.errors.maxlength\">\r\n                  First must not exceed 13 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"lastName\"> Last name </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"lastName\"\r\n            [(ngModel)] = \"currentStudent.lastName\"\r\n            name=\"lastName\"\r\n            formControlName=\"lastName\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">First name</div>\r\n                <div *ngIf=\"f.lastName.errors.minlength\">\r\n                  Last name must be at least 3 characters\r\n                </div>\r\n                <div *ngIf=\"f.firstName.errors.maxlength\">\r\n                  Last name must not exceed 13 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"umnc\"> UMNC </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"umnc\"\r\n            [(ngModel)] = \"currentStudent.umnc\"\r\n            name=\"umnc\"\r\n            formControlName=\"umnc\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.umnc.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.umnc.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.umnc.errors.required\"> UMNC </div>\r\n                <div *ngIf=\"f.umnc.errors.minlength\">\r\n                  UMNC must be at least 9 characters\r\n                </div>\r\n                <div *ngIf=\"f.umnc.errors.maxlength\">\r\n                 UMNC must not exceed 13 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"email\"> Email </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"email\"\r\n            [(ngModel)] = \"currentStudent.email\"\r\n            name=\"email\"\r\n            formControlName=\"email\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\r\n            >\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.email.errors.email\">Email is invalid</div>\r\n            </div>\r\n         </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"phoneNumber\"> Phone number </label>\r\n            <input type=\"string\"\r\n            class=\"form-control\"\r\n            id=\"phoneNumber\"\r\n            [(ngModel)] = \"currentStudent.phoneNumber\"\r\n            name=\"phoneNumber\"\r\n            formControlName=\"phoneNumber\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.phoneNumber.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.phoneNumber.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.phoneNumber.errors.required\">Phone number is required</div>\r\n            </div>\r\n        </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"startedCollegeIn\"> Started college in </label>\r\n                <input type=\"number\"\r\n                class=\"form-control\"\r\n                id=\"startedCollegeIn\"\r\n                [(ngModel)] = \"currentStudent.startedCollegeIn\"\r\n                name=\"startedCollegeIn\"\r\n                formControlName=\"startedCollegeIn\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.startedCollegeIn.errors }\"\r\n                />\r\n                <div *ngIf=\"submitted && f.startedCollegeIn.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.startedCollegeIn.errors.required\"> The year of the start of college is mandatory</div>\r\n                </div>\r\n            </div>\r\n\r\n        <div class=\"form-group\">\r\n                <label for=\"modelNumber\"> Model number </label>\r\n                <input type=\"number\"\r\n                class=\"form-control\"\r\n                id=\"modelNumber\"\r\n                [(ngModel)] = \"currentStudent.modelNumber\"\r\n                name=\"modelNumber\"\r\n                formControlName=\"modelNumber\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.modelNumber.errors }\"\r\n                />\r\n                <div *ngIf=\"submitted && f.modelNumber.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.modelNumber.errors.required\"> Model number is required! </div>\r\n                </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n                <label for=\"referenceNumber\"> Reference number </label>\r\n                <input type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"referenceNumber\"\r\n                [(ngModel)] = \"currentStudent.referenceNumber\"\r\n                name=\"referenceNumber\"\r\n                formControlName=\"referenceNumber\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.referenceNumber.errors }\"\r\n                />\r\n                <div *ngIf=\"submitted && f.referenceNumber.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.referenceNumber.errors.required\"> Reference number is required! </div>\r\n                </div>    \r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n                <label for=\"accountNumber\"> Account number </label>\r\n                <input type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"accountNumber\"\r\n                [(ngModel)] = \"currentStudent.accountNumber\"\r\n                name=\"accountNumber\"\r\n                formControlName=\"accountNumber\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.accountNumber.errors }\"\r\n                />\r\n                <div *ngIf=\"submitted && f.accountNumber.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.accountNumber.errors.required\"> Account number is required! </div>\r\n                </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"cardAmount\"> Card amount </label>\r\n            <input type=\"number\"\r\n            class=\"form-control\"\r\n            id=\"cardAmount\"\r\n            [(ngModel)] = \"currentStudent.cardAmount\"\r\n            name=\"cardAmount\"\r\n            formControlName=\"cardAmount\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.cardAmount.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.cardAmount.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.cardAmount.errors.required\"> Card amount is required! </div>\r\n            </div>\r\n           </div>\r\n   \r\n        <button\r\n        class=\"badge badge-primary mr-2\"\r\n        (click)=\"deleteStudent()\"        \r\n        > Delete student </button>\r\n\r\n    <button\r\n     type=\"submit\"\r\n    class=\"badge badge-success\"\r\n    (click)=\"updateStudent()\"> Edit selected student </button>\r\n        <p> {{message}}</p>\r\n\r\n    <div *ngIf=\"!currentStudent\">\r\n        <br/>\r\n        <p>Student is unavailable!</p>\r\n    </div>\r\n\r\n</form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UsersService } from '../users/users.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-details-user',\r\n  templateUrl: './admin-details-user.component.html',\r\n  styleUrls: ['./admin-details-user.component.css']\r\n})\r\nexport class AdminDetailsUserComponent implements OnInit {\r\n\r\n  currentUser: any | null;\r\n  message = ''; \r\n  form!: FormGroup; \r\n  submitted = false;\r\n\r\n  constructor(private userService: UsersService,\r\n    private route: ActivatedRoute, \r\n    private router: Router, \r\n    private formBuilder: FormBuilder) {this.currentUser = {}; }\r\n\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getUser(this.route.snapshot.paramMap.get('id'));\r\n    this.form = this.formBuilder.group({\r\n      username: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  getUser(id: any) : void {\r\n    this.userService.get(id)\r\n    .subscribe(\r\n      data => {\r\n        this.currentUser = data; \r\n        console.log(data); \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updateUser(): void {\r\n    this.userService.update(this.currentUser.id, this.currentUser)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.message =  \"You successfully updated user!\";\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteUser() : void {\r\n    this.userService.delete(this.currentUser.id)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.message =  \"You successfully deleted user!\";\r\n        this.router.navigate(['/users']);\r\n      }, \r\n      error => {\r\n        console.log(error); \r\n      }\r\n    );\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n}\r\n","\r\n<div class=\"edit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"username\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentUser.username\" \r\n          id = \"username\"\r\n          name=\"username\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n          <div *ngIf=\"f.username.errors.minlength\">\r\n            Username must be at least 3 characters long\r\n          </div>\r\n          <div *ngIf=\"f.username.errors.maxlength\">\r\n            Username must not exceed 13 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"currentUser.password\" \r\n          id = \"password\"\r\n          name=\"password\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n        />\r\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n      class=\"badge badge-primary mr-2\"\r\n      (click)=\"deleteUser()\"        \r\n      > Delete user </button>\r\n\r\n      <button\r\n      type=\"submit\"\r\n      class=\"badge badge-success\"\r\n      (click)=\"updateUser()\"\r\n      > Edit selected user </button>\r\n      <p> {{message}}</p>\r\n\r\n\r\n  <div *ngIf=\"!currentUser\">\r\n      <br/>\r\n      <p>User is unavailable!</p>\r\n  </div>\r\n</form>\r\n</div>\r\n\r\n  \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-documents',\r\n  templateUrl: './admin-documents.component.html',\r\n  styleUrls: ['./admin-documents.component.css']\r\n})\r\nexport class AdminDocumentsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin-documents works!</p>\r\n","<!-- Exam grade points examDate status -->\r\n<div>\r\n    <h3> Exam </h3>\r\n</div>\r\n\r\n<table class=\"table table-bordered\">\r\n    <tr>\r\n        <th> Grade </th>\r\n        <th> Points</th>\r\n        <th> Exam date</th>\r\n        <th> Status </th>\r\n    </tr>\r\n    <tr *ngFor=\"let exam of exams\">\r\n        <td>\r\n            {{exam.grade}}\r\n        </td>\r\n        <td>\r\n            {{exam.points}}\r\n        </td>\r\n        <td>\r\n            {{exam.examDate}}\r\n        </td>\r\n        <td>\r\n            {{exam.status}}\r\n        </td>\r\n        <td>\r\n            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(exam)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(exam.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n        </td>\r\n    </tr>\r\n</table>\r\n<div class=\"right\">\r\n    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ExamService } from '../exam/exam.service';\r\nimport { Exam } from '../model/exam';\r\n\r\n@Component({\r\n  selector: 'app-admin-exam',\r\n  templateUrl: './admin-exam.component.html',\r\n  styleUrls: ['./admin-exam.component.css']\r\n})\r\nexport class AdminExamComponent implements OnInit {\r\n\r\n  exams : Exam[];\r\n  subscription : Subscription;\r\n\r\n  constructor(private examService: ExamService, private router: Router) { \r\n  this.getExams();\r\n}\r\n  ngOnInit(): void {\r\n    this.getExams();\r\n  }\r\n\r\n  getExams(){\r\n    this.examService.getExams().subscribe(res =>\r\n       this.exams = res.body);\r\n  }\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addExam\"]);\r\n  }\r\n  gotoEdit(exam : Exam) : void {\r\n    this.router.navigate(['/editExam', exam.id]);\r\n  } \r\n\r\n  deleteExam(examId : number) : void {\r\n    this.examService.deleteExam(examId).subscribe(\r\n      () => this.getExams()\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h3> Financial card </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            <th> Initial state </th>\r\n            <th> Total payment<th>\r\n            <th> Total payout </th>\r\n            <th> Total cost </th>\r\n        </tr>\r\n        <tr *ngFor=\"let financialCard of financialCards\">\r\n            <td>\r\n                {{financialCard.initialState}}\r\n            </td>\r\n            <td>\r\n                {{financialCard.totalPayment}}\r\n            </td>\r\n            <td>\r\n                {{examPeriod.totalPayout}}\r\n            </td>\r\n            <td>\r\n                {{examPeriod.totalCost}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(financialCard)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(financialCard.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>\r\n","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { FinancialcardService } from '../financial-card/financialcard.service';\r\nimport { FinancialCard } from '../model/financial-card';\r\n\r\n@Component({\r\n  selector: 'app-admin-financial-card',\r\n  templateUrl: './admin-financial-card.component.html',\r\n  styleUrls: ['./admin-financial-card.component.css']\r\n})\r\nexport class AdminFinancialCardComponent implements OnInit {\r\n\r\n  financialCards : FinancialCard[];\r\n  subscription : Subscription; \r\n\r\n  constructor(private financialCardService : FinancialcardService, private router : Router) { \r\n    this.getFinancialCards();\r\n  }\r\n\r\n  getFinancialCards(){\r\n    this.financialCardService.getFinancialCards().subscribe(res =>\r\n      this.financialCards = res.body);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getFinancialCards();\r\n  }\r\n\r\n  gotoAdd(): void {\r\n    this.router.navigate([\"/addFinancialCard\"]); \r\n  }\r\n\r\n  gotoEdit(financialCard : FinancialCard) : void {\r\n    this.router.navigate(['/editFinancialCard', financialCard.id]);\r\n  }\r\n\r\n  deleteFinancialCard(financialCardId : number) : void {\r\n    this.financialCardService.deleteFinancialCard(financialCardId).subscribe(\r\n      () => this.getFinancialCards()\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by title \"\r\n        [(ngModel)]=\"title\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchTitle()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-12\">\r\n    <pagination-controls\r\n      previousLabel=\"Prev\"\r\n      nextLabel=\"Next\"\r\n      [responsive]=\"true\"\r\n      (pageChange)=\"handlePageChange($event)\"\r\n    ></pagination-controls>\r\n  </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <h4> List of courses</h4>\r\n      <ul class=\"list-group\">\r\n        <li\r\n          class=\"list-group-item\"\r\n          *ngFor=\"\r\n            let course of courses | paginate : {\r\n              itemsPerPage: pageSize, \r\n              currentPage: page, \r\n              totalItems: count\r\n          };\r\n          let i = index\r\n          \"\r\n          [class.active]=\"i == currentIndex\"\r\n          (click)=\"setActiveCourse(course, i)\"\r\n        >\r\n          {{ course.title }}\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-3\">    \r\n        Items per Page:\r\n        <select (change)=\"handlePageSizeChange($event)\">\r\n          <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentCourse\">\r\n        <h4> Course </h4>\r\n        <div>\r\n          <label><strong>Title :</strong></label>\r\n           {{ currentCourse.title }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Course code :</strong></label> {{ currentCourse.courseCode }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Start date:</strong></label>\r\n          {{ currentCourse.startDate}}\r\n        </div>\r\n        <div>\r\n          <label><strong>End date:</strong></label>\r\n          {{ currentCourse.endDate}}\r\n        </div>\r\n        <div>\r\n            <label><strong>ECTS:</strong></label>\r\n            {{ currentCourse.ects}}\r\n          </div>\r\n\r\n        <a class=\"badge badge-warning\" routerLink=\"/courses/{{ currentCourse.id }}\">\r\n          Edit\r\n        </a>\r\n      </div>\r\n  \r\n      <div *ngIf=\"!currentCourse\">\r\n        <br />\r\n        <p>To see details click on one course</p>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { CoursesService } from '../courses/courses.service';\r\nimport { Course } from '../model/course';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-list-course',\r\n  templateUrl: './admin-list-course.component.html',\r\n  styleUrls: ['./admin-list-course.component.css']\r\n})\r\nexport class AdminListCourseComponent implements OnInit {\r\n\r\n\r\n  courses: Course[] = [];\r\n  currentCourse: Course; \r\n  currentIndex = -1; \r\n  title = '';\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 3;\r\n  pageSizes = [3, 6, 9];\r\n\r\n  constructor(private cService: CoursesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveCourses(); \r\n  }\r\n\r\n  getRequestParams(searchTitle: string, page: number, pageSize: number): any {\r\n    let params: any = {};\r\n\r\n    if (searchTitle) {\r\n      params[`title`] = searchTitle;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrieveCourses(): void {\r\n    const params = this.getRequestParams(this.title, this.page, this.pageSize);\r\n\r\n    this.cService.getAll(params)\r\n    .subscribe(\r\n      response => {\r\n        const { courses, totalItems } = response;\r\n        this.courses = courses;\r\n        this.count = totalItems;\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.retrieveCourses();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.retrieveCourses();\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveCourses();\r\n    this.currentIndex = -1; \r\n    this.currentCourse= null;\r\n  }\r\n\r\n  setActiveCourse(course : null | any, index=-1) : void {\r\n    this.currentCourse = course;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  searchTitle(): void {\r\n    this.page = 1;\r\n    this.retrieveCourses();\r\n  }\r\n  \r\n\r\n\r\n}\r\n","\r\n<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by name \"\r\n        [(ngModel)]=\"name\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchName()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-12\">\r\n    <pagination-controls\r\n      previousLabel=\"Prev\"\r\n      nextLabel=\"Next\"\r\n      [responsive]=\"true\"\r\n      (pageChange)=\"handlePageChange($event)\"\r\n    ></pagination-controls>\r\n  </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <h4> List of exam periods </h4>\r\n      <ul class=\"list-group\">\r\n        <li\r\n          class=\"list-group-item\"\r\n          *ngFor=\"\r\n            let examPeriod of examPeriods | paginate : {\r\n              itemsPerPage: pageSize, \r\n              currentPage: page, \r\n              totalItems: count\r\n          };\r\n          let i = index\r\n          \"\r\n          [class.active]=\"i == currentIndex\"\r\n          (click)=\"setActiveExamPeriod(examPeriod, i)\"\r\n        >\r\n          {{ examPeriod.name }}\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-3\">    \r\n        Items per Page:\r\n        <select (change)=\"handlePageSizeChange($event)\">\r\n          <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentExamPeriod\">\r\n        <h4> Exam period </h4>\r\n        <div>\r\n          <label><strong>Name :</strong></label> {{ currentExamPeriod.name }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Start date:</strong></label>\r\n          {{ currentExamPeriod.startDate}}\r\n        </div>\r\n        <div>\r\n          <label><strong>End date:</strong></label>\r\n          {{ currentExamPeriod.endDate}}\r\n        </div>\r\n        <div>\r\n            <label><strong>Payment amount:</strong></label>\r\n            {{ currentExamPeriod.paymentAmount}}\r\n          </div>\r\n\r\n        <a class=\"badge badge-warning\" routerLink=\"/examPeriods/{{ currentExamPeriod.id }}\">\r\n          Edit\r\n        </a>\r\n      </div>\r\n  \r\n      <div *ngIf=\"!currentExamPeriod\">\r\n        <br />\r\n        <p>To see details click on one particular exam period!</p>\r\n      </div>\r\n         \r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { ExamPeriodService } from '../exam-period/exam-period.service';\r\nimport { ExamPeriod } from '../model/exam-period';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-exam-period',\r\n  templateUrl: './admin-list-exam-period.component.html',\r\n  styleUrls: ['./admin-list-exam-period.component.css']\r\n})\r\nexport class AdminListExamPeriodComponent implements OnInit {\r\n\r\n  examPeriods: ExamPeriod[] = [];\r\n  currentExamPeriod: ExamPeriod; \r\n  currentIndex = -1; \r\n  name = '';\r\n\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 3;\r\n  pageSizes = [3, 6, 9];\r\n\r\n  constructor(private examPeriodService: ExamPeriodService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveExamPeriods(); \r\n  }\r\n\r\n  getRequestParams(searchName: string, page: number, pageSize: number): any {\r\n    let params: any = {};\r\n\r\n    if (searchName) {\r\n      params[`name`] = searchName;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrieveExamPeriods(): void {\r\n    const params = this.getRequestParams(this.name, this.page, this.pageSize);\r\n\r\n    this.examPeriodService.getAll(params)\r\n    .subscribe(\r\n      response => {\r\n        const { examPeriods, totalItems } = response;\r\n        this.examPeriods = examPeriods;\r\n        this.count = totalItems;\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.retrieveExamPeriods();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.retrieveExamPeriods();\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveExamPeriods();\r\n    this.currentIndex = -1; \r\n    this.currentExamPeriod= null;\r\n  }\r\n\r\n  setActiveExamPeriod(examPeriod : null | any, index=-1) : void {\r\n    this.currentExamPeriod = examPeriod;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  searchName(): void {\r\n    this.page = 1;\r\n    this.retrieveExamPeriods();\r\n  }\r\n  \r\n}\r\n","\r\n<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by grade \"\r\n        [(ngModel)]=\"grade\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchGrade()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-12\">\r\n    <pagination-controls\r\n      previousLabel=\"Prev\"\r\n      nextLabel=\"Next\"\r\n      [responsive]=\"true\"\r\n      (pageChange)=\"handlePageChange($event)\"\r\n    ></pagination-controls>\r\n  </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <h4> List of exams </h4>\r\n      <ul class=\"list-group\">\r\n        <li\r\n          class=\"list-group-item\"\r\n          *ngFor=\"\r\n            let exam of exams| paginate : {\r\n              itemsPerPage: pageSize, \r\n              currentPage: page, \r\n              totalItems: count\r\n          };\r\n          let i = index\r\n          \"\r\n          [class.active]=\"i == currentIndex\"\r\n          (click)=\"setActiveExam(exam, i)\"\r\n        >\r\n        \r\n          {{ exam.id }}\r\n          {{ exam.grade }}\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-3\">    \r\n        Items per Page:\r\n        <select (change)=\"handlePageSizeChange($event)\">\r\n          <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentExam\">\r\n        <h4> Exam  </h4>\r\n        <div>\r\n          <label><strong>ID :</strong></label> {{ currentExam.id }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Grade:</strong></label>\r\n          {{ currentExam.grade}}\r\n        </div>\r\n        <div>\r\n          <label><strong>Points :</strong></label>\r\n          {{ currentExam.points}}\r\n        </div>\r\n        <div>\r\n            <label><strong>exam date:</strong></label>\r\n            {{ currentExam.examDate}}\r\n          </div>\r\n          <div>\r\n            <label><strong>exam period :</strong></label>\r\n            {{ currentExam.examPeriod}}\r\n          </div>\r\n          <div>\r\n            <label><strong>status :</strong></label>\r\n            {{ currentExam.status}}\r\n          </div>\r\n          \r\n\r\n\r\n        <a class=\"badge badge-warning\" routerLink=\"/exams/{{ currentExam.id }}\">\r\n          Edit\r\n        </a>\r\n      </div>\r\n  \r\n      <div *ngIf=\"!currentExam\">\r\n        <br />\r\n        <p>To see details click on one exam </p>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { ExamService } from '../exam/exam.service';\r\nimport { Exam } from '../model/exam';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-exam',\r\n  templateUrl: './admin-list-exam.component.html',\r\n  styleUrls: ['./admin-list-exam.component.css']\r\n})\r\nexport class AdminListExamComponent implements OnInit {\r\n\r\n  exams: Exam[] ;\r\n  currentExam: Exam; \r\n  currentIndex = -1; \r\n  grade = 5;\r\n\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 3;\r\n  pageSizes = [3, 6, 9];\r\n\r\n\r\n  constructor(private examService: ExamService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveExams(); \r\n  }\r\n\r\n  getRequestParams(searchGrade: number, page: number, pageSize: number): any {\r\n    let params: any = {};\r\n\r\n    if (searchGrade) {\r\n      params[`grade`] = searchGrade;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrieveExams(): void {\r\n    const params = this.getRequestParams(this.grade, this.page, this.pageSize);\r\n\r\n    this.examService.getAll(params)\r\n    .subscribe(\r\n      response => {\r\n        const { exams, totalItems } = response;\r\n        this.exams = exams;\r\n        this.count = totalItems;\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.retrieveExams();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.retrieveExams();\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveExams();\r\n    this.currentIndex = -1; \r\n    this.currentExam= null;\r\n  }\r\n\r\n  setActiveExam(exam : null | any, index=-1) : void {\r\n    this.currentExam = exam;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  searchGrade(): void {\r\n    this.page = 1;\r\n    this.retrieveExams();\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n","\r\n<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by total cost: \"\r\n        [(ngModel)]=\"totalCost\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchTotalCost()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-12\">\r\n    <pagination-controls\r\n      previousLabel=\"Prev\"\r\n      nextLabel=\"Next\"\r\n      [responsive]=\"true\"\r\n      (pageChange)=\"handlePageChange($event)\"\r\n    ></pagination-controls>\r\n  </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <h4>List of financial cards </h4>\r\n      <ul class=\"list-group\">\r\n        <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"\r\n          let financialCard of financialCards | paginate : {\r\n            itemsPerPage: pageSize, \r\n            currentPage: page, \r\n            totalItems: count\r\n        };\r\n        let i = index\r\n        \"\r\n        [class.active]=\"i == currentIndex\"\r\n        (click)=\"setActiveFinancialCard(financialCard, i)\"\r\n      >\r\n        Total cost of financial card with id {{ financialCard.id}} is \r\n          {{ financialCard.totalCost }}\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-3\">    \r\n        Items per Page:\r\n        <select (change)=\"handlePageSizeChange($event)\">\r\n          <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentFinancialCard\">\r\n        <h4> Financial card </h4>\r\n        <div>\r\n          <label><strong> Initial state: </strong></label>\r\n           {{ currentFinancialCard.initialState }}\r\n        </div>\r\n        <div>\r\n          <label><strong> Total payment: </strong></label>\r\n          {{ currentFinancialCard.totalPayment }}\r\n        </div>\r\n        <div>\r\n          <label><strong> Total payout: </strong></label>\r\n          {{ currentFinancialCard.totalPayout }}\r\n        </div>\r\n        <div>\r\n            <label><strong> Total cost:</strong></label>\r\n            {{ currentFinancialCard.totalCost }}\r\n          </div>\r\n      \r\n        <a class=\"badge badge-warning\" routerLink=\"/financialCards/{{ currentFinancialCard.id }}\">\r\n          Edit\r\n        </a>\r\n      </div>\r\n  \r\n      <div *ngIf=\"!currentFinancialCard\">\r\n        <br />\r\n        <p>To see details click on one particular financial card! </p>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FinancialcardService } from '../financial-card/financialcard.service';\r\nimport { FinancialCard } from '../model/financial-card';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-financial-card',\r\n  templateUrl: './admin-list-financial-card.component.html',\r\n  styleUrls: ['./admin-list-financial-card.component.css']\r\n})\r\nexport class AdminListFinancialCardComponent implements OnInit {\r\n\r\n  financialCards: FinancialCard[] = []; \r\n  currentFinancialCard: FinancialCard; \r\n  currentIndex = -1; \r\n  totalCost = 0;\r\n\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 3;\r\n  pageSizes = [3, 6, 9];\r\n\r\n  constructor(private financialCardService: FinancialcardService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveFinancialCards();\r\n  }\r\n\r\n  getRequestParams(totalCost: number, page: number, pageSize: number): any {\r\n    let params: any = {};\r\n\r\n    if (totalCost) {\r\n      params[`totalCost`] = totalCost;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrieveFinancialCards() : void {\r\n    const params = this.getRequestParams(this.totalCost, this.page, this.pageSize);\r\n\r\n    this.financialCardService.getAll(params)\r\n    .subscribe(\r\n      response => {\r\n        const {financialCards, totalItems} = response;\r\n        this.financialCards = financialCards;\r\n        this.count = totalItems;\r\n        console.log(response); \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.retrieveFinancialCards();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.retrieveFinancialCards();\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveFinancialCards();\r\n    this.currentIndex = -1; \r\n    this.currentFinancialCard= null;\r\n  }\r\n\r\n  setActiveFinancialCard(financialCard : null | any, index=-1) : void {\r\n    this.currentFinancialCard = financialCard;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  searchTotalCost() : void {\r\n    this.page = 1; \r\n    this.retrieveFinancialCards();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by payment amount: \"\r\n        [(ngModel)]=\"paymentAmount\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchPaymentAmount()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-12\">\r\n    <pagination-controls\r\n      previousLabel=\"Prev\"\r\n      nextLabel=\"Next\"\r\n      [responsive]=\"true\"\r\n      (pageChange)=\"handlePageChange($event)\"\r\n    ></pagination-controls>\r\n  </div>\r\n\r\n<div class=\"list row\">\r\n    <div class=\"col-md-6\">\r\n      <h4> List of payments </h4>\r\n      <ul class=\"list-group\">\r\n        <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"\r\n          let payment of payments | paginate : {\r\n            itemsPerPage: pageSize, \r\n            currentPage: page, \r\n            totalItems: count\r\n        };\r\n        let i = index\r\n        \"\r\n        [class.active]=\"i == currentIndex\"\r\n        (click)=\"setActivePayment(payment, i)\"\r\n      >\r\n          {{ payment.paymentAmount }}\r\n          {{ payment.paymentDescription }}\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-3\">    \r\n        Items per Page:\r\n        <select (change)=\"handlePageSizeChange($event)\">\r\n          <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentPayment\">\r\n        <h4> Payment </h4>\r\n        <div>\r\n          <label><strong>Payment amount :</strong></label> {{ currentPayment.paymentAmount }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Payment date:</strong></label>\r\n          {{ currentPayment.paymentDate }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Payment description:</strong></label>\r\n          {{ currentPayment.paymentDescription }}\r\n        </div>\r\n      \r\n        <a class=\"badge badge-warning\" routerLink=\"/payments/{{ currentPayment.id }}\">\r\n          Edit\r\n        </a>\r\n      </div>\r\n  \r\n      <div *ngIf=\"!currentPayment\">\r\n        <br />\r\n        <p>To see details click on one particular payment!</p>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Payment } from '../model/payment';\r\nimport { PaymentService } from '../payment/payment.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-payment',\r\n  templateUrl: './admin-list-payment.component.html',\r\n  styleUrls: ['./admin-list-payment.component.css']\r\n})\r\nexport class AdminListPaymentComponent implements OnInit {\r\n\r\n  payments: Payment[] = []; \r\n  currentPayment: Payment; \r\n  currentIndex = -1; \r\n  name = '';\r\n  paymentAmount = 0;\r\n\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 3;\r\n  pageSizes = [3, 6, 9];\r\n\r\n  constructor(private paymentService: PaymentService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrievePayments();\r\n  }\r\n\r\n  getRequestParams(paymentAmount: number, page: number, pageSize: number): any {\r\n    let params: any = {};\r\n\r\n    if (paymentAmount) {\r\n      params[`paymentAmount`] = paymentAmount;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrievePayments() : void {\r\n    const params = this.getRequestParams(this.paymentAmount, this.page, this.pageSize);\r\n\r\n    this.paymentService.getAll(params)\r\n    .subscribe(\r\n      response => {\r\n        const {payments, totalItems} = response;\r\n        this.payments = payments;\r\n        this.count = totalItems;\r\n        console.log(response); \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.retrievePayments();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.retrievePayments();\r\n  }\r\n\r\n  searchPaymentAmount() : void {\r\n    this.page = 1; \r\n    this.retrievePayments();\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrievePayments();\r\n    this.currentIndex = -1; \r\n    this.currentPayment= null;\r\n  }\r\n\r\n  setActivePayment(payment : null | any, index=-1) : void {\r\n    this.currentPayment = payment;\r\n    this.currentIndex = index;\r\n  }\r\n}\r\n","\r\n<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by location: \"\r\n        [(ngModel)]=\"location\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchLocation()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-12\">\r\n    <pagination-controls\r\n      previousLabel=\"Prev\"\r\n      nextLabel=\"Next\"\r\n      [responsive]=\"true\"\r\n      (pageChange)=\"handlePageChange($event)\"\r\n    ></pagination-controls>\r\n  </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <h4>List of preexam obligations </h4>\r\n      <ul class=\"list-group\">\r\n        <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"\r\n          let preexamObligation of preexamObligations | paginate : {\r\n            itemsPerPage: pageSize, \r\n            currentPage: page, \r\n            totalItems: count\r\n        };\r\n        let i = index\r\n        \"\r\n        [class.active]=\"i == currentIndex\"\r\n        (click)=\"setActivePreexamObligation(preexamObligation, i)\"\r\n      >\r\n      Location is  \r\n        {{ preexamObligation.location }}  \r\n      and date is \r\n        {{ preexamObligation.dateOfObligation }}\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-3\">    \r\n        Items per Page:\r\n        <select (change)=\"handlePageSizeChange($event)\">\r\n          <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentPreexamObligation\">\r\n        <h4> Preexam obligation </h4>\r\n        <div>\r\n          <label><strong> Location: </strong></label>\r\n           {{ currentPreexamObligation.location }}\r\n        </div>\r\n        <div>\r\n          <label><strong> Total payment: </strong></label>\r\n          {{ currentPreexamObligation.dateOfObligation }}\r\n        </div>\r\n      \r\n        <a class=\"badge badge-warning\" routerLink=\"/preexamObligations/{{ currentPreexamObligation.id }}\">\r\n          Edit\r\n        </a>\r\n      </div>\r\n  \r\n      <div *ngIf=\"!currentPreexamObligation\">\r\n        <br />\r\n        <p>To see details click on one particular preexam obligation! </p>\r\n      </div>\r\n    \r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\nimport { PreexamObligationService } from '../preexam-obligation/preexam-obligation.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-preexam-obligation',\r\n  templateUrl: './admin-list-preexam-obligation.component.html',\r\n  styleUrls: ['./admin-list-preexam-obligation.component.css']\r\n})\r\nexport class AdminListPreexamObligationComponent implements OnInit {\r\n\r\n  preexamObligations: PreexamObligation[] = []; \r\n  currentPreexamObligation: PreexamObligation; \r\n  currentIndex = -1; \r\n  location = '';\r\n\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 3;\r\n  pageSizes = [3, 6, 9];\r\n\r\n  constructor(private preexamObligationService: PreexamObligationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrievePreexamObligations(); \r\n  }\r\n\r\n  getRequestParams(searchLocation: string, page: number, pageSize: number): any {\r\n    let params: any = {};\r\n\r\n    if (searchLocation) {\r\n      params[`location`] = searchLocation;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrievePreexamObligations() : void {\r\n    const params = this.getRequestParams(this.location, this.page, this.pageSize);\r\n    this.preexamObligationService.getAll(params)\r\n    .subscribe(\r\n      response => {\r\n        const { preexamObligations, totalItems } = response;\r\n        this.preexamObligations = preexamObligations;\r\n        this.count = totalItems;\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.retrievePreexamObligations();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.retrievePreexamObligations();\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrievePreexamObligations();\r\n    this.currentIndex = -1; \r\n    this.currentPreexamObligation= null;\r\n  }\r\n\r\n  setActivePreexamObligation(preexamObligation : null | any, index=-1) : void {\r\n    this.currentPreexamObligation = preexamObligation;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  searchLocation(): void {\r\n    this.page = 1;\r\n    this.retrievePreexamObligations();\r\n  }\r\n}\r\n","\r\n<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by first name \"\r\n        [(ngModel)]=\"firstName\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchFirstName()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-8\">\r\n    <pagination-controls\r\n      previousLabel=\"Prev\"\r\n      nextLabel=\"Next\"\r\n      [responsive]=\"true\"\r\n      (pageChange)=\"handlePageChange($event)\"\r\n    ></pagination-controls>\r\n  </div>\r\n  \r\n<div class=\"list row\">\r\n    <div class=\"col-md-6\">\r\n      <h4> List of professors </h4>\r\n      <ul class=\"list-group\">\r\n       <li\r\n          class=\"list-group-item\"\r\n          *ngFor=\"\r\n            let professor of professors | paginate : {\r\n              itemsPerPage: pageSize, \r\n              currentPage: page, \r\n              totalItems: count\r\n          };\r\n          let i = index\r\n          \"\r\n          [class.active]=\"i == currentIndex\"\r\n          (click)=\"setActiveProfessor(professor, i)\"\r\n        >\r\n          {{ professor.firstName }}\r\n          {{ professor.lastName }}\r\n          \r\n\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-3\">    \r\n        Items per Page:\r\n        <select (change)=\"handlePageSizeChange($event)\">\r\n          <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentProfessor\">\r\n        <h4> About professor </h4>\r\n        \r\n        <div>\r\n          <label><strong> First name: </strong></label>\r\n          {{ currentProfessor.firstName}}\r\n        </div>\r\n        <div>\r\n          <label><strong> Last name: </strong></label>\r\n          {{ currentProfessor.lastName}}\r\n        </div>  \r\n        <a class=\"badge badge-warning\" routerLink=\"/professors/{{ currentProfessor.id }}\">\r\n          Edit\r\n        </a>\r\n      </div>\r\n  \r\n      <div *ngIf=\"!currentProfessor\">\r\n       \r\n\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Professor } from '../model/professor';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n@Component({\r\n  selector: 'app-admin-list-professor',\r\n  templateUrl: './admin-list-professor.component.html',\r\n  styleUrls: ['./admin-list-professor.component.css']\r\n})\r\nexport class AdminListProfessorComponent implements OnInit {\r\n  professors : Professor[] = []; \r\n  currentProfessor: Professor; \r\n  currentIndex = -1; \r\n  firstName = '' ;\r\n\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 3;\r\n  pageSizes = [3, 6, 9];\r\n  constructor(private pService: ProfessorService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveProfessors();\r\n  }\r\n\r\n  getRequestParams(searchFirstName: string, page: number, pageSize: number): any {\r\n    let params: any = {};\r\n\r\n    if (searchFirstName) {\r\n      params[`firstName`] = searchFirstName;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrieveProfessors() : void {\r\n    const params = this.getRequestParams(this.firstName, this.page, this.pageSize);\r\n    this.pService.getAll(params)\r\n    .subscribe(\r\n      response => {\r\n        const { professors, totalItems } = response;\r\n        this.professors = professors;\r\n        this.count = totalItems;\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.retrieveProfessors();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.retrieveProfessors();\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveProfessors();\r\n    this.currentIndex = -1; \r\n    this.currentProfessor= null;\r\n  }\r\n\r\n  setActiveProfessor(professor : null | any, index=-1) : void {\r\n    this.currentProfessor = professor;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  searchFirstName(): void {\r\n    this.page = 1;\r\n    this.retrieveProfessors();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by first name \"\r\n        [(ngModel)]=\"firstName\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchFirstName()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n<div class=\"list row\">\r\n    <div class=\"col-md-6\">\r\n      <h4> List of students </h4>\r\n      <ul class=\"list-group\">\r\n       <li\r\n          class=\"list-group-item\"\r\n          *ngFor=\"\r\n            let student of students | paginate : {\r\n              itemsPerPage: pageSize, \r\n              currentPage: page, \r\n              totalItems: count\r\n          };\r\n          let i = index\r\n          \"\r\n          [class.active]=\"i == currentIndex\"\r\n          (click)=\"setActiveStudent(student, i)\"\r\n        >\r\n          {{ student.firstName }}\r\n          {{ student.lastName }}\r\n\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-3\">    \r\n        Items per Page:\r\n        <select (change)=\"handlePageSizeChange($event)\">\r\n          <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div *ngIf=\"currentStudent\">\r\n        <h4> About student </h4>\r\n        <div>\r\n          <label><strong>Card number :</strong></label> {{ currentStudent.cardNumber }}\r\n        </div>\r\n        <div>\r\n          <label><strong> First name: </strong></label>\r\n          {{ currentStudent.firstName}}\r\n        </div>\r\n        <div>\r\n          <label><strong> Last name: </strong></label>\r\n          {{ currentStudent.lastName}}\r\n        </div>\r\n        \r\n        <a class=\"badge badge-warning\" routerLink=\"/students/{{ currentStudent.id }}\">\r\n          Edit\r\n        </a>\r\n      </div>\r\n  \r\n      <div *ngIf=\"!currentStudent\">\r\n        <br />\r\n        <p>Please click on particular student..</p>\r\n      </div>\r\n\r\n  <!--\r\n<div>\r\n  <a routerLink=\"adminAddsStudent\" class=\"nav-link\"> Add new student </a>\r\n </div>  \r\n  -->\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Student } from '../model/student';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-students',\r\n  templateUrl: './admin-list-students.component.html',\r\n  styleUrls: ['./admin-list-students.component.css']\r\n})\r\nexport class AdminListStudentsComponent implements OnInit {\r\n\r\n  students : Student[] = []; \r\n  currentStudent: Student; \r\n  currentIndex = -1; \r\n  firstName = '' ;\r\n\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 3;\r\n  pageSizes = [3, 6, 9];\r\n\r\n  constructor(private studentService: StudentService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveStudents();\r\n  }\r\n\r\n  getRequestParams(searchFirstName: string, page: number, pageSize: number): any {\r\n    let params: any = {};\r\n\r\n    if (searchFirstName) {\r\n      params[`firstName`] = searchFirstName;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrieveStudents() : void {\r\n    const params = this.getRequestParams(this.firstName, this.page, this.pageSize);\r\n    this.studentService.getAll(params)\r\n    .subscribe(\r\n      response => {\r\n        const { students, totalItems } = response;\r\n        this.students = students;\r\n        this.count = totalItems;\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.retrieveStudents();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.retrieveStudents();\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveStudents();\r\n    this.currentIndex = -1; \r\n    this.currentStudent= null;\r\n  }\r\n\r\n  setActiveStudent(student : null | any, index=-1) : void {\r\n    this.currentStudent = student;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  searchFirstName(): void {\r\n    this.page = 1;\r\n    this.retrieveStudents();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"list row\">\r\n    <div class=\"col-md-8\">\r\n      <div class=\"input-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Search by username \"\r\n          [(ngModel)]=\"username\"\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <button\r\n            class=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            (click)=\"searchUsername()\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"col-md-12\">\r\n      <pagination-controls\r\n        previousLabel=\"Prev\"\r\n        nextLabel=\"Next\"\r\n        [responsive]=\"true\"\r\n        (pageChange)=\"handlePageChange($event)\"\r\n      ></pagination-controls>\r\n    </div>\r\n\r\n    <div>\r\n      <a routerLink=\"addUser\" class=\"nav-link\">Add new user</a>\r\n    </div>\r\n  \r\n      <div class=\"col-md-6\">\r\n        <h4> List of users </h4>\r\n        <ul class=\"list-group\">\r\n          <li\r\n            class=\"list-group-item\"\r\n            *ngFor=\"\r\n              let user of users | paginate : {\r\n                itemsPerPage: pageSize, \r\n                currentPage: page, \r\n                totalItems: count\r\n            };\r\n            let i = index\r\n            \"\r\n            [class.active]=\"i == currentIndex\"\r\n            (click)=\"setActiveUser(user, i)\"\r\n          >\r\n            {{ user.username }}\r\n          </li>\r\n        </ul>\r\n  \r\n        <div class=\"mt-3\">    \r\n          Items per Page:\r\n          <select (change)=\"handlePageSizeChange($event)\">\r\n            <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n              {{ size }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        \r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div *ngIf=\" currentUser\">\r\n          <h4> User </h4>\r\n          <div>\r\n            <label><strong>Username :</strong></label> {{ currentUser.username }}\r\n          </div>\r\n          <div>\r\n            <label><strong>Password:</strong></label>\r\n            {{ currentUser.password}}\r\n          </div>\r\n    \r\n          <a class=\"badge badge-warning\" routerLink=\"/users/{{ currentUser.id }}\">\r\n            Edit\r\n          </a>\r\n        </div>\r\n    \r\n        <div *ngIf=\"!currentUser\">\r\n          <br />\r\n          <p>To see details click on one particular user!</p>\r\n        </div>\r\n\r\n      </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../model/user';\r\nimport { UsersService } from '../users/users.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-user',\r\n  templateUrl: './admin-list-user.component.html',\r\n  styleUrls: ['./admin-list-user.component.css']\r\n})\r\nexport class AdminListUserComponent implements OnInit {\r\n\r\n  users: User[] = [];\r\n  currentUser: User; \r\n  currentIndex = -1; \r\n  username = ''; \r\n\r\n  page=  1; \r\n  count = 0; \r\n  pageSize = 3; \r\n  pageSizes = [3,6,9];\r\n\r\n  constructor(private userService: UsersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveUsers();\r\n  }\r\n\r\n  getRequestParams(searchName: string, page: number, pageSize: number): any {\r\n    let params: any = {};\r\n\r\n    if (searchName) {\r\n      params[`username`] = searchName;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  \r\n  retrieveUsers(): void {\r\n    const params = this.getRequestParams(this.username, this.page, this.pageSize);\r\n\r\n    this.userService.getAll(params)\r\n    .subscribe(\r\n      response => {\r\n        const { users, totalItems } = response;\r\n        this.users = users;\r\n        this.count = totalItems;\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.retrieveUsers();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.retrieveUsers();\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveUsers();\r\n    this.currentIndex = -1; \r\n    this.currentUser= null;\r\n  }\r\n\r\n  setActiveUser(user : null | any, index=-1) : void {\r\n    this.currentUser = user;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  searchUsername(): void {\r\n    this.page = 1;\r\n    this.retrieveUsers();\r\n  }\r\n  \r\n}\r\n","<div>\r\n    <h3> Payment </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            <th>Date of payment</th>\r\n            <th>Payment description</th>\r\n            <th>Payment amount</th>\r\n            <th></th>\r\n        </tr>\r\n        <tr *ngFor=\"let payment of payments\">\r\n            <td>\r\n                {{payment.dateOfPayment}}\r\n            </td>\r\n            <td>\r\n                {{payment.paymentDescription}}\r\n            </td>\r\n            <td>\r\n                {{payment.paymentAmount}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(payment)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(payment.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>\r\n\r\n","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Payment } from '../model/payment';\r\nimport { PaymentService } from '../payment/payment.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-payment',\r\n  templateUrl: './admin-payment.component.html',\r\n  styleUrls: ['./admin-payment.component.css']\r\n})\r\nexport class AdminPaymentComponent implements OnInit {\r\n\r\n  payments : Payment[];\r\n  subscription : Subscription; \r\n\r\n  constructor(private paymentService: PaymentService, private router : Router) { \r\n    this.getPayments();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPayments();\r\n  }\r\n\r\n  getPayments() { \r\n    this.paymentService.getPayments().subscribe(res =>\r\n      this.payments = res.body);\r\n  }\r\n\r\n  gotoAdd() : void {\r\n    this.router.navigate(['/addPayment']);\r\n  }\r\n\r\n  gotoEdit(payment : Payment) : void {\r\n    this.router.navigate(['/editPayment', payment.id]);\r\n  }\r\n\r\n  deletePayment(paymentId: number) : void {\r\n    this.paymentService.deletePayment(paymentId).subscribe(\r\n      () => this.getPayments()\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h3> Preexam Obligation  </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            <th> Points </th>\r\n            <th> Location </th>\r\n            <th> Date of obligation</th>\r\n            <th> Passed </th>\r\n            <th> Preexam Obligation type </th>\r\n            <th> Preexam Obligation status </th>\r\n            <th></th>\r\n        </tr>\r\n        <tr *ngFor=\"let preexamObligation of preexamObligations\">\r\n            <td>\r\n                {{preexamObligation.points}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.location}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.dateOfObligation}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.passed}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.preexamObligationType}}\r\n            </td>\r\n            <td>\r\n                {{preexamObligation.preexamObligationStatus}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(preexamObligation)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(preexamObligation.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\nimport { PreexamObligationService } from '../preexam-obligation/preexam-obligation.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-preexam-obligation',\r\n  templateUrl: './admin-preexam-obligation.component.html',\r\n  styleUrls: ['./admin-preexam-obligation.component.css']\r\n})\r\nexport class AdminPreexamObligationComponent implements OnInit {\r\n\r\n  preexamObligations : PreexamObligation[];\r\n  subscription : Subscription;\r\n\r\n  constructor(private preexamObligationService : PreexamObligationService, private router : Router) { \r\n    this.getPreexamObligations();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPreexamObligations();\r\n  }\r\n\r\n  getPreexamObligations(){\r\n    this.preexamObligationService.getAllPreexamObligations().subscribe(res =>\r\n      this.preexamObligations = res.body);\r\n  }\r\n\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addPreexamObligation\"]);\r\n  }\r\n\r\n  gotoEdit(preexamObligation: PreexamObligation): void {\r\n    this.router.navigate([\"/editPreexamObligation\", preexamObligation.id]);\r\n  }\r\n\r\n  deletePreexamObligation(preexamObligationId: number) : void {\r\n    this.preexamObligationService.deletePreexamObligation(preexamObligationId).subscribe(\r\n      () => this.getPreexamObligations()\r\n    );\r\n  }\r\n}","\r\n<div>\r\n    <h3> Professor </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            \r\n            <th>First name </th>\r\n            <th>Last name </th>\r\n    \r\n        </tr>\r\n        <tr *ngFor=\"let professor of professors\">\r\n           \r\n            <td>\r\n                {{professor.firstName}}\r\n            </td>\r\n            <td>\r\n                {{professor.lastName}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(professor)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(professor.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Professor } from '../model/professor';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-professors',\r\n  templateUrl: './admin-professors.component.html',\r\n  styleUrls: ['./admin-professors.component.css']\r\n})\r\nexport class AdminProfessorsComponent implements OnInit {\r\n\r\n  professors: Professor[];\r\n  subscription: Subscription;\r\n  constructor(private professorService: ProfessorService, private router: Router) { \r\n    this.getProfessors();  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfessors\r\n  }\r\n  getProfessors(){\r\n    this.professorService.getProfessors().subscribe(res => \r\n      this.professors = res.body);\r\n  }\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addProfessor\"]);\r\n  }\r\n\r\n  gotoEdit(professor : Professor) : void {\r\n    this.router.navigate(['/editProfessor', professor.id]);\r\n  } \r\n\r\n  deleteProfessor(professorId : number) : void {\r\n    this.professorService.deleteProfessor(professorId).subscribe(\r\n      () => this.getProfessors()\r\n    );\r\n  }\r\n\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ActivationEnd, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { User } from '../model/user';\r\nimport { UsersService } from '../users/users.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-profile',\r\n  templateUrl: './admin-profile.component.html',\r\n  styleUrls: ['./admin-profile.component.css']\r\n})\r\nexport class AdminProfileComponent implements OnInit {\r\n\r\n  user: User = {\r\n    id: 0, \r\n    username: '',\r\n    password: '',\r\n    authorities: []\r\n  };\r\n  message = ' '; \r\n  form!: FormGroup; \r\n  submitted = false; \r\n  password = ' ';\r\n\r\n  constructor(private userService: UsersService,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private router: Router) {\r\n      this.user;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.getUser();\r\n    this.userService.getLoggedUser().subscribe( user => (this.user = user)); \r\n    \r\n    this.form = this.formBuilder.group({\r\n      username: [\r\n        '',\r\n        [\r\n          Validators.required, \r\n          Validators.minLength(3),\r\n          Validators.maxLength(13)\r\n        ] \r\n      ],\r\n      password: ['', Validators.required]\r\n    });\r\n    //alert(user.username);\r\n    \r\n  }\r\n\r\n  getUser() : void{\r\n    //this.authService.getCurrentUser();\r\n    //this.authService.getCurrentUser();\r\n    //this.userService.getLoggedUser().subscribe(res => {\r\n      //this.user = res.body==null ? this.user:res.body;\r\n      //this.user.password = '';\r\n    //});\r\n  }\r\n\r\n  updateUser() : void {\r\n    this.userService.update(this.user.id, this.user)\r\n    .subscribe(\r\n      response => {\r\n        console.log(response); \r\n        this.message =  \"You successfully updated user!\";\r\n        this.router.navigate(['']);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(JSON.stringify(this.form.value, null, 2));\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"edit-form\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        \r\n         <div class=\"form-group\">\r\n            <label for=\"username\"> Username </label>\r\n            <input type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"username\"\r\n            [(ngModel)] = \"user.username\"\r\n            name=\"username\"\r\n            formControlName=\"username\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.username.errors.required\"> Username </div>\r\n                <div *ngIf=\"f.username.errors.minlength\">\r\n                  Username must be at least 3 characters\r\n                </div>\r\n                <div *ngIf=\"f.username.errors.maxlength\">\r\n                  Username must not exceed 20 characters\r\n                </div>\r\n            </div>\r\n        </div>\r\n         <div class=\"form-group\">\r\n            <label for=\"password\"> Password </label>\r\n            <input type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"password\"\r\n            [(ngModel)] = \"user.password\"\r\n            name=\"password\"\r\n            formControlName=\"password\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">First name</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">\r\n                  Password must be at least 3 characters. It is hidden on purpose! \r\n                </div>\r\n                <div *ngIf=\"f.password.errors.maxlength\">\r\n                  Password must not exceed 20 characters. It is hidden on purpose! \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    <button\r\n     type=\"submit\"\r\n    class=\"badge badge-success\"\r\n    (click)=\"updateUser()\"> Change basic information </button>\r\n        <p> {{message}}</p>\r\n\r\n</form>\r\n</div>\r\n","<div>\r\n    <h3> Student </h3>\r\n</div>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <tr>\r\n            <th>Card number </th>\r\n            <th>First name </th>\r\n            <th>Last name </th>\r\n            <th>Phone number </th>\r\n            <th>Email </th>\r\n            <th>UMNC </th>\r\n            <th>Started college in</th>\r\n            <th>Model number </th>\r\n            <th>Reference number </th>\r\n            <th>Account number </th>\r\n            <th>Card amount </th>\r\n            <th>Type of financing </th>\r\n        </tr>\r\n        <tr *ngFor=\"let student of students\">\r\n            <td>\r\n                {{student.cardNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.firstName}}\r\n            </td>\r\n            <td>\r\n                {{student.lastName}}\r\n            </td>\r\n            <td>\r\n                {{student.phoneNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.email}}\r\n            </td>\r\n            <td>\r\n                {{student.umnc}}\r\n            </td>\r\n            <td>\r\n                {{student.startedCollegeIn}}\r\n            </td>\r\n            <td>\r\n                {{student.modelNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.referenceNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.accountNumber}}\r\n            </td>\r\n            <td>\r\n                {{student.cardAmount}}\r\n            </td>\r\n            <td>\r\n                {{student.typeOfFinancing}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(student)\">\r\n                    <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Delete\" (click)=\"gotoDelete(student.id)\">\r\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" click=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Student } from '../model/student';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-student',\r\n  templateUrl: './admin-student.component.html',\r\n  styleUrls: ['./admin-student.component.css']\r\n})\r\nexport class AdminStudentComponent implements OnInit {\r\n\r\n  students: Student[];\r\n  subscription: Subscription;\r\n\r\n  constructor(private studentService: StudentService, private router: Router) { \r\n    this.getStudents();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudents();\r\n  }\r\n\r\n  getStudents(){\r\n    this.studentService.getStudents().subscribe(res => \r\n      this.students = res.body);\r\n  }\r\n\r\n  gotoAdd() : void {\r\n    this.router.navigate([\"/addStudent\"]);\r\n  }\r\n\r\n  gotoEdit(student : Student) : void {\r\n    this.router.navigate(['/editStudent', student.id]);\r\n  } \r\n\r\n  deleteStudent(studentId : number) : void {\r\n    this.studentService.deleteStudent(studentId).subscribe(\r\n      () => this.getStudents()\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin works!</p>\r\n","<!--\r\n\r\n\r\n  \r\n-->\r\n<div class=\"container-fluid\"> \r\n  <div *ngIf=\"currentUser != false; else elseBlock\">\r\n\r\n      <div class=\"row primer\">\r\n        <div class=\"col\">\r\n          <app-header></app-header>\r\n          <app-navbar-student *ngIf=\"roles.includes('ROLE_STUDENT')\"></app-navbar-student>\r\n          <app-navbar-admin *ngIf=\"roles.includes('ROLE_ADMIN')\"></app-navbar-admin>\r\n          <app-navbar-professor *ngIf=\"roles.includes('ROLE_PROFESOR')\"></app-navbar-professor>\r\n        </div>\r\n      </div>\r\n      <div align=\"center\">\r\n        <router-outlet>\r\n          \r\n        </router-outlet>\r\n      </div>\r\n  </div>\r\n  <ng-template #elseBlock>\r\n    <app-login></app-login>\r\n  </ng-template>    \r\n  \r\n</div>\r\n\r\n\r\n  ","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n\tpublic roles: string[]=[];\r\n\tcurrentUser:any;\r\n\tconstructor(private router: Router) {}\r\n\r\n\t// checkRole() {\r\n\t// \tconst item = localStorage.getItem('currentUser');\r\n\r\n\t// \tif (!item) {\r\n\t// \t\tthis.router.navigate(['login']);\r\n\t// \t\tthis.role = undefined;\r\n\t// \t\treturn;\r\n\t// \t}\r\n\r\n\t// \tconst jwt: JwtHelperService = new JwtHelperService();\r\n\t// \tthis.role = jwt.decodeToken(item).roles[0];\r\n\t// }\r\n\tngOnInit(){\r\n\t\tthis.roles=this.getCurrentUser().roles;\r\n\t\tthis.currentUser=this.getCurrentUser();\r\n\r\n\t}\r\n\tgetCurrentUser(){\r\n\t\tif(localStorage.getItem('currentUser')){\r\n\t\t\treturn JSON.parse(localStorage.currentUser);\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgxPaginationModule } from 'ngx-pagination'; \r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppRoutingModule } from './routing/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { StudentDetailsComponent } from './student-details/student-details.component';\r\nimport { StudentsComponent } from './students/students.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HeaderComponent } from './core/header/header.component';\r\nimport { FinancialcardStudentComponent } from './financialcard-student/financialcard-student.component';\r\nimport { NavbarProfessorComponent } from './core/navbar-professor/navbar-professor.component';\r\nimport { ProfessorCoursesComponent } from './professor-courses/professor-courses.component';\r\nimport { ProfessorStudentsComponent } from './professor-students/professor-students.component';\r\nimport { ProfessorProfileComponent } from './professor-profile/professor-profile.component';\r\nimport { ProfessorExamsComponent } from './professor-exams/professor-exams.component';\r\n//import { ExamPeriodComponent } from './exam-period/exam-period.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { AdminFinancialCardComponent } from './admin-financial-card/admin-financial-card.component';\r\nimport { AdminPaymentComponent } from './admin-payment/admin-payment.component';\r\nimport { AdminPreexamObligationComponent } from './admin-preexam-obligation/admin-preexam-obligation.component';\r\nimport { AdminStudentComponent } from './admin-student/admin-student.component';\r\nimport { PayoutComponent } from './payout/payout.component';\r\nimport { StudentProfileComponent } from './student-profile/student-profile.component';\r\nimport { AdminExamComponent } from './admin-exam/admin-exam.component';\r\nimport { AdminDocumentsComponent } from './admin-documents/admin-documents.component';\r\nimport { AdminCourseComponent } from './admin-course/admin-course.component';\r\nimport { AdminProfessorsComponent } from './admin-professors/admin-professors.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { StudentExamsComponent } from './student-exams/student-exams.component';\r\nimport { StudentDocumentsComponent } from './student-documents/student-documents.component';\r\nimport { StudentEnrollmentComponent } from './student-enrollment/student-enrollment.component';\r\nimport { ExamPeriodDetailsComponent } from './exam-period-details/exam-period-details.component';\r\nimport { FinancialCardDetailsComponent } from './financial-card-details/financial-card-details.component';\r\nimport { PaymentDetailsComponent } from './payment-details/payment-details.component';\r\nimport { PreexamObligationDetailsComponent } from './preexam-obligation-details/preexam-obligation-details.component';\r\nimport { NavbarAdminComponent } from './core/navbar-admin/navbar-admin.component';\r\nimport { NavbarStudentComponent } from './core/navbar-student/navbar-student.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AdminAddExamPeriodComponent } from './admin-add-exam-period/admin-add-exam-period.component';\r\nimport { AdminDetailsExamPeriodComponent } from './admin-details-exam-period/admin-details-exam-period.component';\r\nimport { AdminListExamPeriodComponent } from './admin-list-exam-period/admin-list-exam-period.component';\r\nimport { AdminAddFinancialCardComponent } from './admin-add-financial-card/admin-add-financial-card.component';\r\nimport { AdminDetailsFinancialCardComponent } from './admin-details-financial-card/admin-details-financial-card.component';\r\nimport { AdminListFinancialCardComponent } from './admin-list-financial-card/admin-list-financial-card.component';\r\nimport { AdminAddPaymentComponent } from './admin-add-payment/admin-add-payment.component';\r\nimport { AdminDetailsPaymentComponent } from './admin-details-payment/admin-details-payment.component';\r\nimport { AdminListPaymentComponent } from './admin-list-payment/admin-list-payment.component';\r\nimport { AdminAddPreexamObligationComponent } from './admin-add-preexam-obligation/admin-add-preexam-obligation.component';\r\nimport { AdminDetailsPreexamObligationComponent } from './admin-details-preexam-obligation/admin-details-preexam-obligation.component';\r\nimport { AdminListPreexamObligationComponent } from './admin-list-preexam-obligation/admin-list-preexam-obligation.component';\r\nimport { AdminAddStudentComponent } from './admin-add-student/admin-add-student.component';\r\nimport { AdminDetailsStudentComponent } from './admin-details-student/admin-details-student.component';\r\nimport { AdminListStudentsComponent } from './admin-list-students/admin-list-students.component';\r\nimport { AdminDetailsPreexamObligationTypeComponent } from './admin-details-preexam-obligation-type/admin-details-preexam-obligation-type.component';\r\nimport { ProfessorService } from './professor/professor.service';\r\nimport { StudentService } from './students/student.service';\r\nimport { ExamService } from './exam/exam.service';\r\nimport { AdminAddCourseComponent } from './admin-add-course/admin-add-course.component';\r\nimport { AdminAddExamComponent } from './admin-add-exam/admin-add-exam.component';\r\nimport { AdminAddProfessorComponent } from './admin-add-professor/admin-add-professor.component';\r\nimport { AdminDetailsExamComponent } from './admin-details-exam/admin-details-exam.component';\r\nimport { AdminDetailsCourseComponent } from './admin-details-course/admin-details-course.component';\r\nimport { AdminDetailsProfessorComponent } from './admin-details-professor/admin-details-professor.component';\r\nimport { AdminDetailsDocumentComponent } from './admin-details-document/admin-details-document.component';\r\nimport { AdminListCourseComponent } from './admin-list-course/admin-list-course.component';\r\nimport { AdminListExamComponent } from './admin-list-exam/admin-list-exam.component';\r\nimport { AdminListProfessorComponent } from './admin-list-professor/admin-list-professor.component';\r\nimport { UsersService } from './users/users.service';\r\nimport { AdminAddUserComponent } from './admin-add-user/admin-add-user.component';\r\nimport { AdminDetailsUserComponent } from './admin-details-user/admin-details-user.component';\r\nimport { AdminListUserComponent } from './admin-list-user/admin-list-user.component';\r\nimport { StudentpreexamobligationsComponent } from './studentpreexamobligations/studentpreexamobligations.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdminProfileComponent } from './admin-profile/admin-profile.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StudentDetailsComponent,\r\n    StudentsComponent,\r\n    LoginComponent,\r\n    HeaderComponent,\r\n    NavbarStudentComponent,\r\n    FinancialcardStudentComponent,\r\n    NavbarProfessorComponent,\r\n    ProfessorCoursesComponent,\r\n    ProfessorStudentsComponent,\r\n    ProfessorProfileComponent,\r\n    ProfessorExamsComponent,\r\n    //ExamPeriodComponent,\r\n    PaymentComponent,\r\n    AdminFinancialCardComponent,\r\n    AdminPaymentComponent,\r\n    AdminPreexamObligationComponent,\r\n    AdminStudentComponent,\r\n    PayoutComponent,\r\n    StudentProfileComponent,\r\n    AdminExamComponent,\r\n    AdminDocumentsComponent,\r\n    AdminCourseComponent,\r\n    AdminProfessorsComponent,\r\n    AdminComponent,\r\n    MainComponent,\r\n    StudentExamsComponent,\r\n    StudentDocumentsComponent,\r\n    StudentEnrollmentComponent,\r\n    NavbarAdminComponent,\r\n    ExamPeriodDetailsComponent,\r\n    FinancialCardDetailsComponent,\r\n    PaymentDetailsComponent,\r\n    PreexamObligationDetailsComponent,\r\n    AdminAddExamPeriodComponent,\r\n    AdminDetailsExamPeriodComponent,\r\n    AdminListExamPeriodComponent,\r\n    AdminAddFinancialCardComponent,\r\n    AdminDetailsFinancialCardComponent,\r\n    AdminListFinancialCardComponent,\r\n    AdminAddFinancialCardComponent,\r\n    AdminDetailsFinancialCardComponent,\r\n    AdminListFinancialCardComponent,\r\n    AdminAddPaymentComponent,\r\n    AdminDetailsPaymentComponent,\r\n    AdminListPaymentComponent,\r\n    AdminAddPaymentComponent,\r\n    AdminDetailsPaymentComponent,\r\n    AdminListPaymentComponent,\r\n    AdminAddStudentComponent,\r\n    AdminDetailsStudentComponent,\r\n    AdminListStudentsComponent,\r\n    AdminDetailsPreexamObligationTypeComponent,\r\n    AdminListPreexamObligationComponent,\r\n    AdminDetailsPreexamObligationComponent,\r\n    AdminAddPreexamObligationComponent,\r\n    AdminAddStudentComponent,\r\n    AdminListStudentsComponent,\r\n    NavbarProfessorComponent,\r\n    AdminDetailsStudentComponent,\r\n    AdminAddCourseComponent,\r\n    AdminAddExamComponent,\r\n    AdminAddProfessorComponent,\r\n    AdminDetailsExamComponent,\r\n    AdminDetailsCourseComponent,\r\n    AdminDetailsProfessorComponent,\r\n    AdminDetailsDocumentComponent,\r\n    AdminListCourseComponent,\r\n    AdminListExamComponent,\r\n    AdminListProfessorComponent,\r\n    AdminAddUserComponent,\r\n    AdminDetailsUserComponent,\r\n    AdminListUserComponent,\r\n    StudentpreexamobligationsComponent,\r\n    AdminProfileComponent\r\n  ],\r\n\r\n  providers: [\r\n    ProfessorService,\r\n    StudentService,\r\n    ExamService,\r\n    UsersService\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n\t\tReactiveFormsModule,\r\n    BrowserAnimationsModule, // required animations module\r\n\t\tToastrModule.forRoot(),\r\n\t\tHttpClientModule,\r\n    NgxPaginationModule,\r\n    NgbModule,\r\n    CommonModule,\r\n  ],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from 'src/app/login/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar-admin',\r\n  templateUrl: './navbar-admin.component.html',\r\n  styleUrls: ['./navbar-admin.component.css']\r\n})\r\nexport class NavbarAdminComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n\t\tprivate toastr: ToastrService,\r\n\t\tprivate router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout () {\r\n    this.authenticationService.logOut();\r\n    this.router.navigate(['**']);\r\n    alert(\"You have successfully logged out!\")\r\n  }\r\n\r\n}\r\n","\r\n  <div>\r\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n      <a href=\"#\" class=\"navbar-brand\">Admin panel</a>\r\n      <div class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"preexamObligations\" class=\"nav-link\"> Preexam obligations </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a routerLink=\"adminAddPreexamObligation\" class=\"nav-link\"> Add new preexam obligation </a>\r\n        </li>\r\n        \r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"examPeriods\" class=\"nav-link\">Exam periods </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a routerLink=\"addExamPeriod\" class=\"nav-link\">Add new exam period</a>\r\n        </li>\r\n  \r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"students\" class=\"nav-link\"> Students </a>\r\n        </li>  \r\n      \r\n        <li>\r\n          <a routerLink=\"adminAddsStudent\" class=\"nav-link\"> Add new student </a>\r\n        </li>\r\n        \r\n       <!--\r\n           <li class=\"nav-item\">\r\n          <a routerLink=\"financialCards\" class=\"nav-link\"> Financial cards </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"adminAddFinancialCard\" class=\"nav-link\"> Add new financial card </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"payments\" class=\"nav-link\"> Payments </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"adminAddPayment\" class=\"nav-link\"> Add new payment </a>\r\n        </li>\r\n\r\n        -->\r\n       \r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"professors\" class=\"nav-link\">Professors </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"addProfessor\" class=\"nav-link\"> Add new professor </a>\r\n        </li>\r\n     \r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"exams\" class=\"nav-link\">Exams </a>\r\n        </li>\r\n         <li class=\"nav-item\">\r\n          <a routerLink=\"adminAddExam\" class=\"nav-link\"> Add new exam</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"courses\" class=\"nav-link\">Courses </a>\r\n        </li>\r\n         <li class=\"nav-item\">\r\n          <a routerLink=\"adminAddCourse\" class=\"nav-link\"> Add new course </a>\r\n        </li>     \r\n        <li class=\"nav-item\">\r\n          <a routerLink=\"adminProfile\" class=\"nav-link\"> My profile </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\r\n        </li>  \r\n      </div>\r\n    </nav>\r\n  \r\n    <div class=\"container mt-3\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/login/authentication.service';\r\nimport { Course } from 'src/app/model/course';\r\n\r\n@Component({\r\n  selector: 'app-navbar-professor',\r\n  templateUrl: './navbar-professor.component.html',\r\n  styleUrls: ['./navbar-professor.component.css']\r\n})\r\nexport class NavbarProfessorComponent implements OnInit {\r\n \r\n  constructor(private router: Router,private authService:AuthenticationService,private route:ActivatedRoute,private location:Location) { \r\n      }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  logout() {\r\n\t\tthis.authService.logOut();\r\n\t\t\r\n\t}\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n \r\n\t\r\n\r\n}\r\n","<div>\r\n  <nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\">professor</a>\r\n  \r\n  \r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/examsForProfessor']\">Exams</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/studentsForProfessor']\">Students</a>\r\n        </li>\r\n      </ul>\r\n\r\n\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/coursesForProfessor']\">Courses</a>\r\n        </li>\r\n      </ul>\r\n      \r\n      \r\n    \r\n    <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/professorProfile/']\">Profile</a>\r\n        </li>\r\n    </ul>\r\n    <ul class=\"navbar-nav ml-auto\">   \r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  </nav>\r\n</div>\r\n  \r\n\r\n\r\n<!-- \r\n    <div>\r\n        <app-professor-courses></app-professor-courses>      \r\n    </div> -->\r\n\r\n    <!-- <table class=\"table table-striped pera\">\r\n      <thead>\r\n        <tr>\r\n          <th>Title <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n          <th>Code <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n          <th>Ects <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n          <th>Start Date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n          <th>End Date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      </tr>\r\n      </thead>\r\n    </table> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from 'src/app/login/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar-student',\r\n  templateUrl: './navbar-student.component.html',\r\n  styleUrls: ['./navbar-student.component.css']\r\n})\r\nexport class NavbarStudentComponent implements OnInit {\r\n\r\n  constructor(\r\n\t\tprivate authenticationService: AuthenticationService,\r\n\t\tprivate toastr: ToastrService,\r\n\t\tprivate router: Router\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.authenticationService.logOut();\r\n\t\t\r\n\t}\r\n\r\n}\r\n","\r\n<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n\r\n    <a class=\"navbar-brand\">Student panel</a>\r\n  \r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/financialCard']\" >Financial card</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/payouts']\">Financial card payouts</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/payment']\">Financial card payment</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/studentDocuments']\" >My documents</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/studentEnrollments']\" >Enrollments</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/studentExams']\">Exams</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/studentProfile/']\">Profile</a>\r\n      </li>\r\n    </ul>\r\n  \r\n    <ul class=\"navbar-nav ml-auto\">   \r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\r\n      </li>\r\n    </ul>\r\n  </nav>","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Course } from '../model/course';\r\n\r\nconst baseUrl = \"https://localhost:8443/api/courses/courses\"; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoursesService {\r\n\r\n  private path=\"api/courses\"\r\n\r\n  constructor(private http: HttpClient,private authService:AuthenticationService) { }\r\n\r\n    \r\n    getAll(params: any): Observable<any> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<any>(baseUrl, { params , headers:headers});\r\n  \r\n    }\r\n  \r\n    get(id: number): Observable<any>{\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n  \r\n    create(data: any) : Observable<any> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n      return this.http.post(baseUrl, data, {headers:headers});\r\n     }\r\n  \r\n    update(id: number, data: any) : Observable<any>{\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n      return this.http.put(`${baseUrl}/${id}`, data, {headers:headers});\r\n   }\r\n  \r\n    delete(id: number) : Observable<any> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(`${baseUrl}/${id}`, {headers:headers});\r\n   }\r\n  \r\n    private RegenerateData = new Subject<void>();\r\n\r\n    RegenerateData$ = this.RegenerateData.asObservable();\r\n    \r\n    announceChange() {\r\n        this.RegenerateData.next();\r\n    }\r\n    addCourse(course: Course) : Observable<HttpResponse<Course>> {\r\n      return this.http.post<Course>(this.path, course, {observe: 'response'});\r\n    }\r\n    editCourse(course: Course) : Observable<HttpResponse<Course>> {\r\n      return this.http.put<Course>(this.path, course, {observe: 'response'});\r\n    }\r\n    deleteCourse(id : number): Observable<HttpResponse<any>> {\r\n      const url = `${this.path}/${id}`;\r\n      return this.http.delete<any>(url, {observe: 'response'});\r\n    }\r\n    getCourses(): Observable<HttpResponse<Course[]>> {\r\n  \r\n      return this.http.get<Course[]>(this.path, {observe: 'response'});\r\n  }\r\n   \r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ExamPeriodService } from '../exam-period/exam-period.service';\r\nimport { ExamPeriod } from '../model/exam-period';\r\n\r\n\r\n@Component({\r\n  selector: 'app-exam-period-details',\r\n  templateUrl: './exam-period-details.component.html',\r\n  styleUrls: ['./exam-period-details.component.css']\r\n})\r\nexport class ExamPeriodDetailsComponent implements OnInit {\r\n\r\n  examPeriod: ExamPeriod = new ExamPeriod({\r\n    name: '',\r\n    startDate : '', \r\n    endDate: '',\r\n    paymentAmount : 0\r\n  });\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private examPeriodService: ExamPeriodService, private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params : Params) => \r\n      this.examPeriodService.getExamPeriod(+params['id'])))\r\n      .subscribe(res => {\r\n        this.examPeriod = res.body; \r\n      });\r\n    }\r\n  }\r\n\r\n  save() : void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.examPeriodService.addExamPeriod(this.examPeriod)\r\n    .subscribe(res => {\r\n      this.examPeriodService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  private edit() : void {\r\n    this.examPeriodService.editExamPeriod(this.examPeriod)\r\n    .subscribe(examPeriod => {\r\n      this.examPeriodService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n}\r\n","<div>\r\n    <h3>Exam period</h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Name: </label>\r\n            <input type=\"text\" [(ngModel)]=\"examPeriod.name\" placeholder=\"Name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Start date: </label>\r\n            <input type=\"text\" [(ngModel)]=\"examPeriod.startDate\" placeholder=\"Start date\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> End date: </label>\r\n            <input type=\"text\" [(ngModel)]=\"examPeriod.endDate\" placeholder=\"End date\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ExamPeriod } from '../model/exam-period';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\n\r\nconst baseUrl = \"https://localhost:8443/api/examPeriods\"; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ExamPeriodService {\r\n\r\n  constructor(private http: HttpClient,private authService: AuthenticationService) { }\r\n\r\n  getAll(params: any): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<any>(baseUrl, { params, headers:headers });\r\n  }\r\n\r\n  get(id: number): Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n  create(data: any) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.post(baseUrl, data, {headers:headers});\r\n  }\r\n\r\n  update(id: number, data: any) : Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n     return this.http.put(`${baseUrl}/${id}`, data, {headers:headers});\r\n  }\r\n\r\n  delete(id: number) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(baseUrl, {headers:headers});\r\n  }\r\n\r\n  findByName(name: string) : Observable<any> { \r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get(`${baseUrl}?name=${name}`, {headers:headers});\r\n  }\r\n\r\n  private RegenerateData = new Subject<void>(); \r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange(){\r\n    this.RegenerateData.next();\r\n  }\r\n\r\n  getExamPeriods() : Observable<HttpResponse<ExamPeriod[]>> {\r\n    return this.http.get<ExamPeriod[]>(baseUrl, {observe: 'response'});\r\n  }\r\n\r\n  getExamPeriod(id: number) : Observable<HttpResponse<ExamPeriod>> {\r\n    const url = `${baseUrl}/${id}`;\r\n    return this.http.get<ExamPeriod>(url, {observe: 'response'});\r\n  }\r\n\r\n  addExamPeriod(examPeriod: ExamPeriod) : Observable<HttpResponse<ExamPeriod>> {\r\n    return this.http.post<ExamPeriod>(baseUrl, examPeriod, {observe: 'response'});\r\n  }\r\n\r\n  editExamPeriod(examPeriod: ExamPeriod) : Observable<HttpResponse<ExamPeriod>> {\r\n    return this.http.put<ExamPeriod>(baseUrl, examPeriod, {observe: 'response'});\r\n  }\r\n\r\n  updateExamPeriod(id: number, data: any) : Observable<any> {\r\n    return this.http.put(`$examPeriodUrl/${id}`, data);\r\n  }\r\n\r\n  deleteExamPeriod(id : number): Observable<HttpResponse<any>> {\r\n    const url = `${baseUrl}/${id}`;\r\n    return this.http.delete<any>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';import { Exam } from '../model/exam';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nconst baseUrl = \"https://localhost:8443/api/exams/exams\"; \r\nconst baseUrl1=\"https://localhost:8443/api/exams\";\r\n@Injectable()\r\nexport class ExamService {\r\n\r\n  private path=\"api/exams\"\r\n \r\n  constructor(private http: HttpClient,private authService:AuthenticationService) { }\r\n\r\n    private RegenerateData = new Subject<void>();\r\n\r\n    RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n    getAll(params: any): Observable<any> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n      return this.http.get<any>(baseUrl, { params , headers:headers});\r\n   }\r\n  \r\n    get(id: number): Observable<any>{\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n     \r\n      return this.http.get(`${baseUrl}/${id}`, { headers:headers });\r\n    }\r\n  \r\n    create(data: any) : Observable<any> {\r\n      return this.http.post(baseUrl1, data);\r\n    }\r\n  \r\n    update(id: number, data: any) : Observable<any>{\r\n       return this.http.put(`${baseUrl1}/${id}`, data);\r\n    }\r\n  \r\n    delete(id: number) : Observable<any> {\r\n      return this.http.delete(`${baseUrl1}/${id}`);\r\n    }\r\n\r\n    announceChange() {\r\n        this.RegenerateData.next();\r\n    }\r\n    addExam(exam: Exam) : Observable<HttpResponse<Exam>> {\r\n      return this.http.post<Exam>(this.path, exam, {observe: 'response'});\r\n    }\r\n    editExam(exam: Exam) : Observable<HttpResponse<Exam>> {\r\n      return this.http.put<Exam>(this.path, exam, {observe: 'response'});\r\n    }\r\n    deleteExam(id : number): Observable<HttpResponse<any>> {\r\n      const url = `${this.path}/${id}`;\r\n      return this.http.delete<any>(url, {observe: 'response'});\r\n    }\r\n    getExams(): Observable<HttpResponse<Exam[]>> {\r\n  \r\n      return this.http.get<Exam[]>(this.path, {observe: 'response'});\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { FinancialcardService } from '../financial-card/financialcard.service';\r\nimport { FinancialCard } from '../model/financial-card';\r\n\r\n@Component({\r\n  selector: 'app-financial-card-details',\r\n  templateUrl: './financial-card-details.component.html',\r\n  styleUrls: ['./financial-card-details.component.css']\r\n})\r\nexport class FinancialCardDetailsComponent implements OnInit {\r\n\r\n  financialCard: FinancialCard = new FinancialCard({\r\n    initialState : 0,\r\n    totalPayment : 0,\r\n    totalPayout: 0, \r\n    totalCost : 0  });\r\n\r\n  mode: string = 'ADD'; \r\n\r\n  constructor(private financialCardService : FinancialcardService, private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params : Params) =>\r\n      this.financialCardService.getFinancialCard(+params['id'])))\r\n      .subscribe(res => {\r\n        this.financialCard = res.body;\r\n      });\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add() : void {\r\n    this.financialCardService.addFinancialCard(this.financialCard)\r\n    .subscribe(res => {\r\n      this.financialCardService.announceChange(); \r\n      this.goBack();\r\n    })\r\n  } \r\n\r\n  private edit() : void {\r\n    this.financialCardService.editFinancialCard(this.financialCard)\r\n    .subscribe(financialCard => {\r\n      this.financialCardService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack() : void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h3>Financial card</h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Initial state: </label>\r\n            <input type=\"text\" [(ngModel)]=\"financialCard.initialState\" placeholder=\"Initial state\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Total payment: </label>\r\n            <input type=\"text\" [(ngModel)]=\"financialCard.totalPayment\" placeholder=\"Total payment\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Total payout: </label>\r\n            <input type=\"text\" [(ngModel)]=\"financialCard.totalPayout\" placeholder=\"Total payout\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Total cost: </label>\r\n            <input type=\"text\" [(ngModel)]=\"financialCard.totalCost\" placeholder=\"Total cost\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport { FinancialCard } from '../model/financial-card';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\n\r\nconst baseUrl = \"https://localhost:8443/api/financialCards\"; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FinancialcardService {\r\n\r\n  private financialCardUrl = \"api/financialCard\";\r\n  \r\n  constructor(private http: HttpClient, private authService: AuthenticationService) { }\r\n\r\n  getAll(params: any): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<any>(baseUrl, {params, headers:headers}); \r\n  }\r\n\r\n  get(id: number): Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n  create(data: any) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.post(baseUrl, data, {headers:headers});\r\n  }\r\n\r\n  update(id: number, data: any) : Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n     return this.http.put(`${baseUrl}/${id}`, data, {headers:headers});\r\n  }\r\n\r\n  delete(id: number) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  getFinancialCards() : Observable<HttpResponse<FinancialCard[]>> {\r\n    return this.http.get<FinancialCard[]>(this.financialCardUrl, {observe: 'response'});\r\n  }\r\n\r\n  getFinancialCard(id: number) : Observable<HttpResponse<FinancialCard>> {\r\n    const url = `${this.financialCardUrl}/{$id}`;\r\n    return this.http.get<FinancialCard>(url, {observe: 'response'});\r\n  }\r\n\r\n  addFinancialCard(financialCard: FinancialCard) : Observable<HttpResponse<FinancialCard>> {\r\n    return this.http.post<FinancialCard>(this.financialCardUrl, financialCard, {observe: 'response'});\r\n  }\r\n\r\n  editFinancialCard(financialCard: FinancialCard) : Observable<HttpResponse<FinancialCard>> {\r\n    return this.http.put<FinancialCard>(this.financialCardUrl, financialCard, {observe: 'response'});\r\n  }\r\n\r\n  deleteFinancialCard(id: number) : Observable<HttpResponse<any>> {\r\n    const url = `${this.financialCardUrl}/${id}`;\r\n    return this.http.delete<any>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { FinancialCard } from '../model/financial-card';\r\nimport { Student } from '../model/student';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-financialcard-student',\r\n  templateUrl: './financialcard-student.component.html',\r\n  styleUrls: ['./financialcard-student.component.css']\r\n})\r\nexport class FinancialcardStudentComponent implements OnInit {\r\n  student:Student ;\r\n  // = {\r\n  //   id: 0,\r\n  //   firstName: \"\",\r\n  //   phoneNumber:\"\",\r\n  //   email:\"\",\r\n  //   umnc:\"\",\r\n  //   startedCollegeIn:0,\r\n  //   modelNumber:0,\r\n  //   referenceNumber:null,\r\n  //   cardAmount:0,\r\n  //   typeOfFinancing:{\r\n  //     id:0,\r\n  //     name:\"\",\r\n  //     code:\"\"\r\n  //   },\r\n  //   lastName: \"\",\r\n  //   cardNumber: \"\",\r\n  //   financialCards:{\r\n  //     id:0,\r\n  //     initialState:0,\r\n  //     totalPayment:0,\r\n  //     totalPayout:0,\r\n  //     totalCost:0\r\n\r\n  //   },\r\n  //   accountNumber: \"\",\r\n  //   user: {\r\n  //     username: \"\",\r\n  //     password: \"\"\r\n  //   }\r\n  // };\r\n  financialCard: FinancialCard= {\r\n    initialState : 0,\r\n    totalPayment : 0,\r\n    totalPayout: 0, \r\n    totalCost : 0,\r\n    // student : null\r\n  };\r\n  \r\n    \r\n\r\n   constructor(private studentService: StudentService, private route: ActivatedRoute,private authService:AuthenticationService,private router:Router,private location:Location) {\r\n    \r\n   }\r\n   \r\n  //  getMe():void{\r\n  //   this.studentService.getMeAgain().subscribe(res =>( this.student=res));\r\n  //   console.log(this.student);\r\n  // }\r\n \r\n\r\n\t ngOnInit(): void {\r\n    //  this.getMe();\r\n    this.studentService.getMeAgain().subscribe(res =>{( this.student=res)\r\n    \r\n    this.studentService.getStudentFinancialCard(res).subscribe(res=>this.financialCard=res);\r\n  });\r\n    // this.getFinancialCard();\r\n    }\r\n  // getFinancialCard(){\r\n  //   this.studentService.getStudentFinancialCard(this.student).subscribe(res=>this.financialCard=res);\r\n  //   console.log(this.financialCard);\r\n  // }\r\n \r\n  goBack() : void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h3>Financial card</h3>\r\n</div>\r\n\r\n<div>\r\n  <form>\r\n      <div class=\"form-group\">\r\n          <label for=\"field1c\" class=\"form-control-label\"> Initial state: </label>\r\n          <input type=\"number\" [(ngModel)]=\"financialCard.initialState\" placeholder=\"Initial state\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n      </div>\r\n      <br/>\r\n      <div class=\"form-group\">\r\n          <label for=\"field2c\" class=\"form-control-label\"> Total payment: </label>\r\n          <input type=\"number\" [(ngModel)]=\"financialCard.totalPayment\" placeholder=\"Total payment\" class=\"form-control\" id=\"field1c\" name=\"field2\">\r\n      </div>\r\n      <br/>\r\n      <div class=\"form-group\">\r\n          <label for=\"field3c\" class=\"form-control-label\"> Total payout: </label>\r\n          <input type=\"number\" [(ngModel)]=\"financialCard.totalPayout\" placeholder=\"Total payout\" class=\"form-control\" id=\"field1c\" name=\"field3\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n          <label for=\"field4c\" class=\"form-control-label\"> Total cost: </label>\r\n          <input type=\"number\" [(ngModel)]=\"financialCard.totalCost\" placeholder=\"Total cost\" class=\"form-control\" id=\"field1c\" name=\"field4\">\r\n      </div>\r\n      <br/>\r\n  </form>\r\n</div>\r\n<div>\r\n  <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n</div>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtserviceutilsService {\r\n\r\n  constructor() { }\r\n\r\n  getRoles(token:string){\r\n    let jwtData=token.split('.')[1];\r\n    let decodedJWTJsonData=window.atob(jwtData);\r\n    let decodedJWTData=JSON.parse(decodedJWTJsonData);\r\n\r\n    return [decodedJWTData.roles];\r\n\r\n  }\r\n  getUsername(token:string){\r\n   \r\n      let jwtData=token.split('.')[1];\r\n      let decodedJWTJsonData=window.atob(jwtData);\r\n      let decodedJWTData=JSON.parse(decodedJWTJsonData);\r\n  \r\n      return [decodedJWTData.sub];\r\n  \r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { ThisReceiver } from '@angular/compiler';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Observable, ObservableLike } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtserviceutilsService } from '../jwtservice/jwtserviceutils.service';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\tprivate readonly loginPath = '/api/login';\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate jwtUtilsService:JwtserviceutilsService,\r\n\t\tprivate router: Router\r\n\t) { }\r\n\r\n\tlogin(username:string,password:string): Observable<boolean> {\r\n\t\tvar headers:HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\r\n\r\n\t\treturn this.http.post(this.loginPath, JSON.stringify({username,password}), {headers:headers,responseType:\"text\"})\r\n\t\t.pipe(map((res:any)=>{\r\n\t\t\tlet token=res;\r\n\t\t\tif (token){\r\n\t\t\t\tlocalStorage.setItem('currentUser',JSON.stringify({\r\n\t\t\t\t\tusername:username,\r\n\t\t\t\t\troles:this.jwtUtilsService.getRoles(token),\r\n\t\t\t\t\ttoken:token\r\n\t\t\t\t}));\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}))\t\t\r\n\t}\r\n\r\n\tgetToken():String{\r\n\t\tvar currentUser=JSON.parse(localStorage.getItem('currentUser') || '{}');\r\n\t\tvar token =currentUser && currentUser.token;\r\n\t\treturn token ? token: \"\";\r\n\t}\r\n\r\n\tlogOut():void{\r\n\t\tlocalStorage.removeItem('currentUser');\r\n\t\tthis.router.navigate(['']);\r\n\t}\r\n\r\n\tisLoggedIn():boolean{\r\n\t\tif(this.getToken() !='') return true;\r\n\t\telse return false;\r\n\t}\r\n\r\n\tgetCurrentUser() : Observable<HttpResponse<User>>{\r\n\t\tif(localStorage.currentUser){\r\n\t\t\treturn JSON.parse(localStorage.currentUser);\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tgetRole(): string {\r\n\t\tconst item = localStorage.getItem('loggedUser'); \r\n\t\tif (!item) {\r\n\t\t\tthis.router.navigate(['']); \r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tvar jwt : JwtHelperService = new JwtHelperService(); \r\n\t\tvar loggedUser = jwt.decodeToken(item);\r\n\t\treturn loggedUser;\r\n\t}\r\n}\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, NgForm } from '@angular/forms';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { JwtserviceutilsService } from '../jwtservice/jwtserviceutils.service';\r\nimport { User } from '../model/user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\t\r\n\tconstructor(private authenticationService: AuthenticationService,private router: Router,\r\n\t){}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tlogin(form:NgForm):void {\r\n\t\tvar username:string=form.value.username;\r\n\t\tvar password:string=form.value.password;\r\n\t\tthis.authenticationService.login(username,password).subscribe(\r\n\t\t\t(loggedIn:boolean) =>{\r\n\t\t\t\tif(loggedIn){\r\n\t\t\t\t\t//ovde treba dodati navigaciju u zavisnosti na ulogu prijavljenog korisnika \r\n\t\t\t\t\t//this.router.navigate(['']);\r\n\t\t\t\t\tif(this.authenticationService.getRole()==='ROLE_STUDENT') {\r\n\t\t\t\t\t\tthis.router.navigate(['']);\r\n\t\t\t\t\t} else if (this.authenticationService.getRole()==='ROLE_ADMIN') {\r\n\t\t\t\t\t\tthis.router.navigate(['examPeriods']);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.router.navigate(['']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t)}\r\n\r\n\t\t\r\n}\r\n","<div class=\"row justify-content-center align-items-center loginForm\">\r\n  <form class=\"col-md-12 box\" #signupForm=\"ngForm\" (ngSubmit)=\"login(signupForm)\">\r\n    <fieldset>\r\n      <legend>Login</legend>\r\n\r\n      <div class=\"form-group row\">\r\n        <label for=\"username\" class=\"control-label col-md-3\"><b>Username:</b></label>\r\n        <div class=\"col-md-9\">\r\n          <input type=\"text\"  id=\"username\" name=\"username\" placeholder=\"username\" ngModel>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row\">\r\n        <label for=\"password\" class=\"control-label col-md-3\"><b>Password:</b></label>\r\n        <div class=\"col-md-9\">\r\n          <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" ngModel>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-3\"></div>\r\n        <div class=\"col-lg-9\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n        </div>\r\n      </div>\r\n\r\n    </fieldset>\r\n  </form>\r\n</div>\r\n\r\n\r\n","import { HttpClient, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Observable } from 'rxjs';\r\nimport { Authority } from '../model/authority';\r\nimport { User } from '../model/user';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RoleGuard implements CanActivate {\r\n\r\n\tprivate baseUrl = 'api/users';\r\n\r\n\tconstructor(\r\n\t\tpublic auth: AuthenticationService,\r\n\t\tpublic router: Router,\r\n\t\tprivate http: HttpClient\r\n\t) { }\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot): boolean {\r\n\t\tconst expectedRoles: string = route.data.expectedRoles;\r\n\t\tconst token = localStorage.getItem(\"user\");\r\n\t\tconst jwt: JwtHelperService = new JwtHelperService();\r\n\r\n\t\tif (!token) {\r\n\t\t\tthis.router.navigate(['/login']);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst info = jwt.decodeToken(token);\r\n\t\tconst roles: string[] = expectedRoles.split('|', 3);\r\n\r\n\t\tif (roles.indexOf(info.role[0].authority) === -1) {\r\n\t\t\t//this.router.navigate(['/financialcard']);\r\n\t\t\tthis.router.navigate(['/payment']);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetUnassignedAuthorities(username: string) : Observable<HttpResponse<Authority[]>> {\r\n\t\tconst url = `${this.baseUrl}/${username}/unassigned-authorities`;\r\n\t\treturn this.http.get<Authority[]>(url, {observe: 'response'});\r\n\t}\r\n\r\n\taddUser(user: User) : Observable<HttpResponse<User>> {\r\n\t\treturn this.http.post<User>(this.baseUrl, user, {observe: 'response'});\r\n\t}\r\n}","import { localizedString } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent {\r\n\r\n// <<<<<<< HEAD\r\n//   \t// public roles: string[]=[];\r\n// \t// currentUser:any;\r\n// \t// constructor(private router: Router) {}\r\n// =======\r\n\r\n\r\n//   public role?: string;\r\n// >>>>>>> f721dbc5c2f5a7c192403527e84cf48f156e698c\r\n\r\n// \t// // checkRole() {\r\n// \t// // \tconst item = localStorage.getItem('currentUser');\r\n\r\n// \t// // \tif (!item) {\r\n// \t// // \t\tthis.router.navigate(['login']);\r\n// \t// // \t\tthis.role = undefined;\r\n// \t// // \t\treturn;\r\n// \t// // \t}\r\n\r\n// \t// // \tconst jwt: JwtHelperService = new JwtHelperService();\r\n// \t// // \tthis.role = jwt.decodeToken(item).roles[0];\r\n// \t// // }\r\n// \t// ngOnInit(){\r\n// \t// \tthis.roles=this.getCurrentUser.roles();\r\n// \t// \tthis.currentUser=this.getCurrentUser();\r\n\r\n// \t// }\r\n// \t// getCurrentUser(){\r\n// \t// \tif(localStorage.getItem('currentUser')){\r\n// \t// \t\treturn JSON.parse(localStorage.currentUser);\r\n// \t// \t}\r\n// \t// \telse{\r\n// \t// \t\treturn false;\r\n// \t// \t}\r\n\r\n// \t// }\r\n}\r\n","import { Identifiers } from \"@angular/compiler\";\r\nimport { Enrollment } from \"./enrollment\";\r\nexport class Course implements CourseInterface {\r\n\r\n    public id?: number;\r\n    public title: string;\r\n    public courseCode: string;\r\n    public startDate: Date;\r\n    public endDate: Date;\r\n    public ects: number;\r\n    \r\n\r\n    constructor(courseCfg:CourseInterface) {\r\n        this.id= courseCfg.id;\r\n        this.title= courseCfg.title;\r\n        this.courseCode= courseCfg.courseCode;\r\n        this.startDate= courseCfg.startDate;\r\n        this.endDate= courseCfg.endDate;\r\n        this.ects= courseCfg.ects;\r\n    }\r\n\r\n\r\n}\r\n\r\ninterface CourseInterface {\r\n    id?:number;\r\n    title: string;\r\n    courseCode: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    ects: number;\r\n\r\n}\r\n","import { Identifiers } from \"@angular/compiler\";\r\nexport class ExamPeriod  implements ExamPeriodInterface {\r\n\r\n    public id?: number;\r\n    public name: string;\r\n    public startDate: string;\r\n    public endDate: string;\r\n    public paymentAmount: number;\r\n\r\n    constructor(examPeriodCfg: ExamPeriodInterface) {\r\n        this.id= examPeriodCfg.id;\r\n        this.name= examPeriodCfg.name;\r\n        this.startDate= examPeriodCfg.startDate;\r\n        this.endDate= examPeriodCfg.endDate;\r\n        this.paymentAmount= examPeriodCfg.paymentAmount;\r\n    }\r\n}\r\n\r\ninterface ExamPeriodInterface {\r\n    id?: number;\r\n    name: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    paymentAmount: number;\r\n}\r\n","import { Enrollment } from \"./enrollment\";\r\nimport { ExamPeriod } from \"./exam-period\";\r\n\r\nexport class Exam implements ExamInterface {\r\n\r\n    public id?:number;\r\n\t\r\n\tpublic  grade:number;\r\n\t\r\n\tpublic  points:number;\r\n\t\r\n\tpublic examDate:Date;\r\n    public examPeriod:ExamPeriod;\r\n\t\r\n\tpublic status:boolean;\r\n\tpublic enrollment:Enrollment;\r\n    constructor(examConf:ExamInterface)\r\n    {\r\n        this.id=examConf.id;\r\n        this.grade=examConf.grade;\r\n        this.points=examConf.points;\r\n        this.status=examConf.status;\r\n        this.examDate=examConf.examDate; \r\n  //      this.enrollment=examConf.enrollment;\r\n      //  this.examPeriod=examConf.examPeriod;\r\n        \r\n\r\n    }\r\n}\r\n\r\ninterface ExamInterface{\r\n    id?:number;\r\n    grade:number;\r\n    points:number;\r\n    examDate:Date;\r\n    status:boolean;\r\n    enrollment:Enrollment;\r\n    examPeriod:ExamPeriod;\r\n\r\n}","\r\nimport { Student } from \"./student\";\r\n\r\nexport class FinancialCard {\r\n\r\n    public id?:number;\r\n\tpublic initialState:number;\r\n\tpublic totalPayment:number;\r\n\tpublic totalPayout:number;\r\n\tpublic totalCost:number;\r\n    \r\n    //inicijalni konstruktor \r\n/*\r\n    constructor(financialCardConf:FinancialCardInterface){\r\n        this.id=financialCardConf.id;\r\n        this.initialState=financialCardConf.initialState;\r\n        this.totalPayment=financialCardConf.totalPayment;\r\n        this.totalPayout=financialCardConf.totalPayout;\r\n        this.totalCost=financialCardConf.totalCost;\r\n        this.student=financialCardConf.student;\r\n    }\r\n*/\r\n    constructor(financialCardConf:FinancialCardInterface){\r\n        this.initialState=financialCardConf.initialState;\r\n        this.totalPayment=financialCardConf.totalPayment;\r\n        this.totalPayout=financialCardConf.totalPayout;\r\n        this.totalCost=financialCardConf.totalCost;\r\n    }\r\n}\r\n\r\n//inicijalni interfejs \r\n\r\n/*\r\ninterface FinancialCardInterface{\r\n    id?:number;\r\n    initialState:number;\r\n    totalPayment:number;\r\n    totalPayout:number;\r\n    totalCost:number;\r\n    student:Student;\r\n}\r\n*/\r\n\r\ninterface FinancialCardInterface{\r\n   \r\n    initialState:number;\r\n    totalPayment:number;\r\n    totalPayout:number;\r\n    totalCost:number;\r\n    \r\n   \r\n}","import { FinancialCard } from \"./financial-card\";\r\n\r\nexport class Payment implements PaymentInterface{\r\n    public id?: number;\r\n    // paymentDate\r\n\tpublic dateOfPayment: Date;\r\n\tpublic paymentDescription: string;\r\n\tpublic paymentAmount: number;\r\n   \r\n    constructor(paymentConf:PaymentInterface){\r\n        this.id=paymentConf.id;\r\n        this.dateOfPayment=paymentConf.dateOfPayment;\r\n        this.paymentDescription=paymentConf.paymentDescription;\r\n        this.paymentAmount=paymentConf.paymentAmount;\r\n        }\r\n}\r\ninterface PaymentInterface{\r\n    id?:number;\r\n    dateOfPayment:Date;\r\n    paymentDescription:string;\r\n    paymentAmount:number;\r\n  \r\n}","import { Identifiers } from \"@angular/compiler\";\r\nimport { Exam } from \"./exam\";\r\nimport { PreexamObligationType } from \"./preexam-obligation-type\";\r\nimport { PreexamObligationStatus } from \"./preexam-obligation-status\";\r\n\r\nexport class PreexamObligation implements preexamObligationInterface {\r\n\r\n    public id?:number;\r\n\tpublic points:number;\r\n\tpublic location:String;\r\n\tpublic dateOfObligation:String;\r\n\tpublic passed:boolean; \r\n\tpublic exam:Exam;\r\n\tpublic preexamObligationType:PreexamObligationType;\r\n\tpublic preexamObligationStatus:PreexamObligationStatus;\r\n\r\n\tconstructor(preexamObligationCfg:preexamObligationInterface){\r\n        this.id= preexamObligationCfg.id;\r\n        this.points= preexamObligationCfg.points;\r\n        this.location= preexamObligationCfg.location;\r\n\t\tthis.dateOfObligation= preexamObligationCfg.dateOfObligation;\r\n\t//\tthis.passed= preexamObligationCfg.passed;\r\n\t//\tthis.exam= preexamObligationCfg.exam;\r\n\t//\tthis.preexamObligationType= preexamObligationCfg.preexamObligationType;\r\n\t//\tthis.preexamObligationStatus= preexamObligationCfg.preexamObligationStatus;\r\n\r\n    }\r\n}\r\ninterface preexamObligationInterface{\r\n\tid?: number;\r\n    points: number;\r\n    location: String;\r\n    dateOfObligation:String;\r\n   // passed:boolean;\r\n   // exam:Exam;\r\n   // preexamObligationType:PreexamObligationType;\r\n   // preexamObligationStatus:PreexamObligationStatus;\r\n}","import { Identifiers } from \"@angular/compiler\";\r\nimport { User } from \"./user\";\r\n\r\nexport class Professor implements ProfessorInterface {\r\n    \r\n    public id?: number;\r\n    public firstName: string;\r\n    public lastName: string;\r\n    public user:User;\r\n\r\n    constructor(professorCfg:ProfessorInterface){\r\n        this.id= professorCfg.id;\r\n        this.firstName= professorCfg.firstName;\r\n        this.lastName= professorCfg.lastName;\r\n        this.user=professorCfg.user;\r\n    }\r\n\r\n}\r\n\r\ninterface ProfessorInterface{\r\n    user: User;\r\n    id?: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    \r\n}\r\n","import { Identifiers } from \"@angular/compiler\";\r\nimport { FinancialCard } from \"./financial-card\";\r\nimport { TypeOfFinancing } from \"./type-of-financing\";\r\nimport { User } from \"./user\";\r\n\r\n\r\nexport class Student implements StudentInterface {\r\n   \tpublic id?:number;\t\r\n\tpublic cardNumber:String;\r\n\tpublic firstName:String;\r\n\tpublic lastName:String;\r\n\tpublic phoneNumber:String;\r\n\tpublic email:String;\r\n\tpublic umnc:String;\r\n\tpublic startedCollegeIn:number;\r\n\tpublic modelNumber:number;\r\n\tpublic referenceNumber:String ;\r\n\tpublic accountNumber:String ;\r\n\t//testno \r\n\tpublic cardAmount:number; \r\n    public  typeOfFinancing:TypeOfFinancing;\r\n\tpublic financialCards:FinancialCard;\r\n    public user:User;\r\n\r\n    \r\n    constructor(studentCfg:StudentInterface)\r\n\t{\t\r\n\t\tthis.id = studentCfg.id;\r\n\t\tthis.cardNumber = studentCfg.cardNumber;\r\n        this.email=studentCfg.email;\r\n        this.modelNumber=studentCfg.modelNumber;\r\n        this.phoneNumber=studentCfg.phoneNumber;\r\n        this.financialCards=studentCfg.financialCards;\r\n        this.referenceNumber=studentCfg.referenceNumber;\r\n        this.typeOfFinancing=studentCfg.typeOfFinancing;\r\n        this.umnc=studentCfg.umnc;\r\n        this.startedCollegeIn=studentCfg.startedCollegeIn;\r\n        this.cardAmount=studentCfg.cardAmount;\r\n        this.accountNumber=studentCfg.accountNumber;\r\n\t\tthis.firstName = studentCfg.firstName;\r\n\t\tthis.lastName = studentCfg.lastName;\r\n        this.user=studentCfg.user;\r\n\t}\r\n \r\n}\r\ninterface StudentInterface {\r\n    id?: number;\r\n    firstName: String;\r\n    lastName: String;\r\n    phoneNumber:String;\r\n    cardNumber:String;\r\n    email:String;\r\n    umnc:String;\r\n    startedCollegeIn:number;\r\n    modelNumber:number;\r\n    referenceNumber:String ;\r\n    accountNumber:String ;\r\n    typeOfFinancing:TypeOfFinancing;\r\n    cardAmount:number;\r\n    financialCards:FinancialCard;\r\n    user:User\r\n}\r\n","import { Authority } from \"./authority\";\r\n\r\nexport class User implements UserInterface{\r\n\r\n        public id?: number;\r\n        public username: string;\r\n        public password: string;\r\n        public authorities: Authority[];\r\n    \r\n        constructor(userConf:UserInterface) {\r\n            this.id= userConf.id;\r\n            this.username= userConf.username;\r\n            this.password=userConf.password;\r\n            this.authorities = userConf.authorities;\r\n        }\r\n    }\r\n\r\ninterface UserInterface{\r\n    id?:number;\r\n    username:string;\r\n    password:string;\r\n    authorities: Authority[];\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Payment } from '../model/payment';\r\nimport { PaymentService } from '../payment/payment.service';\r\n\r\n@Component({\r\n  selector: 'app-payment-details',\r\n  templateUrl: './payment-details.component.html',\r\n  styleUrls: ['./payment-details.component.css']\r\n})\r\nexport class PaymentDetailsComponent implements OnInit {\r\n\r\n  payment: Payment = new Payment({\r\n    dateOfPayment : null, \r\n    paymentAmount : 0, \r\n    paymentDescription : '',\r\n    // financialCard : null\r\n  });\r\n\r\n  mode : string = 'ADD'; \r\n\r\n  constructor(private paymentService : PaymentService, private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params: Params) => \r\n      this.paymentService.getPayment(+params['id'])))\r\n      .subscribe(res => {\r\n        this.payment = res.body;\r\n      })\r\n    }\r\n  }\r\n\r\n  private edit() : void {\r\n    this.paymentService.editPayment(this.payment)\r\n    .subscribe(payment => {\r\n      this.paymentService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack() : void {\r\n    this.location.back();\r\n  }\r\n\r\n  private add() : void {\r\n    this.paymentService.addPayment(this.payment)\r\n    .subscribe(res => {\r\n      this.paymentService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  save() : void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  } \r\n\r\n}\r\n","<div>\r\n    <h3>Payment</h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Date of payment: </label>\r\n            <input type=\"text\" [(ngModel)]=\"payment.dateOfPayment\" placeholder=\"Date of payment\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Payment amount: </label>\r\n            <input type=\"text\" [(ngModel)]=\"payment.paymentAmount\" placeholder=\"Payment amount\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Payment description: </label>\r\n            <input type=\"text\" [(ngModel)]=\"payment.paymentDescription\" placeholder=\"Payment description\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n\r\n  dateOfPayment : new Date(), \r\n  paymentAmount : 0, \r\n  paymentDescription : '',\r\n  financialCard : null","<table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Date of payment <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Payment description <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Payment amount <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let payment of payments\">\r\n        <td>{{payment.dateOfPayment}}</td>\r\n        <td>{{payment.paymentDescription}}</td>\r\n        <td>{{payment.paymentAmount}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n     </div> \r\n  ","import { Location } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Payment } from '../model/payment';\r\nimport { Student } from '../model/student';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.css']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  student:Student = {\r\n    id: 0,\r\n    firstName: \"\",\r\n    phoneNumber:\"\",\r\n    email:\"\",\r\n    umnc:\"\",\r\n    startedCollegeIn:0,\r\n    modelNumber:0,\r\n    referenceNumber:null,\r\n    cardAmount:0,\r\n    typeOfFinancing:{\r\n      id:0,\r\n      name:\"\",\r\n      code:\"\"\r\n    },\r\n    lastName: \"\",\r\n    cardNumber: \"\",\r\n    financialCards:{\r\n      id:0,\r\n      initialState:0,\r\n      totalPayment:0,\r\n      totalPayout:0,\r\n      totalCost:0\r\n\r\n    },\r\n    accountNumber: \"\",\r\n    user: {\r\n      username: \"\",\r\n      password: \"\",\r\n      authorities: []\r\n    }\r\n  };\r\n   payments?: Payment[];\r\n\r\n   \r\n\r\n  constructor(private studentService: StudentService, private router: Router,private authService:AuthenticationService,private location:Location) {\r\n   \r\n   }\r\n  //  getMe():void{\r\n  //   this.studentService.getStudentMe().subscribe( res => (this.student = res));\r\n  //   console.log(this.student);\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    this.studentService.getStudentMe().subscribe( res => { (this.student = res)\r\n        this.studentService.getStudentPayment(res).subscribe(res => this.payments=res);\r\n \r\n  });\r\n   \r\n    // this.getPayment(this.student);\r\n  }\r\n  \r\n  // getPayment(student:Student){\r\n  //   this.studentService.getStudentPayment(this.student).subscribe(res=>this.payments=res);\r\n  //   console.log(this.payments);\r\n  // }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Payment } from '../model/payment';\r\n\r\nconst baseUrl = \"https://localhost:8443/api/payments\"; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentService {\r\n\r\n  private paymentUrl = \"api/payment\";\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationService) { }\r\n\r\n  getAll(params: any): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<any>(baseUrl, { params, headers:headers });\r\n  }\r\n\r\n  get(id: number): Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n  create(data: any) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.post(baseUrl, data, {headers:headers});\r\n  }\r\n\r\n  update(id: number, data: any) : Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n     return this.http.put(`${baseUrl}/${id}`, data, {headers:headers});\r\n  }\r\n\r\n  delete(id: number) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(baseUrl, {headers:headers});\r\n  }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange(){\r\n    this.RegenerateData.next();\r\n  }\r\n\r\n  getPayments() : Observable<HttpResponse<Payment[]>> {\r\n    return this.http.get<Payment[]>(this.paymentUrl, {observe: 'response'});\r\n  }\r\n\r\n  getPayment(id: number) : Observable<HttpResponse<Payment>> {\r\n    const url = `${this.paymentUrl}/${id}`;\r\n    return this.http.get<Payment>(url, {observe: 'response'});\r\n  }\r\n\r\n  addPayment(payment: Payment) : Observable<HttpResponse<Payment>> {\r\n    return this.http.post<Payment>(this.paymentUrl, payment, {observe: 'response'});\r\n  }\r\n\r\n  editPayment(payment: Payment) : Observable<HttpResponse<Payment>> {\r\n    return this.http.put<Payment>(this.paymentUrl, payment, {observe: 'response'});\r\n  }\r\n\r\n  deletePayment(id: number) : Observable<HttpResponse<Payment>> {\r\n    const url = `${this.paymentUrl}/${id}`;\r\n    return this.http.delete<any>(url, {observe: 'response'});\r\n  }\r\n}\r\n","\r\n     <table class=\"table table-striped pera\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date of payout <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n          <th>Payout description <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n          <th>Payout amount <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let payout of payouts\">\r\n          <td>{{payout.dateOfPayout}}</td>\r\n          <td>{{payout.descriptionOfPayout}}</td>\r\n          <td>{{payout.amountOfPayout}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div>\r\n      <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n       </div> \r\n    \r\n\r\n  ","import { Location } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Payout } from '../model/payout';\r\nimport { Student } from '../model/student';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-payout',\r\n  templateUrl: './payout.component.html',\r\n  styleUrls: ['./payout.component.css']\r\n})\r\nexport class PayoutComponent implements OnInit {\r\n  student:Student = {\r\n    id: 0,\r\n    firstName: \"\",\r\n    phoneNumber:\"\",\r\n    email:\"\",\r\n    umnc:\"\",\r\n    startedCollegeIn:0,\r\n    modelNumber:0,\r\n    referenceNumber:null,\r\n    cardAmount:0,\r\n    typeOfFinancing:{\r\n      id:0,\r\n      name:\"\",\r\n      code:\"\"\r\n    },\r\n    lastName: \"\",\r\n    cardNumber: \"\",\r\n    financialCards:{\r\n      id:0,\r\n      initialState:0,\r\n      totalPayment:0,\r\n      totalPayout:0,\r\n      totalCost:0\r\n\r\n    },\r\n    accountNumber: \"\",\r\n    user: {\r\n      username: \"\",\r\n      password: \"\",\r\n      authorities: []\r\n    }\r\n  };\r\n   payouts?:Payout[];\r\n  constructor(private studentService: StudentService, private router: Router,private authService:AuthenticationService,private location:Location) { \r\n   \r\n  }\r\n  // getMe():void{\r\n  //   this.studentService.getStudentMe().subscribe( res => (this.student = res));\r\n  //   console.log(this.student);\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    this.studentService.getStudentMe().subscribe( res => { (this.student = res)\r\n      this.studentService.getStudentPayout(res).subscribe(res => this.payouts=res);\r\n  \r\n    });\r\n    \r\n   \r\n  }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n}\r\n//   getPayout()\r\n//   {\r\n//     this.studentService.getStudentPayout(this.student).subscribe(res=>this.payouts=res);\r\n//     console.log(this.payouts);  }\r\n// }\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\nimport { PreexamObligationService } from '../preexam-obligation/preexam-obligation.service';\r\n\r\n@Component({\r\n  selector: 'app-preexam-obligation-details',\r\n  templateUrl: './preexam-obligation-details.component.html',\r\n  styleUrls: ['./preexam-obligation-details.component.css']\r\n})\r\nexport class PreexamObligationDetailsComponent implements OnInit {\r\n\r\n  preexamObligation: PreexamObligation = new PreexamObligation({\r\n    points : 0, \r\n    location : '',\r\n    dateOfObligation : '',\r\n    //passed : false, \r\n    //preexamObligationStatus : null, \r\n    //preexamObligationType : null,\r\n   // exam : null\r\n  });\r\n\r\n  mode : string = 'ADD'; \r\n\r\n  constructor(private preexamObligationService : PreexamObligationService,private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params : Params) =>\r\n      this.preexamObligationService.getPreexamObligation(+params['id'])))\r\n      .subscribe(res => {\r\n        this.preexamObligation = res.body;\r\n      });\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add() : void {\r\n    this.preexamObligationService.addPreexamObligation(this.preexamObligation)\r\n    .subscribe(res => {\r\n      this.preexamObligationService.announceChange(); \r\n      this.goBack();\r\n    })\r\n  } \r\n\r\n  private edit() : void {\r\n    this.preexamObligationService.editPreexamObligation(this.preexamObligation)\r\n    .subscribe(preexamObligation => {\r\n      this.preexamObligationService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack() : void {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n}\r\n","<div>\r\n    <h3>Preexam Obligation</h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Points: </label>\r\n            <input type=\"text\" [(ngModel)]=\"preexamObligation.points\" placeholder=\"Points\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Location: </label>\r\n            <input type=\"text\" [(ngModel)]=\"preexamObligation.location\" placeholder=\"Location\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Date of obligation: </label>\r\n            <input type=\"text\" [(ngModel)]=\"preexamObligation.dateOfObligation\" placeholder=\"Date of obligation\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Passed: </label>\r\n            <select [(ngModel)]=\"preexamObligation.passed\" class=\"form-control\", id=\"field1c\", name=\"field1\">\r\n                <option value=\"true\">True</option>\r\n                <option value=\"false\"> False </option>\r\n            </select>\r\n        </div>\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n\r\n<!-- dodati status i tip -->","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\n\r\nconst baseUrl = \"https://localhost:8443/api/preexamObligations\"; \r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class PreexamObligationService {\r\n\r\n  private path=\"api/preexamObligation\";\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationService) { }\r\n\r\n  //Elena\r\n  ///////////////////////////////////////////////////////////\r\n  getAll(params: any): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<any>(baseUrl, { params, headers:headers });\r\n  }\r\n\r\n  get(id: number): Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n  create(data: any) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.post(baseUrl, data, {headers:headers});\r\n  }\r\n\r\n  update(id: number, data: any) : Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n     return this.http.put(`${baseUrl}/${id}`, data, {headers:headers});\r\n  }\r\n\r\n  delete(id: number) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(baseUrl, {headers:headers});\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////\r\n\r\n    private RegenerateData = new Subject<void>();\r\n\r\n    RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n    announceChange() {\r\n        this.RegenerateData.next();\r\n    }\r\n\r\n    getPreexamObligation(id: number) : Observable<HttpResponse<PreexamObligation>> {\r\n        const url = `${this.path}/${id}`;\r\n        return this.http.get<PreexamObligation>(url, {observe: 'response'});\r\n    }\r\n\r\n    getAllPreexamObligations(): Observable<HttpResponse<PreexamObligation[]>> {\r\n        return this.http.get<PreexamObligation[]>(this.path, {observe: 'response'});\r\n    }\r\n   \r\n    addPreexamObligation(preexamObligation: PreexamObligation) : Observable<HttpResponse<PreexamObligation>> {\r\n        return this.http.post<PreexamObligation>(this.path, preexamObligation, {observe: 'response'});\r\n    }\r\n\r\n    editPreexamObligation(preexamObligation: PreexamObligation) : Observable<HttpResponse<PreexamObligation>> {\r\n        return this.http.put<PreexamObligation>(this.path, preexamObligation, {observe: 'response'});\r\n    }\r\n\r\n    deletePreexamObligation(id: number) : Observable<HttpResponse<any>> {\r\n        const url = `${this.path}/${id}`;\r\n        return this.http.delete<any>(url, {observe: 'response'})\r\n    }\r\n\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Course } from '../model/course';\r\nimport { Professor } from '../model/professor';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-courses',\r\n  templateUrl: './professor-courses.component.html',\r\n  styleUrls: ['./professor-courses.component.css']\r\n})\r\nexport class ProfessorCoursesComponent implements OnInit {\r\n  \r\n  professor:Professor={\r\n    id:0,\r\n    firstName:\"\",\r\n    lastName:\"\",\r\n    user:{\r\n      id:0,\r\n      username:\"\",\r\n      password:\"\",\r\n      authorities: []\r\n    }\r\n  }\r\n  course:Course ;\r\n  constructor(private professorService: ProfessorService, private router: Router,private authService:AuthenticationService, private route:ActivatedRoute, private location:Location ) { }\r\n  \r\n\r\n  // getMe():void{\r\n  //   this.professorService.getMe().subscribe(res =>( this.professor=res));\r\n  //   console.log(this.professor);\r\n  // }\r\n  // getProfessorCourses(professor:Professor){\r\n  //   this.professorService.getProfessorsCourses(this.professor).subscribe(res=>this.courses=res)\r\n  // }\r\n  ngOnInit(): void {\r\n    this.professorService.getMe().subscribe(res =>{( this.professor=res)\r\n      this.professorService.getProfessorsCourses(res).subscribe(res=>this.course=res)\r\n \r\n    \r\n    });\r\n  \r\n    // this.getProfessorCourses(this.professor);\r\n    \r\n  }\r\n\r\n  \r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n}\r\n","<!-- <table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Title <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Code <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Ects <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Start Date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>End Date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let course of courses\">\r\n        <td>{{course.title}}</td>\r\n        <td>{{course.courseCode}}</td>\r\n        <td>{{course.ects}}</td>\r\n        <td>{{course.startDate}}</td>\r\n        <td>{{course.endDate}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  \r\n -->\r\n\r\n  <div>\r\n    <h3> Courses </h3>\r\n</div>\r\n\r\n<table class=\"table table-bordered\">\r\n    <tr>\r\n        <th> Title </th>\r\n        <th> Code </th>\r\n        <th> Ects</th>\r\n        <th> Start Date</th>\r\n        <th> End Date </th>\r\n    </tr>\r\n    <!-- <tr *ngFor=\"let course of courses\"> -->\r\n      <tr>\r\n      <td>{{course.title}}</td>\r\n      <td>{{course.courseCode}}</td>\r\n      <td>{{course.ects}}</td>\r\n      <td>{{course.startDate}}</td>\r\n      <td>{{course.endDate}}</td>\r\n    </tr>\r\n</table>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n","<div>\r\n    <h3> Exams </h3>\r\n</div>\r\n\r\n<table class=\"table table-bordered\">\r\n    <tr>\r\n        <th> Grade </th>\r\n        <th> Points</th>\r\n        <th> Exam date</th>\r\n        <th> Status </th>\r\n    </tr>\r\n    <tr *ngFor=\"let exam of exams\">\r\n        <td>\r\n            {{exam.grade}}\r\n        </td>\r\n        <td>\r\n            {{exam.points}}\r\n        </td>\r\n        <td>\r\n            {{exam.examDate}}\r\n        </td>\r\n        <td>\r\n            {{exam.status}}\r\n        </td>\r\n    </tr>\r\n</table>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ExamService } from '../exam/exam.service';\r\nimport { Exam } from '../model/exam';\r\nimport { Professor } from '../model/professor';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-exams',\r\n  templateUrl: './professor-exams.component.html',\r\n  styleUrls: ['./professor-exams.component.css']\r\n})\r\nexport class ProfessorExamsComponent implements OnInit {\r\n  exams : Exam[];\r\n  professor:Professor={\r\n    firstName:\"\",\r\n    lastName:\"\",\r\n    user:{\r\n      id:0,\r\n      username:\"\",\r\n      password:\"\",\r\n      authorities: []\r\n    }\r\n  }\r\n\r\n  constructor(private professorService: ProfessorService, private router: Router,private location:Location) {\r\n    \r\n  }\r\n  // getMe():void{\r\n  //   this.professorService.getMe().subscribe(res =>( this.professor=res));\r\n  //   console.log(this.professor);\r\n  // }\r\n  // getProfessorExams(professor:Professor){\r\n  //   this.professorService.getProfessorExams(this.professor).subscribe(res=>this.exams=res)\r\n  // }\r\n  ngOnInit(): void {\r\n    this.professorService.getMe().subscribe(res =>{( this.professor=res)\r\n      this.professorService.getProfessorExams(this.professor).subscribe(res=>this.exams=res)\r\n \r\n    });\r\n  \r\n    // this.getProfessorExams(this.professor);\r\n\r\n  }\r\n// getProfessorStudents(professor:Professor){\r\n//     this.professorService.getProfessorExams(this.professor).subscribe(res=>this.exams=res)\r\n//   }\r\n    \r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Professor } from '../model/professor';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-profile',\r\n  templateUrl: './professor-profile.component.html',\r\n  styleUrls: ['./professor-profile.component.css']\r\n})\r\nexport class ProfessorProfileComponent implements OnInit {\r\n  professor= new Professor({\r\n    firstName:'',\r\n    lastName:'',\r\n    user:{\r\n      id:0,\r\n      username:\"\",\r\n      password:\"\",\r\n      authorities: []\r\n    }\r\n  })\r\n\r\n  constructor(private location:Location,private professorService: ProfessorService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.professorService.getMe().subscribe( (professor) => (this.professor = professor));\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h3>Professor</h3>\r\n  </div>\r\n  \r\n  <div>\r\n  \r\n    <form >\r\n          <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\">First name</label>\r\n            <input type=\"text\" [(ngModel)]=\"professor.firstName\" placeholder=\"First name\" \r\n               class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label for=\"field2c\" class=\"form-control-label\">Last name</label>\r\n            <input type=\"text\" [(ngModel)]=\"professor.lastName\" placeholder=\"Last name\" \r\n               class=\"form-control\" id=\"field2c\" name=\"field2\">\r\n          </div>\r\n         \r\n         \r\n     </form>\r\n     </div>\r\n\r\n     <div>\r\n      <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n    </div>\r\n\r\n","\r\n  \r\n<table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Card number <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Firstname <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Lastname <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Phone number <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Email<button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      \r\n        <th>UMNC<button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>      </tr>\r\n        \r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let student of students\">\r\n        <td>{{student.cardNumber}}</td>\r\n        <td>{{student.firstName}}</td>\r\n        <td>{{student.lastName}}</td>\r\n        <td>{{student.phoneNumber}}</td>\r\n        <td>{{student.email}}</td>\r\n        <td>{{student.umnc}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n  \r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Professor } from '../model/professor';\r\nimport { Student } from '../model/student';\r\nimport { ProfessorService } from '../professor/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-students',\r\n  templateUrl: './professor-students.component.html',\r\n  styleUrls: ['./professor-students.component.css']\r\n})\r\nexport class ProfessorStudentsComponent implements OnInit {\r\n  students:Student [];\r\n  professor:Professor={\r\n    firstName:\"\",\r\n    lastName:\"\",\r\n    user:{\r\n      id:0,\r\n      username:\"\",\r\n      password:\"\",\r\n      authorities: []\r\n    }\r\n  }\r\n  constructor(private professorService:ProfessorService,private location:Location,private router:Router) { }\r\n\r\n\r\n  // getMe():void{\r\n  //   this.professorService.getMe().subscribe(res =>( this.professor=res));\r\n  //   console.log(this.professor);\r\n  // }\r\n\r\n  // getProfessorStudents(professor:Professor){\r\n  //   this.professorService.getProfessorStudents(this.professor).subscribe(res=>this.students=res)\r\n  // }\r\n \r\n  ngOnInit(): void {\r\n    this.professorService.getMe().subscribe(res =>{( this.professor=res)\r\n      this.professorService.getProfessorStudents(res).subscribe(res=>this.students=res)\r\n \r\n    });\r\n \r\n    // this.getProfessorStudents(this.professor);\r\n  }\r\n\r\n  goBack() : void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Course } from '../model/course';\r\nimport { Student } from '../model/student';\r\nimport { Professor } from '../model/professor';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Exam } from '../model/exam';\r\nconst path = \"https://localhost:8443/api/professors/\"; \r\nconst path1=\"https://localhost:8443/api/professors/professors\"\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfessorService {\r\n\r\n\r\n  constructor(private http: HttpClient, private authService:AuthenticationService) { }\r\n\r\n    private RegenerateData = new Subject<void>();\r\n\r\n    RegenerateData$ = this.RegenerateData.asObservable();\r\n   \r\n   \r\n    getAll(params: any): Observable<any> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n      return this.http.get<any>(path1, { params,headers:headers });\r\n    }\r\n    \r\n    get(id: number): Observable<any>{\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n      return this.http.get(`${path1}/${id}`, { headers:headers });\r\n    }\r\n  \r\n    create(data: any) : Observable<any> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.post(path, data, {headers:headers});\r\n    }\r\n  \r\n    update(id: number, data: any) : Observable<any>{\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n      return this.http.put(`${path1}/${id}`, data, {headers:headers});\r\n  }\r\n  \r\n    delete(id: number) : Observable<any> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n      return this.http.delete(`${path1}/${id}`, {headers:headers});\r\n   }\r\n    announceChange() {\r\n        this.RegenerateData.next();\r\n    }\r\n    addProfessor(professor: Professor): Observable<HttpResponse<Professor>> {\r\n      return this.http.post<Professor>(path, professor, {observe: 'response'});\r\n    }\r\n\r\n  editProfessor(professor: Professor): Observable<HttpResponse<Professor>> {\r\n      return this.http.put<Professor>(path, professor, {observe: 'response'});\r\n    }\r\n\r\n  deleteProfessor(professorId: number): Observable<HttpResponse<any>> {\r\n      const url = `${path}/${professorId}`;\r\n      return this.http.delete<any>(url, {observe: 'response'});\r\n    }\r\n    getProfessors(): Observable<HttpResponse<Professor[]>> {\r\n      return this.http.get<Professor[]>(path, {observe: 'response'});\r\n    }\r\n\r\n    getProfessor(id:number):Observable<HttpResponse<Professor[]>>{\r\n      const url=`${path}/{id}`;\r\n      return this.http.get<Professor[]>(url, {observe: 'response'});\r\n    } \r\n\r\n    getMe(){\r\n      \r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n      return this.http.get<Professor>(path+\"/me\", {headers: headers});\r\n    \r\n    }\r\n    getProfessorStudents(professor:Professor): Observable<Student[]> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n      const url = `${path}/${professor.id}/professorStudents`;\r\n    \r\n      return this.http.get<Student[]>(url, {headers: headers});\r\n        }\r\n\r\n    getProfessorsCourses(professor:Professor): Observable<Course> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n      const url = `${path}/${professor.id}/proffesorCourses`;\r\n    \r\n      return this.http.get<Course>(url, {headers: headers});\r\n     }\r\n    getProfessorExams(professor:Professor): Observable<Exam[]> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n      const url = `${path}/${professor.id}/professorExams`;\r\n    \r\n      return this.http.get<Exam[]>(url, {headers: headers});\r\n        }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminAddExamPeriodComponent } from '../admin-add-exam-period/admin-add-exam-period.component';\r\nimport { AdminAddFinancialCardComponent } from '../admin-add-financial-card/admin-add-financial-card.component';\r\nimport { AdminAddPaymentComponent } from '../admin-add-payment/admin-add-payment.component';\r\nimport { AdminAddPreexamObligationComponent } from '../admin-add-preexam-obligation/admin-add-preexam-obligation.component';\r\nimport { AdminAddStudentComponent } from '../admin-add-student/admin-add-student.component';\r\nimport { AdminAddCourseComponent } from '../admin-add-course/admin-add-course.component';\r\nimport { AdminAddExamComponent } from '../admin-add-exam/admin-add-exam.component';\r\nimport { AdminAddProfessorComponent } from '../admin-add-professor/admin-add-professor.component';\r\nimport { AdminDetailsExamComponent } from '../admin-details-exam/admin-details-exam.component';\r\nimport { AdminDetailsCourseComponent } from '../admin-details-course/admin-details-course.component';\r\nimport { AdminDetailsProfessorComponent } from '../admin-details-professor/admin-details-professor.component';\r\nimport { AdminDetailsExamPeriodComponent } from '../admin-details-exam-period/admin-details-exam-period.component';\r\nimport { AdminDetailsFinancialCardComponent } from '../admin-details-financial-card/admin-details-financial-card.component';\r\nimport { AdminDetailsPaymentComponent } from '../admin-details-payment/admin-details-payment.component';\r\nimport { AdminDetailsPreexamObligationComponent } from '../admin-details-preexam-obligation/admin-details-preexam-obligation.component';\r\nimport { AdminDetailsStudentComponent } from '../admin-details-student/admin-details-student.component';\r\nimport { AdminListExamComponent } from '../admin-list-exam/admin-list-exam.component';\r\nimport { AdminListCourseComponent } from '../admin-list-course/admin-list-course.component';\r\nimport { AdminListProfessorComponent } from '../admin-list-professor/admin-list-professor.component';\r\nimport { AdminListExamPeriodComponent } from '../admin-list-exam-period/admin-list-exam-period.component';\r\nimport { AdminListFinancialCardComponent } from '../admin-list-financial-card/admin-list-financial-card.component';\r\nimport { AdminListPaymentComponent } from '../admin-list-payment/admin-list-payment.component';\r\nimport { AdminListPreexamObligationComponent } from '../admin-list-preexam-obligation/admin-list-preexam-obligation.component';\r\nimport { AdminListStudentsComponent } from '../admin-list-students/admin-list-students.component';\r\nimport { NavbarProfessorComponent } from '../core/navbar-professor/navbar-professor.component';\r\nimport { FinancialcardStudentComponent } from '../financialcard-student/financialcard-student.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { MainComponent } from '../main/main.component';\r\nimport { PaymentDetailsComponent } from '../payment-details/payment-details.component';\r\nimport { PaymentComponent } from '../payment/payment.component';\r\nimport { PayoutComponent } from '../payout/payout.component';\r\nimport { ProfessorCoursesComponent } from '../professor-courses/professor-courses.component';\r\nimport { ProfessorExamsComponent } from '../professor-exams/professor-exams.component';\r\nimport { ProfessorProfileComponent } from '../professor-profile/professor-profile.component';\r\nimport { ProfessorStudentsComponent } from '../professor-students/professor-students.component';\r\nimport { StudentDetailsComponent } from '../student-details/student-details.component';\r\nimport { StudentDocumentsComponent } from '../student-documents/student-documents.component';\r\nimport { StudentEnrollmentComponent } from '../student-enrollment/student-enrollment.component';\r\nimport { StudentExamsComponent } from '../student-exams/student-exams.component';\r\nimport { StudentProfileComponent } from '../student-profile/student-profile.component';\r\nimport { AdminExamComponent } from '../admin-exam/admin-exam.component';\r\nimport { AdminListUserComponent } from '../admin-list-user/admin-list-user.component';\r\nimport { AdminAddUserComponent } from '../admin-add-user/admin-add-user.component';\r\nimport { AdminDetailsUserComponent } from '../admin-details-user/admin-details-user.component';\r\n\r\nimport { StudentpreexamobligationsComponent } from '../studentpreexamobligations/studentpreexamobligations.component';\r\nimport { AdminProfileComponent } from '../admin-profile/admin-profile.component';\r\nimport { StudentService } from '../students/student.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'preexamObligations', component: AdminListPreexamObligationComponent},\r\n  { path: 'preexamObligations/:id', component: AdminDetailsPreexamObligationComponent},\r\n  { path: 'adminAddPreexamObligation', component: AdminAddPreexamObligationComponent},\r\n  { path: 'financialCard', component: FinancialcardStudentComponent },\r\n  { path: 'registerExam/:examid', component: StudentpreexamobligationsComponent },\r\n  \r\n  { path: 'studentPreexamObligations/:examid', component: StudentpreexamobligationsComponent },\r\n  { path: 'studentProfile', component: StudentProfileComponent },\r\n  { path: 'payment', component: PaymentComponent },\r\n  { path: 'payouts', component: PayoutComponent },\r\n  { path: 'coursesForProfessor', component: ProfessorCoursesComponent },\r\n  { path: 'studentEnrollments', component: StudentEnrollmentComponent },\r\n  { path: 'adminExam',component:AdminExamComponent},\r\n  { path: 'studentExams', component: StudentExamsComponent },\r\n  { path: 'studentDocuments', component:StudentDocumentsComponent},\r\n  { path: 'professorProfile', component: ProfessorProfileComponent},\r\n  { path: 'studentsForProfessor', component: ProfessorStudentsComponent},\r\n  { path: 'examsForProfessor', component: ProfessorExamsComponent},\r\n  { path: 'studentsForProfessor', component: ProfessorStudentsComponent},\r\n  { path: 'examsForProfessor', component: ProfessorExamsComponent},\r\n  { path: 'studentPayment', component: PaymentComponent },\r\n  { path: 'studentPayout', component: PayoutComponent },\r\n  { path: 'main', component: MainComponent },\r\n  { path: 'exams', component: AdminListExamComponent },\r\n  { path: 'exams/:id', component: AdminDetailsExamComponent },\r\n  { path: 'adminAddExam', component: AdminAddExamComponent },\r\n  { path: 'courses', component: AdminListCourseComponent },\r\n  { path: 'courses/:id', component: AdminDetailsCourseComponent },\r\n  { path: 'adminAddCourse', component: AdminAddCourseComponent },\r\n  { path: 'professors', component: AdminListProfessorComponent },\r\n  { path: 'professors/:id', component: AdminDetailsProfessorComponent },\r\n  { path: 'addProfessor', component: AdminAddProfessorComponent }, \r\n  { path: 'examPeriods', component: AdminListExamPeriodComponent },\r\n  { path: 'examPeriods/:id', component: AdminDetailsExamPeriodComponent },\r\n  { path: 'addExamPeriod', component: AdminAddExamPeriodComponent },\r\n  { path: 'students', component: AdminListStudentsComponent },\r\n  { path: 'students/:id', component: AdminDetailsStudentComponent },\r\n  { path: 'adminAddsStudent', component: AdminAddStudentComponent },\r\n  { path: 'financialCards', component: AdminListFinancialCardComponent},\r\n  { path: 'financialCards/:id', component: AdminDetailsFinancialCardComponent}, \r\n  { path: 'adminAddFinancialCard', component: AdminAddFinancialCardComponent},\r\n  { path: 'payments', component: AdminListPaymentComponent},\r\n  { path: 'payments/:id', component: AdminDetailsPaymentComponent},\r\n  { path: 'adminAddPayment', component: AdminAddPaymentComponent},\r\n  { path: 'addStudent', component: StudentDetailsComponent},\r\n  { path: 'editStudent/:id', component: StudentDetailsComponent},\r\n  { path: 'addPayment', component: PaymentDetailsComponent},\r\n  { path: 'editPayment/:id', component: PaymentDetailsComponent},\r\n  { path: 'users', component: AdminListUserComponent},\r\n  { path: 'addUser', component: AdminAddUserComponent},\r\n  { path: 'users/:id', component: AdminDetailsUserComponent},\r\n  { path: 'adminProfile', component: AdminProfileComponent},\r\n  //--kad login zakomentarisem prikazuje mi se lista svih korisnika //popraviti \r\n  { path: '**', component: LoginComponent },  \r\n  { path: 'professorCourses', component:NavbarProfessorComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash: false})],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n\r\n\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Student } from '../model/student';\r\nimport { TypeOfFinancing } from '../model/type-of-financing';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-details',\r\n  templateUrl: './student-details.component.html',\r\n  styleUrls: ['./student-details.component.css']\r\n})\r\nexport class StudentDetailsComponent implements OnInit {\r\n\r\n  student: Student = new Student({\r\n    user: null,\r\n    cardNumber : '', \r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNumber: '',\r\n    email: '',\r\n    umnc: '',\r\n    startedCollegeIn : 0,\r\n    modelNumber: 0,\r\n    referenceNumber: '',\r\n    accountNumber : '',\r\n    cardAmount : 0,\r\n    //testno\r\n    typeOfFinancing: null,\r\n    financialCards : null\r\n  });\r\n  \r\n  mode: string = 'ADD'; \r\n\r\n  constructor(private studentService: StudentService, private route: ActivatedRoute, private location: Location, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.route.snapshot.params['id']) {\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n      this.studentService.getStudent(+params['id'])))\r\n      .subscribe(res => {\r\n        this.student = res.body;\r\n      });\r\n    }\r\n  }\r\n\r\n  save() : void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.studentService.addStudent(this.student)\r\n    .subscribe(res => {\r\n      this.studentService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  private edit() : void {\r\n    this.studentService.editStudent(this.student)\r\n    .subscribe(student => {\r\n      this.studentService.announceChange();\r\n      this.goBack();\r\n    });\r\n  }\r\n\r\n  goBack() : void {\r\n    this.location.back(); \r\n  }\r\n}\r\n","<div>\r\n    <h3> About student </h3>\r\n</div>\r\n\r\n<div>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Card number: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.cardNumber\" placeholder=\"Card number\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> First name: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.firstName\" placeholder=\"First name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Last name: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Phone number: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Email:  </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Umnc:  </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Started college in:  </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Model number: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Reference number:  </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Account number: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Card amount: </label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n        </div>\r\n        <br/>\r\n        <br>\r\n        <!-- Mora se napraviti da se izvlaci objekat,kao i za studenta preexamObligation.passed --preexamObligation treba da bude objekat iz ts-a -->\r\n        <!-- <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\"> Passed: </label>\r\n            <select [(ngModel)]=\"preexamObligation.passed\" class=\"form-control\", id=\"field1c\", name=\"field1\">\r\n                <option value=\"true\">Self-financing</option>\r\n                <option value=\"false\"> Budget </option>\r\n            </select>\r\n        </div> -->\r\n        <br/>\r\n    </form>\r\n</div>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n\r\n ","<div>\r\n    <h3>Student</h3>\r\n  </div>\r\n  \r\n  <table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Title <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n          <th>Url <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Type <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Download <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n      \r\n    </thead>\r\n    <tbody>\r\n      \r\n      <tr *ngFor=\"let document of documents\">\r\n      \r\n        <td>{{document.title}}</td>\r\n        <td>{{document.url}}</td>\r\n        <td>{{document.documentType}}</td>\r\n        <td><button>{{document.download}}</button></td>\r\n       \r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div> \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Location } from '@angular/common';\r\nimport { StudentService } from '../students/student.service';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { Student } from '../model/student';\r\n\r\n\r\n@Component({\r\n  selector: 'app-student-documents',\r\n  templateUrl: './student-documents.component.html',\r\n  styleUrls: ['./student-documents.component.css']\r\n})\r\nexport class StudentDocumentsComponent implements OnInit {\r\n  documents:Document[];\r\n  student:Student ;\r\n  //= {\r\n  //   id: 0,\r\n  //   firstName: \"\",\r\n  //   phoneNumber:\"\",\r\n  //   email:\"\",\r\n  //   umnc:\"\",\r\n  //   startedCollegeIn:0,\r\n  //   modelNumber:0,\r\n  //   referenceNumber:null,\r\n  //   cardAmount:0,\r\n  //   typeOfFinancing:{\r\n  //     id:0,\r\n  //     name:\"\",\r\n  //     code:\"\"\r\n  //   },\r\n  //   lastName: \"\",\r\n  //   cardNumber: \"\",\r\n  //   financialCards:{\r\n  //     id:0,\r\n  //     initialState:0,\r\n  //     totalPayment:0,\r\n  //     totalPayout:0,\r\n  //     totalCost:0\r\n\r\n  //   },\r\n  //   accountNumber: \"\",\r\n  //   user: {\r\n  //     username: \"\",\r\n  //     password: \"\"\r\n  //   }\r\n  // };\r\n  \r\n \r\n  constructor(private studentService: StudentService, private router: Router,private authService:AuthenticationService,private route:ActivatedRoute,private location:Location) { \r\n  \r\n  }\r\n\r\n  // getMe():void{\r\n  //   this.studentService.getStudentMe().subscribe( student => (this.student = student));\r\n\r\n  // }\r\n  \r\n  ngOnInit(): void {\r\n    this.studentService.getStudentMe().subscribe( res => {(this.student = res)\r\n      this.studentService.getStudentDocument(res).subscribe(res=>this.documents=res)\r\n\r\n    });\r\n\r\n\r\n  }\r\n  // getDocuments(student:Student){\r\n  //   this.studentService.getStudentDocument(this.student).subscribe(res=>this.documents=this.documents)\r\n\r\n  // }\r\n \r\n  \r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  }\r\n\r\n","<table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Start date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>End date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Course name <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let enrollment of enrollments\">\r\n        <td>{{enrollment.startDate}}</td>\r\n        <td>{{enrollment.endDate}}</td>\r\n        <td>{{enrollment.courseName}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n     </div> \r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Enrollment } from '../model/enrollment';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { StudentService } from '../students/student.service';\r\nimport { Student } from '../model/student';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-student-enrollment',\r\n  templateUrl: './student-enrollment.component.html',\r\n  styleUrls: ['./student-enrollment.component.css']\r\n})\r\nexport class StudentEnrollmentComponent implements OnInit {\r\n  \r\n  enrollments: Enrollment[];\r\n  student:Student = {\r\n    id: 0,\r\n    firstName: \"\",\r\n    phoneNumber:\"\",\r\n    email:\"\",\r\n    umnc:\"\",\r\n    startedCollegeIn:0,\r\n    modelNumber:0,\r\n    referenceNumber:null,\r\n    cardAmount:0,\r\n    typeOfFinancing:{\r\n      id:0,\r\n      name:\"\",\r\n      code:\"\"\r\n    },\r\n    lastName: \"\",\r\n    cardNumber: \"\",\r\n    financialCards:{\r\n      id:0,\r\n      initialState:0,\r\n      totalPayment:0,\r\n      totalPayout:0,\r\n      totalCost:0\r\n\r\n    },\r\n    accountNumber: \"\",\r\n    user: {\r\n      username: \"\",\r\n      password: \"\",\r\n      authorities: []\r\n    }\r\n  };\r\n  \r\n   constructor(private studentService: StudentService, private router: Router,private authService:AuthenticationService,private route:ActivatedRoute,private location:Location) { \r\n  \r\n  }\r\n  // getMe():void{\r\n  //   this.studentService.getMeAgain().subscribe(res =>( this.student=res));\r\n  //   console.log(this.student);\r\n  // }\r\n  // getStudentEnrollment(student:Student){\r\n  //   this.studentService.getStudentEnrollment(this.student).subscribe(res=>this.enrollments=res);\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    this.studentService.getMeAgain().subscribe(res =>{( this.student=res)\r\n      this.studentService.getStudentEnrollment(res).subscribe(res=>this.enrollments=res);\r\n\r\n    });\r\n   \r\n    // this.getStudentEnrollment(this.student);\r\n  }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n  \r\n\r\n}\r\n","<table class=\"table table-striped pera\">\r\n    <thead>\r\n      <tr>\r\n        <th>Grade <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Points <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Exam date <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>\r\n        <th>Status <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>    \r\n        <th>Course name <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th> \r\n        <th>Preexam obligations for exam <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>     \r\n        <th>Register exam <button class=\"btn btn-link\"><span class=\"fa fa-sort\"></span></button> </th>     \r\n\r\n      </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let exam of exams\">\r\n        <td>{{exam.grade}}</td>\r\n        <td>{{exam.points}}</td>\r\n        <td>{{exam.examDate}}</td>\r\n        <td>{{exam.status}}</td>\r\n        <td>{{exam.courseName}}</td>\r\n        <td><button class=\"badge badge-warning\" routerLink=\"/studentPreexamObligations/{{ exam.id }}\">\r\n          Details</button></td>\r\n          <td ><button  class=\"badge badge-warning\"  (click)=\"register(exam.id)\">\r\n            Register exam</button></td>\r\n            \r\n       \r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n     </div> ","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Exam } from '../model/exam';\r\nimport { Student } from '../model/student';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-exams',\r\n  templateUrl: './student-exams.component.html',\r\n  styleUrls: ['./student-exams.component.css']\r\n})\r\nexport class StudentExamsComponent implements OnInit {\r\n\r\n  exams?:Exam[];\r\n  examId:number;\r\n  student:Student;\r\n  \r\n  \r\n\r\n  constructor(private studentService: StudentService, private route: ActivatedRoute, private router: Router,private authService:AuthenticationService,private location:Location) { \r\n    //  this.subscription = studentService.RegenerateData$.subscribe(() =>\r\n    //   //  this.getExams(studentId?:number)\r\n\r\n    //  );\r\n  }\r\n\r\n  \r\n  \r\n  ngOnInit(): void {\r\n    this.studentService.getMeAgain().subscribe(res =>{( this.student=res)\r\n      this.studentService.getStudentsExams(res).subscribe(res=>this.exams=res);\r\n\r\n    });\r\n \r\n  }\r\n\r\n  // getUserUsername(){\r\n  // //  this.studentService.getStudentUsername().subscribe(res=>this.student=this.student);\r\n  // }\r\n\r\n  // getStudentExams(studentId:number){\r\n  //   this.studentService.getStudentsExams(this.student.id);\r\n\r\n  // }\r\n\r\n\r\n  register(examId:number) {\r\n    // this.studentForRegister=this.studentService.getMeAgain().subscribe;\r\n     this.studentService.registerExam(this.student,examId);\r\n    \r\n    console.log(\"Student\"+this.student);\r\n    console.log(\"Exam id\"+examId )\r\n  }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Student } from '../model/student';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { StudentService } from '../students/student.service';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-student-profile',\r\n  templateUrl: './student-profile.component.html',\r\n  styleUrls: ['./student-profile.component.css']\r\n})\r\n\r\nexport class StudentProfileComponent implements OnInit {\r\n  student:Student = {\r\n    id: 0,\r\n    firstName: \"\",\r\n    phoneNumber:\"\",\r\n    email:\"\",\r\n    umnc:\"\",\r\n    startedCollegeIn:0,\r\n    modelNumber:0,\r\n    referenceNumber:null,\r\n    cardAmount:0,\r\n    typeOfFinancing:{\r\n      id:0,\r\n      name:\"\",\r\n      code:\"\"\r\n    },\r\n    lastName: \"\",\r\n    cardNumber: \"\",\r\n    financialCards:{\r\n      id:0,\r\n      initialState:0,\r\n      totalPayment:0,\r\n      totalPayout:0,\r\n      totalCost:0\r\n\r\n    },\r\n    accountNumber: \"\",\r\n    user: {\r\n      username: \"\",\r\n      password: \"\",\r\n      authorities: []\r\n    }\r\n  };\r\n  constructor(private location:Location,private studentService: StudentService, private route: ActivatedRoute) {}\r\n   \r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.studentService.getStudentMe().subscribe( student => (this.student = student));\r\n  }\r\n}\r\n","<div>\r\n    <h3>Student</h3>\r\n  </div>\r\n  \r\n  <div>\r\n  \r\n    <form >\r\n          <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\">Card number</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.cardNumber\" placeholder=\"Card number\" \r\n               class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label for=\"field2c\" class=\"form-control-label\">First name</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.firstName\" placeholder=\"First name\" \r\n               class=\"form-control\" id=\"field2c\" name=\"field2\">\r\n          </div>\r\n         \r\n          <div class=\"form-group\">\r\n            <label for=\"field3c\" class=\"form-control-label\">Last name</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.lastName\" placeholder=\"Last name\" \r\n               class=\"form-control\" id=\"field3c\" name=\"field3\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field4c\" class=\"form-control-label\">Phone number</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.phoneNumber\" placeholder=\"Phone number\" \r\n               class=\"form-control\" id=\"field4c\" name=\"field4\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field5c\" class=\"form-control-label\">Email</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.email\" placeholder=\"Email\" \r\n               class=\"form-control\" id=\"field5c\" name=\"field5\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"field6c\" class=\"form-control-label\">UMNC</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.umnc\" placeholder=\"Umns\" \r\n               class=\"form-control\" id=\"field6c\" name=\"field6\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"field7c\" class=\"form-control-label\">Started college in</label>\r\n            <input type=\"number\" [(ngModel)]=\"student.startedCollegeIn\" placeholder=\"Started college in\" \r\n               class=\"form-control\" id=\"field7c\" name=\"field7\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field8c\" class=\"form-control-label\">Model number</label>\r\n            <input type=\"number\" [(ngModel)]=\"student.modelNumber\" placeholder=\"Model number\" \r\n               class=\"form-control\" id=\"field8c\" name=\"field8\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field8c\" class=\"form-control-label\">Reference number</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.referenceNumber\" placeholder=\"Reference number\" \r\n               class=\"form-control\" id=\"field8c\" name=\"field8\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"field9c\" class=\"form-control-label\">Account number</label>\r\n            <input type=\"text\" [(ngModel)]=\"student.accountNumber\" placeholder=\"Account number\" \r\n               class=\"form-control\" id=\"field9c\" name=\"field9\">\r\n          </div>\r\n     </form>\r\n     \r\n  </div>\r\n  <div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n     </div> ","<div>\r\n    <h3> Exams </h3>\r\n</div>\r\n\r\n<table class=\"table table-bordered\">\r\n    <tr>\r\n        <th> Points </th>\r\n        <th> Location</th>\r\n        <th> Date of obligation</th>\r\n        <th> Passed </th>\r\n    </tr>\r\n    <tr *ngFor=\"let preexamObligation of preexamObligations\">\r\n        <td>\r\n            {{preexamObligation.points}}\r\n        </td>\r\n        <td>\r\n            {{preexamObligation.location}}\r\n        </td>\r\n        <td>\r\n            {{preexamObligation.dateOfObligation}}\r\n        </td>\r\n        <td>\r\n            {{preexamObligation.passed}}\r\n        </td>\r\n    </tr>\r\n</table>\r\n<div>\r\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\r\n  </div>\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\nimport { Student } from '../model/student';\r\nimport { StudentService } from '../students/student.service';\r\n\r\n@Component({\r\n  selector: 'app-studentpreexamobligations',\r\n  templateUrl: './studentpreexamobligations.component.html',\r\n  styleUrls: ['./studentpreexamobligations.component.css']\r\n})\r\nexport class StudentpreexamobligationsComponent implements OnInit {\r\n\r\n  preexamObligations?:PreexamObligation[];\r\n  student:Student;\r\n  examId:number;\r\n  studentForRegister:Student;\r\n  constructor(private studentService: StudentService, private route: ActivatedRoute,private router: Router,private authService:AuthenticationService,private location:Location) { }\r\n\r\n  ngOnInit() {\r\n    this.examId=+this.route.snapshot.paramMap.get('examid');\r\n    console.log(this.examId);\r\n\r\n    this.studentService.getMeAgain().subscribe(res =>{( this.student=res)\r\n      this.studentService.getStudentPreexamObligation(res,+this.route.snapshot.paramMap.get('examid')).subscribe(res=>this.preexamObligations=res)\r\n      \r\n    \r\n    });\r\n\r\n  }\r\n  //   this.studentService.getStudentMe().subscribe(res =>{(this.student = res)\r\n  //     if (this.route.snapshot.params['id']) {\r\n  //       // fetch student if we edit the existing student\r\n  //       this.route.params.pipe(switchMap((params: Params) => \r\n  //           this.studentService.getStudentPreexamObligation(this.student,+params['id']))) // convert to number\r\n  //           .subscribe(res =>\r\n  //             this.preexamObligations = res);\r\n  //             }\r\n  //         });\r\n  // }\r\n\r\n \r\n \r\n    goBack(): void {\r\n      this.location.back();\r\n           }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Student } from '../model/student';\r\nimport { Exam } from '../model/exam';\r\nimport { FinancialCard } from '../model/financial-card';\r\nimport { Payment } from '../model/payment';\r\nimport { Payout } from '../model/payout';\r\nimport { Enrollment } from '../model/enrollment';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { localizedString } from '@angular/compiler/src/output/output_ast';\r\nimport { PreexamObligation } from '../model/preexam-obligation';\r\n\r\nconst baseUrl = \"https://localhost:8443/api/student/students\"; \r\nconst baseUrl1=\"https://localhost:8443/api/student\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n\r\n  id: any;\r\n  studentId:any;\r\n\r\n  constructor(private http: HttpClient,private authService:AuthenticationService) {\r\n    \r\n   }\r\n  \r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n  \r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  //Elena\r\n  //////////////////////////////////////////////////////////\r\n\r\n  getAll(params: any): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<any>(baseUrl, { params , headers:headers});\r\n  }\r\n\r\n  get(id: number): Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n  create(data: any) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.post(baseUrl, data, {headers:headers});\r\n  }\r\n\r\n  update(id: number, data: any) : Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n     return this.http.put(`${baseUrl}/${id}`, data, {headers:headers});\r\n  }\r\n\r\n  delete(id: number) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(`${baseUrl}/${id}`, {headers:headers});\r\n  }\r\n\r\n //////////////////////////////////////////////////////////////\r\n\r\n\r\n  getStudents(): Observable<HttpResponse<Student[]>> {\r\n      return this.http.get<Student[]>(baseUrl, {observe: 'response'});\r\n    }\r\n\r\n  getStudent(id:number): Observable<HttpResponse<Student>> {\r\n      const url = `${baseUrl}/${id}`;\r\n      return this.http.get<Student>(url, {observe: 'response'});\r\n    }\r\n\r\n  addStudent(student: Student): Observable<HttpResponse<Student>> {\r\n      return this.http.post<Student>(baseUrl, student, {observe: 'response'});\r\n    }\r\n\r\n  editStudent(student: Student): Observable<HttpResponse<Student>> {\r\n      return this.http.put<Student>(baseUrl, student, {observe: 'response'});\r\n    }\r\n\r\n  deleteStudent(id: number): Observable<HttpResponse<any>> {\r\n      const url = `${baseUrl}/${id}`;\r\n      return this.http.delete<any>(url, {observe: 'response'});\r\n    }\r\n\r\n    getStudentsExams(student:Student): Observable<Exam[]> {\r\n\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n      const url = `${baseUrl1}/${student.id}/exams`;\r\n      return this.http.get<Exam[]>(url,{ headers:headers});\r\n      \r\n    }\r\n    \r\n    getStudentMe(): Observable<Student> {\r\n\r\n    \r\n        const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n        return this.http.get<Student>(baseUrl1 + \"/students/me\", {headers: headers});\r\n      \r\n \r\n}\r\ngetMeAgain(): Observable<Student> {\r\n\r\n    \r\n  const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n\r\n  return this.http.get<Student>(baseUrl1+\"/students\" + \"/me\", {headers: headers});\r\n\r\n\r\n}\r\n\r\n   getStudentFinancialCard(student:Student): Observable<FinancialCard> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n    const url = `${baseUrl1}/${student.id}/financial-card`;\r\n    return this.http.get<FinancialCard>(url,{ headers:headers});\r\n    \r\n    }\r\n    getStudentPayment(student:Student): Observable<Payment[]> {\r\n      const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n      const url = `${baseUrl1}/${student.id}/financial-payment`;\r\n      return this.http.get<Payment[]>(url,{ headers:headers});\r\n      \r\n  }\r\n\r\n  getStudentPayout(student:Student): Observable<Payout[]> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n    const url = `${baseUrl1}/${student.id}/financial-payout`;\r\n    return this.http.get<Payout[]>(url,{ headers:headers});\r\n      \r\n }\r\n getStudentPreexamObligation(student:Student,examid:number): Observable<PreexamObligation[]> {\r\n  const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n  \r\n  const url = `${baseUrl1}/${student.id}/preexamObligations/${examid}`;\r\n  return this.http.get<PreexamObligation[]>(url,{ headers:headers});\r\n    \r\n}\r\n\r\ngetStudentDocument(student:Student): Observable<Document[]> {\r\n  \r\n  const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n  const url = `${baseUrl1}/${student.id}/documents`;\r\n  return this.http.get<Document[]>(url,{ headers:headers});\r\n  \r\n}\r\ngetStudentEnrollment(student:Student): Observable<Enrollment[]> {\r\n  const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n  const url = `${baseUrl1}/${student.id}/enrollments`;\r\n  return this.http.get<Enrollment[]>(url,{ headers:headers});\r\n \r\n}\r\nregisterExam(student:Student,examId:number): Observable<HttpResponse<any>> {\r\n  const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    \r\n  const url = `${baseUrl1}/${student.id}/register-exam/${examId}`;\r\n  return this.http.post<any>(url,{observe: 'response'});\r\n \r\n}\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-students',\r\n  templateUrl: './students.component.html',\r\n  styleUrls: ['./students.component.css']\r\n})\r\nexport class StudentsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../login/authentication.service';\r\nimport { Authority } from '../model/authority';\r\nimport { User } from '../model/user';\r\n\r\nconst baseUrl = \"https://localhost:8443/api/users\"; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthenticationService) { }\r\n\r\n  getAll(params: any): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<any>(baseUrl, { params , headers:headers});\r\n  }\r\n  \r\n  get(id: number): Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get(`${baseUrl}/${id}`, {headers: headers} );\r\n  }\r\n\r\n  create(data: any) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.post(baseUrl, data, {headers:headers});\r\n  }\r\n\r\n  update(id: number, data: any) : Observable<any>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n     return this.http.put(`${baseUrl}/${id}`, data, {headers:headers});\r\n  }\r\n \r\n  editUser(user: User): Observable<HttpResponse<User>> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.put<User>(baseUrl, user, {observe: 'response', headers: headers});\r\n  }\r\n\r\n  delete(id: number) : Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(`${baseUrl}/${id}`, {headers: headers});\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.delete(baseUrl, {headers:headers});\r\n  }\r\n\r\n  getUnassignedAuthorities(username: string): Observable<HttpResponse<Authority[]>> {\r\n    const url = `${baseUrl}/${username}/unassigned-authorities`;\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<Authority[]>(url, {observe: 'response', headers:headers});\r\n}\r\n  \r\ngetLoggedUser(): Observable<User> {\r\n  //const url = `${baseUrl}/loggedUser`;\r\n  //return this.http.get<User>(url);\r\n  const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n  return this.http.get<User>(baseUrl + \"/loggedUser\", {headers: headers});\r\n\r\n}\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n  path : 'https://localhost:8443'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n\r\n\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}